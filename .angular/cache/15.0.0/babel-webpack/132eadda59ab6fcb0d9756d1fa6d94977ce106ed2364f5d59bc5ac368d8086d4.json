{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { context, propagation, trace, ROOT_CONTEXT } from '@opentelemetry/api';\nimport { otperformance, TRACE_PARENT_HEADER } from '@opentelemetry/core';\nimport { addSpanNetworkEvent, addSpanNetworkEvents, hasKey, PerformanceTimingNames as PTN } from '@opentelemetry/sdk-trace-web';\nimport { InstrumentationBase } from '@opentelemetry/instrumentation';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { VERSION } from './version';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { addSpanPerformancePaintEvents, getPerformanceNavigationEntries } from './utils';\n/**\n * This class represents a document load plugin\n */\nvar DocumentLoadInstrumentation = /** @class */function (_super) {\n  __extends(DocumentLoadInstrumentation, _super);\n  /**\n   *\n   * @param config\n   */\n  function DocumentLoadInstrumentation(config) {\n    if (config === void 0) {\n      config = {};\n    }\n    var _this = _super.call(this, '@opentelemetry/instrumentation-document-load', VERSION, config) || this;\n    _this.component = 'document-load';\n    _this.version = '1';\n    _this.moduleName = _this.component;\n    return _this;\n  }\n  DocumentLoadInstrumentation.prototype.init = function () {};\n  /**\n   * callback to be executed when page is loaded\n   */\n  DocumentLoadInstrumentation.prototype._onDocumentLoaded = function () {\n    var _this = this;\n    // Timeout is needed as load event doesn't have yet the performance metrics for loadEnd.\n    // Support for event \"loadend\" is very limited and cannot be used\n    window.setTimeout(function () {\n      _this._collectPerformance();\n    });\n  };\n  /**\n   * Adds spans for all resources\n   * @param rootSpan\n   */\n  DocumentLoadInstrumentation.prototype._addResourcesSpans = function (rootSpan) {\n    var _this = this;\n    var _a, _b;\n    var resources = (_b = (_a = otperformance).getEntriesByType) === null || _b === void 0 ? void 0 : _b.call(_a, 'resource');\n    if (resources) {\n      resources.forEach(function (resource) {\n        _this._initResourceSpan(resource, rootSpan);\n      });\n    }\n  };\n  /**\n   * Collects information about performance and creates appropriate spans\n   */\n  DocumentLoadInstrumentation.prototype._collectPerformance = function () {\n    var _this = this;\n    var metaElement = Array.from(document.getElementsByTagName('meta')).find(function (e) {\n      return e.getAttribute('name') === TRACE_PARENT_HEADER;\n    });\n    var entries = getPerformanceNavigationEntries();\n    var traceparent = metaElement && metaElement.content || '';\n    context.with(propagation.extract(ROOT_CONTEXT, {\n      traceparent: traceparent\n    }), function () {\n      var rootSpan = _this._startSpan(AttributeNames.DOCUMENT_LOAD, PTN.FETCH_START, entries);\n      if (!rootSpan) {\n        return;\n      }\n      context.with(trace.setSpan(context.active(), rootSpan), function () {\n        var fetchSpan = _this._startSpan(AttributeNames.DOCUMENT_FETCH, PTN.FETCH_START, entries);\n        if (fetchSpan) {\n          fetchSpan.setAttribute(SemanticAttributes.HTTP_URL, location.href);\n          context.with(trace.setSpan(context.active(), fetchSpan), function () {\n            addSpanNetworkEvents(fetchSpan, entries);\n            _this._endSpan(fetchSpan, PTN.RESPONSE_END, entries);\n          });\n        }\n      });\n      rootSpan.setAttribute(SemanticAttributes.HTTP_URL, location.href);\n      rootSpan.setAttribute(SemanticAttributes.HTTP_USER_AGENT, navigator.userAgent);\n      _this._addResourcesSpans(rootSpan);\n      addSpanNetworkEvent(rootSpan, PTN.FETCH_START, entries);\n      addSpanNetworkEvent(rootSpan, PTN.UNLOAD_EVENT_START, entries);\n      addSpanNetworkEvent(rootSpan, PTN.UNLOAD_EVENT_END, entries);\n      addSpanNetworkEvent(rootSpan, PTN.DOM_INTERACTIVE, entries);\n      addSpanNetworkEvent(rootSpan, PTN.DOM_CONTENT_LOADED_EVENT_START, entries);\n      addSpanNetworkEvent(rootSpan, PTN.DOM_CONTENT_LOADED_EVENT_END, entries);\n      addSpanNetworkEvent(rootSpan, PTN.DOM_COMPLETE, entries);\n      addSpanNetworkEvent(rootSpan, PTN.LOAD_EVENT_START, entries);\n      addSpanNetworkEvent(rootSpan, PTN.LOAD_EVENT_END, entries);\n      addSpanPerformancePaintEvents(rootSpan);\n      _this._endSpan(rootSpan, PTN.LOAD_EVENT_END, entries);\n    });\n  };\n  /**\n   * Helper function for ending span\n   * @param span\n   * @param performanceName name of performance entry for time end\n   * @param entries\n   */\n  DocumentLoadInstrumentation.prototype._endSpan = function (span, performanceName, entries) {\n    // span can be undefined when entries are missing the certain performance - the span will not be created\n    if (span) {\n      if (hasKey(entries, performanceName)) {\n        span.end(entries[performanceName]);\n      } else {\n        // just end span\n        span.end();\n      }\n    }\n  };\n  /**\n   * Creates and ends a span with network information about resource added as timed events\n   * @param resource\n   * @param parentSpan\n   */\n  DocumentLoadInstrumentation.prototype._initResourceSpan = function (resource, parentSpan) {\n    var span = this._startSpan(AttributeNames.RESOURCE_FETCH, PTN.FETCH_START, resource, parentSpan);\n    if (span) {\n      span.setAttribute(SemanticAttributes.HTTP_URL, resource.name);\n      addSpanNetworkEvents(span, resource);\n      this._endSpan(span, PTN.RESPONSE_END, resource);\n    }\n  };\n  /**\n   * Helper function for starting a span\n   * @param spanName name of span\n   * @param performanceName name of performance entry for time start\n   * @param entries\n   * @param parentSpan\n   */\n  DocumentLoadInstrumentation.prototype._startSpan = function (spanName, performanceName, entries, parentSpan) {\n    if (hasKey(entries, performanceName) && typeof entries[performanceName] === 'number') {\n      var span = this.tracer.startSpan(spanName, {\n        startTime: entries[performanceName]\n      }, parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined);\n      span.setAttribute(AttributeNames.COMPONENT, this.component);\n      return span;\n    }\n    return undefined;\n  };\n  /**\n   * executes callback {_onDocumentLoaded} when the page is loaded\n   */\n  DocumentLoadInstrumentation.prototype._waitForPageLoad = function () {\n    if (window.document.readyState === 'complete') {\n      this._onDocumentLoaded();\n    } else {\n      this._onDocumentLoaded = this._onDocumentLoaded.bind(this);\n      window.addEventListener('load', this._onDocumentLoaded);\n    }\n  };\n  /**\n   * implements enable function\n   */\n  DocumentLoadInstrumentation.prototype.enable = function () {\n    // remove previously attached load to avoid adding the same event twice\n    // in case of multiple enable calling.\n    window.removeEventListener('load', this._onDocumentLoaded);\n    this._waitForPageLoad();\n  };\n  /**\n   * implements disable function\n   */\n  DocumentLoadInstrumentation.prototype.disable = function () {\n    window.removeEventListener('load', this._onDocumentLoaded);\n  };\n  return DocumentLoadInstrumentation;\n}(InstrumentationBase);\nexport { DocumentLoadInstrumentation };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","context","propagation","trace","ROOT_CONTEXT","otperformance","TRACE_PARENT_HEADER","addSpanNetworkEvent","addSpanNetworkEvents","hasKey","PerformanceTimingNames","PTN","InstrumentationBase","AttributeNames","VERSION","SemanticAttributes","addSpanPerformancePaintEvents","getPerformanceNavigationEntries","DocumentLoadInstrumentation","_super","config","_this","component","version","moduleName","init","_onDocumentLoaded","window","setTimeout","_collectPerformance","_addResourcesSpans","rootSpan","_a","_b","resources","getEntriesByType","forEach","resource","_initResourceSpan","metaElement","from","document","getElementsByTagName","find","e","getAttribute","entries","traceparent","content","with","extract","_startSpan","DOCUMENT_LOAD","FETCH_START","setSpan","active","fetchSpan","DOCUMENT_FETCH","setAttribute","HTTP_URL","location","href","_endSpan","RESPONSE_END","HTTP_USER_AGENT","navigator","userAgent","UNLOAD_EVENT_START","UNLOAD_EVENT_END","DOM_INTERACTIVE","DOM_CONTENT_LOADED_EVENT_START","DOM_CONTENT_LOADED_EVENT_END","DOM_COMPLETE","LOAD_EVENT_START","LOAD_EVENT_END","span","performanceName","end","parentSpan","RESOURCE_FETCH","name","spanName","tracer","startSpan","startTime","undefined","COMPONENT","_waitForPageLoad","readyState","bind","addEventListener","enable","removeEventListener","disable"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/instrumentation-document-load/build/esm/instrumentation.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { context, propagation, trace, ROOT_CONTEXT, } from '@opentelemetry/api';\nimport { otperformance, TRACE_PARENT_HEADER } from '@opentelemetry/core';\nimport { addSpanNetworkEvent, addSpanNetworkEvents, hasKey, PerformanceTimingNames as PTN, } from '@opentelemetry/sdk-trace-web';\nimport { InstrumentationBase, } from '@opentelemetry/instrumentation';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { VERSION } from './version';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { addSpanPerformancePaintEvents, getPerformanceNavigationEntries, } from './utils';\n/**\n * This class represents a document load plugin\n */\nvar DocumentLoadInstrumentation = /** @class */ (function (_super) {\n    __extends(DocumentLoadInstrumentation, _super);\n    /**\n     *\n     * @param config\n     */\n    function DocumentLoadInstrumentation(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this, '@opentelemetry/instrumentation-document-load', VERSION, config) || this;\n        _this.component = 'document-load';\n        _this.version = '1';\n        _this.moduleName = _this.component;\n        return _this;\n    }\n    DocumentLoadInstrumentation.prototype.init = function () { };\n    /**\n     * callback to be executed when page is loaded\n     */\n    DocumentLoadInstrumentation.prototype._onDocumentLoaded = function () {\n        var _this = this;\n        // Timeout is needed as load event doesn't have yet the performance metrics for loadEnd.\n        // Support for event \"loadend\" is very limited and cannot be used\n        window.setTimeout(function () {\n            _this._collectPerformance();\n        });\n    };\n    /**\n     * Adds spans for all resources\n     * @param rootSpan\n     */\n    DocumentLoadInstrumentation.prototype._addResourcesSpans = function (rootSpan) {\n        var _this = this;\n        var _a, _b;\n        var resources = (_b = (_a = otperformance).getEntriesByType) === null || _b === void 0 ? void 0 : _b.call(_a, 'resource');\n        if (resources) {\n            resources.forEach(function (resource) {\n                _this._initResourceSpan(resource, rootSpan);\n            });\n        }\n    };\n    /**\n     * Collects information about performance and creates appropriate spans\n     */\n    DocumentLoadInstrumentation.prototype._collectPerformance = function () {\n        var _this = this;\n        var metaElement = Array.from(document.getElementsByTagName('meta')).find(function (e) { return e.getAttribute('name') === TRACE_PARENT_HEADER; });\n        var entries = getPerformanceNavigationEntries();\n        var traceparent = (metaElement && metaElement.content) || '';\n        context.with(propagation.extract(ROOT_CONTEXT, { traceparent: traceparent }), function () {\n            var rootSpan = _this._startSpan(AttributeNames.DOCUMENT_LOAD, PTN.FETCH_START, entries);\n            if (!rootSpan) {\n                return;\n            }\n            context.with(trace.setSpan(context.active(), rootSpan), function () {\n                var fetchSpan = _this._startSpan(AttributeNames.DOCUMENT_FETCH, PTN.FETCH_START, entries);\n                if (fetchSpan) {\n                    fetchSpan.setAttribute(SemanticAttributes.HTTP_URL, location.href);\n                    context.with(trace.setSpan(context.active(), fetchSpan), function () {\n                        addSpanNetworkEvents(fetchSpan, entries);\n                        _this._endSpan(fetchSpan, PTN.RESPONSE_END, entries);\n                    });\n                }\n            });\n            rootSpan.setAttribute(SemanticAttributes.HTTP_URL, location.href);\n            rootSpan.setAttribute(SemanticAttributes.HTTP_USER_AGENT, navigator.userAgent);\n            _this._addResourcesSpans(rootSpan);\n            addSpanNetworkEvent(rootSpan, PTN.FETCH_START, entries);\n            addSpanNetworkEvent(rootSpan, PTN.UNLOAD_EVENT_START, entries);\n            addSpanNetworkEvent(rootSpan, PTN.UNLOAD_EVENT_END, entries);\n            addSpanNetworkEvent(rootSpan, PTN.DOM_INTERACTIVE, entries);\n            addSpanNetworkEvent(rootSpan, PTN.DOM_CONTENT_LOADED_EVENT_START, entries);\n            addSpanNetworkEvent(rootSpan, PTN.DOM_CONTENT_LOADED_EVENT_END, entries);\n            addSpanNetworkEvent(rootSpan, PTN.DOM_COMPLETE, entries);\n            addSpanNetworkEvent(rootSpan, PTN.LOAD_EVENT_START, entries);\n            addSpanNetworkEvent(rootSpan, PTN.LOAD_EVENT_END, entries);\n            addSpanPerformancePaintEvents(rootSpan);\n            _this._endSpan(rootSpan, PTN.LOAD_EVENT_END, entries);\n        });\n    };\n    /**\n     * Helper function for ending span\n     * @param span\n     * @param performanceName name of performance entry for time end\n     * @param entries\n     */\n    DocumentLoadInstrumentation.prototype._endSpan = function (span, performanceName, entries) {\n        // span can be undefined when entries are missing the certain performance - the span will not be created\n        if (span) {\n            if (hasKey(entries, performanceName)) {\n                span.end(entries[performanceName]);\n            }\n            else {\n                // just end span\n                span.end();\n            }\n        }\n    };\n    /**\n     * Creates and ends a span with network information about resource added as timed events\n     * @param resource\n     * @param parentSpan\n     */\n    DocumentLoadInstrumentation.prototype._initResourceSpan = function (resource, parentSpan) {\n        var span = this._startSpan(AttributeNames.RESOURCE_FETCH, PTN.FETCH_START, resource, parentSpan);\n        if (span) {\n            span.setAttribute(SemanticAttributes.HTTP_URL, resource.name);\n            addSpanNetworkEvents(span, resource);\n            this._endSpan(span, PTN.RESPONSE_END, resource);\n        }\n    };\n    /**\n     * Helper function for starting a span\n     * @param spanName name of span\n     * @param performanceName name of performance entry for time start\n     * @param entries\n     * @param parentSpan\n     */\n    DocumentLoadInstrumentation.prototype._startSpan = function (spanName, performanceName, entries, parentSpan) {\n        if (hasKey(entries, performanceName) &&\n            typeof entries[performanceName] === 'number') {\n            var span = this.tracer.startSpan(spanName, {\n                startTime: entries[performanceName],\n            }, parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined);\n            span.setAttribute(AttributeNames.COMPONENT, this.component);\n            return span;\n        }\n        return undefined;\n    };\n    /**\n     * executes callback {_onDocumentLoaded} when the page is loaded\n     */\n    DocumentLoadInstrumentation.prototype._waitForPageLoad = function () {\n        if (window.document.readyState === 'complete') {\n            this._onDocumentLoaded();\n        }\n        else {\n            this._onDocumentLoaded = this._onDocumentLoaded.bind(this);\n            window.addEventListener('load', this._onDocumentLoaded);\n        }\n    };\n    /**\n     * implements enable function\n     */\n    DocumentLoadInstrumentation.prototype.enable = function () {\n        // remove previously attached load to avoid adding the same event twice\n        // in case of multiple enable calling.\n        window.removeEventListener('load', this._onDocumentLoaded);\n        this._waitForPageLoad();\n    };\n    /**\n     * implements disable function\n     */\n    DocumentLoadInstrumentation.prototype.disable = function () {\n        window.removeEventListener('load', this._onDocumentLoaded);\n    };\n    return DocumentLoadInstrumentation;\n}(InstrumentationBase));\nexport { DocumentLoadInstrumentation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}