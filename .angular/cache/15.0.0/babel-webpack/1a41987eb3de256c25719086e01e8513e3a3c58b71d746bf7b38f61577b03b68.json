{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { MetricStorage } from './MetricStorage';\nimport { DeltaMetricProcessor } from './DeltaMetricProcessor';\nimport { TemporalMetricProcessor } from './TemporalMetricProcessor';\n/**\n * Internal interface.\n *\n * Stores and aggregates {@link MetricData} for synchronous instruments.\n */\nvar SyncMetricStorage = /** @class */function (_super) {\n  __extends(SyncMetricStorage, _super);\n  function SyncMetricStorage(instrumentDescriptor, aggregator, _attributesProcessor) {\n    var _this = _super.call(this, instrumentDescriptor) || this;\n    _this._attributesProcessor = _attributesProcessor;\n    _this._deltaMetricStorage = new DeltaMetricProcessor(aggregator);\n    _this._temporalMetricStorage = new TemporalMetricProcessor(aggregator);\n    return _this;\n  }\n  SyncMetricStorage.prototype.record = function (value, attributes, context, recordTime) {\n    attributes = this._attributesProcessor.process(attributes, context);\n    this._deltaMetricStorage.record(value, attributes, context, recordTime);\n  };\n  /**\n   * Collects the metrics from this storage.\n   *\n   * Note: This is a stateful operation and may reset any interval-related\n   * state for the MetricCollector.\n   */\n  SyncMetricStorage.prototype.collect = function (collector, collectors, collectionTime) {\n    var accumulations = this._deltaMetricStorage.collect();\n    return this._temporalMetricStorage.buildMetrics(collector, collectors, this._instrumentDescriptor, accumulations, collectionTime);\n  };\n  return SyncMetricStorage;\n}(MetricStorage);\nexport { SyncMetricStorage };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","MetricStorage","DeltaMetricProcessor","TemporalMetricProcessor","SyncMetricStorage","_super","instrumentDescriptor","aggregator","_attributesProcessor","_this","_deltaMetricStorage","_temporalMetricStorage","record","value","attributes","context","recordTime","process","collect","collector","collectors","collectionTime","accumulations","buildMetrics","_instrumentDescriptor"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/sdk-metrics/build/esm/state/SyncMetricStorage.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { MetricStorage } from './MetricStorage';\nimport { DeltaMetricProcessor } from './DeltaMetricProcessor';\nimport { TemporalMetricProcessor } from './TemporalMetricProcessor';\n/**\n * Internal interface.\n *\n * Stores and aggregates {@link MetricData} for synchronous instruments.\n */\nvar SyncMetricStorage = /** @class */ (function (_super) {\n    __extends(SyncMetricStorage, _super);\n    function SyncMetricStorage(instrumentDescriptor, aggregator, _attributesProcessor) {\n        var _this = _super.call(this, instrumentDescriptor) || this;\n        _this._attributesProcessor = _attributesProcessor;\n        _this._deltaMetricStorage = new DeltaMetricProcessor(aggregator);\n        _this._temporalMetricStorage = new TemporalMetricProcessor(aggregator);\n        return _this;\n    }\n    SyncMetricStorage.prototype.record = function (value, attributes, context, recordTime) {\n        attributes = this._attributesProcessor.process(attributes, context);\n        this._deltaMetricStorage.record(value, attributes, context, recordTime);\n    };\n    /**\n     * Collects the metrics from this storage.\n     *\n     * Note: This is a stateful operation and may reset any interval-related\n     * state for the MetricCollector.\n     */\n    SyncMetricStorage.prototype.collect = function (collector, collectors, collectionTime) {\n        var accumulations = this._deltaMetricStorage.collect();\n        return this._temporalMetricStorage.buildMetrics(collector, collectors, this._instrumentDescriptor, accumulations, collectionTime);\n    };\n    return SyncMetricStorage;\n}(MetricStorage));\nexport { SyncMetricStorage };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}