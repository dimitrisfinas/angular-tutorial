{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResultCode } from '@opentelemetry/core';\n/**\n * In-memory Metrics Exporter is a Push Metric Exporter\n * which accumulates metrics data in the local memory and\n * allows to inspect it (useful for e.g. unit tests).\n */\nvar InMemoryMetricExporter = /** @class */function () {\n  function InMemoryMetricExporter(aggregationTemporality) {\n    this._shutdown = false;\n    this._metrics = [];\n    this._aggregationTemporality = aggregationTemporality;\n  }\n  /**\n   * @inheritedDoc\n   */\n  InMemoryMetricExporter.prototype.export = function (metrics, resultCallback) {\n    // Avoid storing metrics when exporter is shutdown\n    if (this._shutdown) {\n      setTimeout(function () {\n        return resultCallback({\n          code: ExportResultCode.FAILED\n        });\n      }, 0);\n      return;\n    }\n    this._metrics.push(metrics);\n    setTimeout(function () {\n      return resultCallback({\n        code: ExportResultCode.SUCCESS\n      });\n    }, 0);\n  };\n  /**\n   * Returns all the collected resource metrics\n   * @returns ResourceMetrics[]\n   */\n  InMemoryMetricExporter.prototype.getMetrics = function () {\n    return this._metrics;\n  };\n  InMemoryMetricExporter.prototype.forceFlush = function () {\n    return Promise.resolve();\n  };\n  InMemoryMetricExporter.prototype.reset = function () {\n    this._metrics = [];\n  };\n  InMemoryMetricExporter.prototype.selectAggregationTemporality = function (_instrumentType) {\n    return this._aggregationTemporality;\n  };\n  InMemoryMetricExporter.prototype.shutdown = function () {\n    this._shutdown = true;\n    return Promise.resolve();\n  };\n  return InMemoryMetricExporter;\n}();\nexport { InMemoryMetricExporter };","map":{"version":3,"names":["ExportResultCode","InMemoryMetricExporter","aggregationTemporality","_shutdown","_metrics","_aggregationTemporality","prototype","export","metrics","resultCallback","setTimeout","code","FAILED","push","SUCCESS","getMetrics","forceFlush","Promise","resolve","reset","selectAggregationTemporality","_instrumentType","shutdown"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/sdk-metrics/build/esm/export/InMemoryMetricExporter.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResultCode } from '@opentelemetry/core';\n/**\n * In-memory Metrics Exporter is a Push Metric Exporter\n * which accumulates metrics data in the local memory and\n * allows to inspect it (useful for e.g. unit tests).\n */\nvar InMemoryMetricExporter = /** @class */ (function () {\n    function InMemoryMetricExporter(aggregationTemporality) {\n        this._shutdown = false;\n        this._metrics = [];\n        this._aggregationTemporality = aggregationTemporality;\n    }\n    /**\n     * @inheritedDoc\n     */\n    InMemoryMetricExporter.prototype.export = function (metrics, resultCallback) {\n        // Avoid storing metrics when exporter is shutdown\n        if (this._shutdown) {\n            setTimeout(function () { return resultCallback({ code: ExportResultCode.FAILED }); }, 0);\n            return;\n        }\n        this._metrics.push(metrics);\n        setTimeout(function () { return resultCallback({ code: ExportResultCode.SUCCESS }); }, 0);\n    };\n    /**\n     * Returns all the collected resource metrics\n     * @returns ResourceMetrics[]\n     */\n    InMemoryMetricExporter.prototype.getMetrics = function () {\n        return this._metrics;\n    };\n    InMemoryMetricExporter.prototype.forceFlush = function () {\n        return Promise.resolve();\n    };\n    InMemoryMetricExporter.prototype.reset = function () {\n        this._metrics = [];\n    };\n    InMemoryMetricExporter.prototype.selectAggregationTemporality = function (_instrumentType) {\n        return this._aggregationTemporality;\n    };\n    InMemoryMetricExporter.prototype.shutdown = function () {\n        this._shutdown = true;\n        return Promise.resolve();\n    };\n    return InMemoryMetricExporter;\n}());\nexport { InMemoryMetricExporter };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAgB,QAAQ,qBAAqB;AACtD;AACA;AACA;AACA;AACA;AACA,IAAIC,sBAAsB,GAAG,aAAe,YAAY;EACpD,SAASA,sBAAsB,CAACC,sBAAsB,EAAE;IACpD,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,uBAAuB,GAAGH,sBAAsB;EACzD;EACA;AACJ;AACA;EACID,sBAAsB,CAACK,SAAS,CAACC,MAAM,GAAG,UAAUC,OAAO,EAAEC,cAAc,EAAE;IACzE;IACA,IAAI,IAAI,CAACN,SAAS,EAAE;MAChBO,UAAU,CAAC,YAAY;QAAE,OAAOD,cAAc,CAAC;UAAEE,IAAI,EAAEX,gBAAgB,CAACY;QAAO,CAAC,CAAC;MAAE,CAAC,EAAE,CAAC,CAAC;MACxF;IACJ;IACA,IAAI,CAACR,QAAQ,CAACS,IAAI,CAACL,OAAO,CAAC;IAC3BE,UAAU,CAAC,YAAY;MAAE,OAAOD,cAAc,CAAC;QAAEE,IAAI,EAAEX,gBAAgB,CAACc;MAAQ,CAAC,CAAC;IAAE,CAAC,EAAE,CAAC,CAAC;EAC7F,CAAC;EACD;AACJ;AACA;AACA;EACIb,sBAAsB,CAACK,SAAS,CAACS,UAAU,GAAG,YAAY;IACtD,OAAO,IAAI,CAACX,QAAQ;EACxB,CAAC;EACDH,sBAAsB,CAACK,SAAS,CAACU,UAAU,GAAG,YAAY;IACtD,OAAOC,OAAO,CAACC,OAAO,EAAE;EAC5B,CAAC;EACDjB,sBAAsB,CAACK,SAAS,CAACa,KAAK,GAAG,YAAY;IACjD,IAAI,CAACf,QAAQ,GAAG,EAAE;EACtB,CAAC;EACDH,sBAAsB,CAACK,SAAS,CAACc,4BAA4B,GAAG,UAAUC,eAAe,EAAE;IACvF,OAAO,IAAI,CAAChB,uBAAuB;EACvC,CAAC;EACDJ,sBAAsB,CAACK,SAAS,CAACgB,QAAQ,GAAG,YAAY;IACpD,IAAI,CAACnB,SAAS,GAAG,IAAI;IACrB,OAAOc,OAAO,CAACC,OAAO,EAAE;EAC5B,CAAC;EACD,OAAOjB,sBAAsB;AACjC,CAAC,EAAG;AACJ,SAASA,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}