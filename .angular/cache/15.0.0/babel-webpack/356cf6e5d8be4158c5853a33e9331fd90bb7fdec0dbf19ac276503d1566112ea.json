{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ServerCredentials = void 0;\nconst tls_helpers_1 = require(\"./tls-helpers\");\nclass ServerCredentials {\n  static createInsecure() {\n    return new InsecureServerCredentials();\n  }\n  static createSsl(rootCerts, keyCertPairs, checkClientCertificate = false) {\n    if (rootCerts !== null && !Buffer.isBuffer(rootCerts)) {\n      throw new TypeError('rootCerts must be null or a Buffer');\n    }\n    if (!Array.isArray(keyCertPairs)) {\n      throw new TypeError('keyCertPairs must be an array');\n    }\n    if (typeof checkClientCertificate !== 'boolean') {\n      throw new TypeError('checkClientCertificate must be a boolean');\n    }\n    const cert = [];\n    const key = [];\n    for (let i = 0; i < keyCertPairs.length; i++) {\n      const pair = keyCertPairs[i];\n      if (pair === null || typeof pair !== 'object') {\n        throw new TypeError(`keyCertPair[${i}] must be an object`);\n      }\n      if (!Buffer.isBuffer(pair.private_key)) {\n        throw new TypeError(`keyCertPair[${i}].private_key must be a Buffer`);\n      }\n      if (!Buffer.isBuffer(pair.cert_chain)) {\n        throw new TypeError(`keyCertPair[${i}].cert_chain must be a Buffer`);\n      }\n      cert.push(pair.cert_chain);\n      key.push(pair.private_key);\n    }\n    return new SecureServerCredentials({\n      ca: rootCerts || tls_helpers_1.getDefaultRootsData() || undefined,\n      cert,\n      key,\n      requestCert: checkClientCertificate,\n      ciphers: tls_helpers_1.CIPHER_SUITES\n    });\n  }\n}\nexports.ServerCredentials = ServerCredentials;\nclass InsecureServerCredentials extends ServerCredentials {\n  _isSecure() {\n    return false;\n  }\n  _getSettings() {\n    return null;\n  }\n}\nclass SecureServerCredentials extends ServerCredentials {\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n  _isSecure() {\n    return true;\n  }\n  _getSettings() {\n    return this.options;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","ServerCredentials","tls_helpers_1","require","createInsecure","InsecureServerCredentials","createSsl","rootCerts","keyCertPairs","checkClientCertificate","Buffer","isBuffer","TypeError","Array","isArray","cert","key","i","length","pair","private_key","cert_chain","push","SecureServerCredentials","ca","getDefaultRootsData","undefined","requestCert","ciphers","CIPHER_SUITES","_isSecure","_getSettings","constructor","options"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@grpc/grpc-js/build/src/server-credentials.js"],"sourcesContent":["\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerCredentials = void 0;\nconst tls_helpers_1 = require(\"./tls-helpers\");\nclass ServerCredentials {\n    static createInsecure() {\n        return new InsecureServerCredentials();\n    }\n    static createSsl(rootCerts, keyCertPairs, checkClientCertificate = false) {\n        if (rootCerts !== null && !Buffer.isBuffer(rootCerts)) {\n            throw new TypeError('rootCerts must be null or a Buffer');\n        }\n        if (!Array.isArray(keyCertPairs)) {\n            throw new TypeError('keyCertPairs must be an array');\n        }\n        if (typeof checkClientCertificate !== 'boolean') {\n            throw new TypeError('checkClientCertificate must be a boolean');\n        }\n        const cert = [];\n        const key = [];\n        for (let i = 0; i < keyCertPairs.length; i++) {\n            const pair = keyCertPairs[i];\n            if (pair === null || typeof pair !== 'object') {\n                throw new TypeError(`keyCertPair[${i}] must be an object`);\n            }\n            if (!Buffer.isBuffer(pair.private_key)) {\n                throw new TypeError(`keyCertPair[${i}].private_key must be a Buffer`);\n            }\n            if (!Buffer.isBuffer(pair.cert_chain)) {\n                throw new TypeError(`keyCertPair[${i}].cert_chain must be a Buffer`);\n            }\n            cert.push(pair.cert_chain);\n            key.push(pair.private_key);\n        }\n        return new SecureServerCredentials({\n            ca: rootCerts || tls_helpers_1.getDefaultRootsData() || undefined,\n            cert,\n            key,\n            requestCert: checkClientCertificate,\n            ciphers: tls_helpers_1.CIPHER_SUITES,\n        });\n    }\n}\nexports.ServerCredentials = ServerCredentials;\nclass InsecureServerCredentials extends ServerCredentials {\n    _isSecure() {\n        return false;\n    }\n    _getSettings() {\n        return null;\n    }\n}\nclass SecureServerCredentials extends ServerCredentials {\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    _isSecure() {\n        return true;\n    }\n    _getSettings() {\n        return this.options;\n    }\n}\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iBAAiB,GAAG,KAAK,CAAC;AAClC,MAAMC,aAAa,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC9C,MAAMF,iBAAiB,CAAC;EACpB,OAAOG,cAAc,GAAG;IACpB,OAAO,IAAIC,yBAAyB,EAAE;EAC1C;EACA,OAAOC,SAAS,CAACC,SAAS,EAAEC,YAAY,EAAEC,sBAAsB,GAAG,KAAK,EAAE;IACtE,IAAIF,SAAS,KAAK,IAAI,IAAI,CAACG,MAAM,CAACC,QAAQ,CAACJ,SAAS,CAAC,EAAE;MACnD,MAAM,IAAIK,SAAS,CAAC,oCAAoC,CAAC;IAC7D;IACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACN,YAAY,CAAC,EAAE;MAC9B,MAAM,IAAII,SAAS,CAAC,+BAA+B,CAAC;IACxD;IACA,IAAI,OAAOH,sBAAsB,KAAK,SAAS,EAAE;MAC7C,MAAM,IAAIG,SAAS,CAAC,0CAA0C,CAAC;IACnE;IACA,MAAMG,IAAI,GAAG,EAAE;IACf,MAAMC,GAAG,GAAG,EAAE;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,YAAY,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;MAC1C,MAAME,IAAI,GAAGX,YAAY,CAACS,CAAC,CAAC;MAC5B,IAAIE,IAAI,KAAK,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;QAC3C,MAAM,IAAIP,SAAS,CAAE,eAAcK,CAAE,qBAAoB,CAAC;MAC9D;MACA,IAAI,CAACP,MAAM,CAACC,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAAC,EAAE;QACpC,MAAM,IAAIR,SAAS,CAAE,eAAcK,CAAE,gCAA+B,CAAC;MACzE;MACA,IAAI,CAACP,MAAM,CAACC,QAAQ,CAACQ,IAAI,CAACE,UAAU,CAAC,EAAE;QACnC,MAAM,IAAIT,SAAS,CAAE,eAAcK,CAAE,+BAA8B,CAAC;MACxE;MACAF,IAAI,CAACO,IAAI,CAACH,IAAI,CAACE,UAAU,CAAC;MAC1BL,GAAG,CAACM,IAAI,CAACH,IAAI,CAACC,WAAW,CAAC;IAC9B;IACA,OAAO,IAAIG,uBAAuB,CAAC;MAC/BC,EAAE,EAAEjB,SAAS,IAAIL,aAAa,CAACuB,mBAAmB,EAAE,IAAIC,SAAS;MACjEX,IAAI;MACJC,GAAG;MACHW,WAAW,EAAElB,sBAAsB;MACnCmB,OAAO,EAAE1B,aAAa,CAAC2B;IAC3B,CAAC,CAAC;EACN;AACJ;AACA9B,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB;AAC7C,MAAMI,yBAAyB,SAASJ,iBAAiB,CAAC;EACtD6B,SAAS,GAAG;IACR,OAAO,KAAK;EAChB;EACAC,YAAY,GAAG;IACX,OAAO,IAAI;EACf;AACJ;AACA,MAAMR,uBAAuB,SAAStB,iBAAiB,CAAC;EACpD+B,WAAW,CAACC,OAAO,EAAE;IACjB,KAAK,EAAE;IACP,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EACAH,SAAS,GAAG;IACR,OAAO,IAAI;EACf;EACAC,YAAY,GAAG;IACX,OAAO,IAAI,CAACE,OAAO;EACvB;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}