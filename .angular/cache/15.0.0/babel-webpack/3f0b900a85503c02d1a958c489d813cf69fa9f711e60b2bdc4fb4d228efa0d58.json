{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance } from '@opentelemetry/core';\nimport { hasKey, PerformanceTimingNames as PTN } from '@opentelemetry/sdk-trace-web';\nimport { EventNames } from './enums/EventNames';\nexport var getPerformanceNavigationEntries = function () {\n  var _a, _b;\n  var entries = {};\n  var performanceNavigationTiming = (_b = (_a = otperformance).getEntriesByType) === null || _b === void 0 ? void 0 : _b.call(_a, 'navigation')[0];\n  if (performanceNavigationTiming) {\n    var keys = Object.values(PTN);\n    keys.forEach(function (key) {\n      if (hasKey(performanceNavigationTiming, key)) {\n        var value = performanceNavigationTiming[key];\n        if (typeof value === 'number') {\n          entries[key] = value;\n        }\n      }\n    });\n  } else {\n    // // fallback to previous version\n    var perf = otperformance;\n    var performanceTiming_1 = perf.timing;\n    if (performanceTiming_1) {\n      var keys = Object.values(PTN);\n      keys.forEach(function (key) {\n        if (hasKey(performanceTiming_1, key)) {\n          var value = performanceTiming_1[key];\n          if (typeof value === 'number') {\n            entries[key] = value;\n          }\n        }\n      });\n    }\n  }\n  return entries;\n};\nvar performancePaintNames = {\n  'first-paint': EventNames.FIRST_PAINT,\n  'first-contentful-paint': EventNames.FIRST_CONTENTFUL_PAINT\n};\nexport var addSpanPerformancePaintEvents = function (span) {\n  var _a, _b;\n  var performancePaintTiming = (_b = (_a = otperformance).getEntriesByType) === null || _b === void 0 ? void 0 : _b.call(_a, 'paint');\n  if (performancePaintTiming) {\n    performancePaintTiming.forEach(function (_a) {\n      var name = _a.name,\n        startTime = _a.startTime;\n      if (hasKey(performancePaintNames, name)) {\n        span.addEvent(performancePaintNames[name], startTime);\n      }\n    });\n  }\n};\n//# sourceMappingURL=utils.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}