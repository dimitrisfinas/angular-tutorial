{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './baggage/types';\nexport { baggageEntryMetadataFromString } from './baggage/utils';\nexport * from './common/Exception';\nexport * from './common/Time';\nexport * from './diag';\nexport * from './propagation/TextMapPropagator';\nexport * from './trace/attributes';\nexport * from './trace/link';\nexport * from './trace/ProxyTracer';\nexport * from './trace/ProxyTracerProvider';\nexport * from './trace/Sampler';\nexport * from './trace/SamplingResult';\nexport * from './trace/span_context';\nexport * from './trace/span_kind';\nexport * from './trace/span';\nexport * from './trace/SpanOptions';\nexport * from './trace/status';\nexport * from './trace/trace_flags';\nexport * from './trace/trace_state';\nexport * from './trace/tracer_provider';\nexport * from './trace/tracer';\nexport { isSpanContextValid, isValidTraceId, isValidSpanId } from './trace/spancontext-utils';\nexport { INVALID_SPANID, INVALID_TRACEID, INVALID_SPAN_CONTEXT } from './trace/invalid-span-constants';\nexport * from './context/context';\nexport * from './context/types';\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport var context = ContextAPI.getInstance();\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport var trace = TraceAPI.getInstance();\nimport { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport var propagation = PropagationAPI.getInstance();\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport var diag = DiagAPI.instance();\nexport default {\n  trace: trace,\n  context: context,\n  propagation: propagation,\n  diag: diag\n};","map":{"version":3,"names":["baggageEntryMetadataFromString","isSpanContextValid","isValidTraceId","isValidSpanId","INVALID_SPANID","INVALID_TRACEID","INVALID_SPAN_CONTEXT","ContextAPI","context","getInstance","TraceAPI","trace","PropagationAPI","propagation","DiagAPI","diag","instance"],"sources":["/Users/dimitris.finas/node_modules/@opentelemetry/api/build/esm/index.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from './baggage/types';\nexport { baggageEntryMetadataFromString } from './baggage/utils';\nexport * from './common/Exception';\nexport * from './common/Time';\nexport * from './diag';\nexport * from './propagation/TextMapPropagator';\nexport * from './trace/attributes';\nexport * from './trace/link';\nexport * from './trace/ProxyTracer';\nexport * from './trace/ProxyTracerProvider';\nexport * from './trace/Sampler';\nexport * from './trace/SamplingResult';\nexport * from './trace/span_context';\nexport * from './trace/span_kind';\nexport * from './trace/span';\nexport * from './trace/SpanOptions';\nexport * from './trace/status';\nexport * from './trace/trace_flags';\nexport * from './trace/trace_state';\nexport * from './trace/tracer_provider';\nexport * from './trace/tracer';\nexport { isSpanContextValid, isValidTraceId, isValidSpanId, } from './trace/spancontext-utils';\nexport { INVALID_SPANID, INVALID_TRACEID, INVALID_SPAN_CONTEXT, } from './trace/invalid-span-constants';\nexport * from './context/context';\nexport * from './context/types';\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport var context = ContextAPI.getInstance();\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport var trace = TraceAPI.getInstance();\nimport { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport var propagation = PropagationAPI.getInstance();\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport var diag = DiagAPI.instance();\nexport default {\n    trace: trace,\n    context: context,\n    propagation: propagation,\n    diag: diag,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B,SAASA,8BAA8B,QAAQ,iBAAiB;AAChE,cAAc,oBAAoB;AAClC,cAAc,eAAe;AAC7B,cAAc,QAAQ;AACtB,cAAc,iCAAiC;AAC/C,cAAc,oBAAoB;AAClC,cAAc,cAAc;AAC5B,cAAc,qBAAqB;AACnC,cAAc,6BAA6B;AAC3C,cAAc,iBAAiB;AAC/B,cAAc,wBAAwB;AACtC,cAAc,sBAAsB;AACpC,cAAc,mBAAmB;AACjC,cAAc,cAAc;AAC5B,cAAc,qBAAqB;AACnC,cAAc,gBAAgB;AAC9B,cAAc,qBAAqB;AACnC,cAAc,qBAAqB;AACnC,cAAc,yBAAyB;AACvC,cAAc,gBAAgB;AAC9B,SAASC,kBAAkB,EAAEC,cAAc,EAAEC,aAAa,QAAS,2BAA2B;AAC9F,SAASC,cAAc,EAAEC,eAAe,EAAEC,oBAAoB,QAAS,gCAAgC;AACvG,cAAc,mBAAmB;AACjC,cAAc,iBAAiB;AAC/B,SAASC,UAAU,QAAQ,eAAe;AAC1C;AACA,OAAO,IAAIC,OAAO,GAAGD,UAAU,CAACE,WAAW,EAAE;AAC7C,SAASC,QAAQ,QAAQ,aAAa;AACtC;AACA,OAAO,IAAIC,KAAK,GAAGD,QAAQ,CAACD,WAAW,EAAE;AACzC,SAASG,cAAc,QAAQ,mBAAmB;AAClD;AACA,OAAO,IAAIC,WAAW,GAAGD,cAAc,CAACH,WAAW,EAAE;AACrD,SAASK,OAAO,QAAQ,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,IAAI,GAAGD,OAAO,CAACE,QAAQ,EAAE;AACpC,eAAe;EACXL,KAAK,EAAEA,KAAK;EACZH,OAAO,EAAEA,OAAO;EAChBK,WAAW,EAAEA,WAAW;EACxBE,IAAI,EAAEA;AACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}