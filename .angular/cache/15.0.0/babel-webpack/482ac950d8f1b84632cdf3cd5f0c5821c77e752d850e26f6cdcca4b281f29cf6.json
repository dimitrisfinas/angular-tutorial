{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { OTLPExporterError } from '../../types';\n/**\n * Send metrics/spans using browser navigator.sendBeacon\n * @param body\n * @param url\n * @param blobPropertyBag\n * @param onSuccess\n * @param onError\n */\nexport function sendWithBeacon(body, url, blobPropertyBag, onSuccess, onError) {\n  if (navigator.sendBeacon(url, new Blob([body], blobPropertyBag))) {\n    diag.debug('sendBeacon - can send', body);\n    onSuccess();\n  } else {\n    var error = new OTLPExporterError(\"sendBeacon - cannot send \" + body);\n    onError(error);\n  }\n}\n/**\n * function to send metrics/spans using browser XMLHttpRequest\n *     used when navigator.sendBeacon is not available\n * @param body\n * @param url\n * @param headers\n * @param onSuccess\n * @param onError\n */\nexport function sendWithXhr(body, url, headers, exporterTimeout, onSuccess, onError) {\n  var reqIsDestroyed;\n  var exporterTimer = setTimeout(function () {\n    reqIsDestroyed = true;\n    xhr.abort();\n  }, exporterTimeout);\n  var xhr = new XMLHttpRequest();\n  xhr.open('POST', url);\n  var defaultHeaders = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  };\n  Object.entries(__assign(__assign({}, defaultHeaders), headers)).forEach(function (_a) {\n    var _b = __read(_a, 2),\n      k = _b[0],\n      v = _b[1];\n    xhr.setRequestHeader(k, v);\n  });\n  xhr.send(body);\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === XMLHttpRequest.DONE) {\n      if (xhr.status >= 200 && xhr.status <= 299) {\n        clearTimeout(exporterTimer);\n        diag.debug('xhr success', body);\n        onSuccess();\n      } else if (reqIsDestroyed) {\n        var error = new OTLPExporterError('Request Timeout', xhr.status);\n        onError(error);\n      } else {\n        var error = new OTLPExporterError(\"Failed to export with XHR (status: \" + xhr.status + \")\", xhr.status);\n        clearTimeout(exporterTimer);\n        onError(error);\n      }\n    }\n  };\n}","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","diag","OTLPExporterError","sendWithBeacon","body","url","blobPropertyBag","onSuccess","onError","navigator","sendBeacon","Blob","debug","sendWithXhr","headers","exporterTimeout","reqIsDestroyed","exporterTimer","setTimeout","xhr","abort","XMLHttpRequest","open","defaultHeaders","entries","forEach","_a","_b","k","v","setRequestHeader","send","onreadystatechange","readyState","DONE","status","clearTimeout"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/otlp-exporter-base/build/esm/platform/browser/util.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { OTLPExporterError } from '../../types';\n/**\n * Send metrics/spans using browser navigator.sendBeacon\n * @param body\n * @param url\n * @param blobPropertyBag\n * @param onSuccess\n * @param onError\n */\nexport function sendWithBeacon(body, url, blobPropertyBag, onSuccess, onError) {\n    if (navigator.sendBeacon(url, new Blob([body], blobPropertyBag))) {\n        diag.debug('sendBeacon - can send', body);\n        onSuccess();\n    }\n    else {\n        var error = new OTLPExporterError(\"sendBeacon - cannot send \" + body);\n        onError(error);\n    }\n}\n/**\n * function to send metrics/spans using browser XMLHttpRequest\n *     used when navigator.sendBeacon is not available\n * @param body\n * @param url\n * @param headers\n * @param onSuccess\n * @param onError\n */\nexport function sendWithXhr(body, url, headers, exporterTimeout, onSuccess, onError) {\n    var reqIsDestroyed;\n    var exporterTimer = setTimeout(function () {\n        reqIsDestroyed = true;\n        xhr.abort();\n    }, exporterTimeout);\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n    var defaultHeaders = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n    };\n    Object.entries(__assign(__assign({}, defaultHeaders), headers)).forEach(function (_a) {\n        var _b = __read(_a, 2), k = _b[0], v = _b[1];\n        xhr.setRequestHeader(k, v);\n    });\n    xhr.send(body);\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                clearTimeout(exporterTimer);\n                diag.debug('xhr success', body);\n                onSuccess();\n            }\n            else if (reqIsDestroyed) {\n                var error = new OTLPExporterError('Request Timeout', xhr.status);\n                onError(error);\n            }\n            else {\n                var error = new OTLPExporterError(\"Failed to export with XHR (status: \" + xhr.status + \")\", xhr.status);\n                clearTimeout(exporterTimer);\n                onError(error);\n            }\n        }\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}