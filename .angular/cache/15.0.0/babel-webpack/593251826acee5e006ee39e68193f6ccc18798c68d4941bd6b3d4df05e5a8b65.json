{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ValueType } from '@opentelemetry/api';\n/**\n * Supported types of metric instruments.\n */\nexport var InstrumentType;\n(function (InstrumentType) {\n  InstrumentType[\"COUNTER\"] = \"COUNTER\";\n  InstrumentType[\"HISTOGRAM\"] = \"HISTOGRAM\";\n  InstrumentType[\"UP_DOWN_COUNTER\"] = \"UP_DOWN_COUNTER\";\n  InstrumentType[\"OBSERVABLE_COUNTER\"] = \"OBSERVABLE_COUNTER\";\n  InstrumentType[\"OBSERVABLE_GAUGE\"] = \"OBSERVABLE_GAUGE\";\n  InstrumentType[\"OBSERVABLE_UP_DOWN_COUNTER\"] = \"OBSERVABLE_UP_DOWN_COUNTER\";\n})(InstrumentType || (InstrumentType = {}));\nexport function createInstrumentDescriptor(name, type, options) {\n  var _a, _b, _c;\n  return {\n    name: name,\n    type: type,\n    description: (_a = options === null || options === void 0 ? void 0 : options.description) !== null && _a !== void 0 ? _a : '',\n    unit: (_b = options === null || options === void 0 ? void 0 : options.unit) !== null && _b !== void 0 ? _b : '',\n    valueType: (_c = options === null || options === void 0 ? void 0 : options.valueType) !== null && _c !== void 0 ? _c : ValueType.DOUBLE\n  };\n}\nexport function createInstrumentDescriptorWithView(view, instrument) {\n  var _a, _b;\n  return {\n    name: (_a = view.name) !== null && _a !== void 0 ? _a : instrument.name,\n    description: (_b = view.description) !== null && _b !== void 0 ? _b : instrument.description,\n    type: instrument.type,\n    unit: instrument.unit,\n    valueType: instrument.valueType\n  };\n}\nexport function isDescriptorCompatibleWith(descriptor, otherDescriptor) {\n  return descriptor.name === otherDescriptor.name && descriptor.unit === otherDescriptor.unit && descriptor.type === otherDescriptor.type && descriptor.valueType === otherDescriptor.valueType;\n}","map":{"version":3,"names":["ValueType","InstrumentType","createInstrumentDescriptor","name","type","options","_a","_b","_c","description","unit","valueType","DOUBLE","createInstrumentDescriptorWithView","view","instrument","isDescriptorCompatibleWith","descriptor","otherDescriptor"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/sdk-metrics/build/esm/InstrumentDescriptor.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ValueType } from '@opentelemetry/api';\n/**\n * Supported types of metric instruments.\n */\nexport var InstrumentType;\n(function (InstrumentType) {\n    InstrumentType[\"COUNTER\"] = \"COUNTER\";\n    InstrumentType[\"HISTOGRAM\"] = \"HISTOGRAM\";\n    InstrumentType[\"UP_DOWN_COUNTER\"] = \"UP_DOWN_COUNTER\";\n    InstrumentType[\"OBSERVABLE_COUNTER\"] = \"OBSERVABLE_COUNTER\";\n    InstrumentType[\"OBSERVABLE_GAUGE\"] = \"OBSERVABLE_GAUGE\";\n    InstrumentType[\"OBSERVABLE_UP_DOWN_COUNTER\"] = \"OBSERVABLE_UP_DOWN_COUNTER\";\n})(InstrumentType || (InstrumentType = {}));\nexport function createInstrumentDescriptor(name, type, options) {\n    var _a, _b, _c;\n    return {\n        name: name,\n        type: type,\n        description: (_a = options === null || options === void 0 ? void 0 : options.description) !== null && _a !== void 0 ? _a : '',\n        unit: (_b = options === null || options === void 0 ? void 0 : options.unit) !== null && _b !== void 0 ? _b : '',\n        valueType: (_c = options === null || options === void 0 ? void 0 : options.valueType) !== null && _c !== void 0 ? _c : ValueType.DOUBLE,\n    };\n}\nexport function createInstrumentDescriptorWithView(view, instrument) {\n    var _a, _b;\n    return {\n        name: (_a = view.name) !== null && _a !== void 0 ? _a : instrument.name,\n        description: (_b = view.description) !== null && _b !== void 0 ? _b : instrument.description,\n        type: instrument.type,\n        unit: instrument.unit,\n        valueType: instrument.valueType,\n    };\n}\nexport function isDescriptorCompatibleWith(descriptor, otherDescriptor) {\n    return descriptor.name === otherDescriptor.name\n        && descriptor.unit === otherDescriptor.unit\n        && descriptor.type === otherDescriptor.type\n        && descriptor.valueType === otherDescriptor.valueType;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C;AACA;AACA;AACA,OAAO,IAAIC,cAAc;AACzB,CAAC,UAAUA,cAAc,EAAE;EACvBA,cAAc,CAAC,SAAS,CAAC,GAAG,SAAS;EACrCA,cAAc,CAAC,WAAW,CAAC,GAAG,WAAW;EACzCA,cAAc,CAAC,iBAAiB,CAAC,GAAG,iBAAiB;EACrDA,cAAc,CAAC,oBAAoB,CAAC,GAAG,oBAAoB;EAC3DA,cAAc,CAAC,kBAAkB,CAAC,GAAG,kBAAkB;EACvDA,cAAc,CAAC,4BAA4B,CAAC,GAAG,4BAA4B;AAC/E,CAAC,EAAEA,cAAc,KAAKA,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3C,OAAO,SAASC,0BAA0B,CAACC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAE;EAC5D,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE;EACd,OAAO;IACHL,IAAI,EAAEA,IAAI;IACVC,IAAI,EAAEA,IAAI;IACVK,WAAW,EAAE,CAACH,EAAE,GAAGD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI,WAAW,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE;IAC7HI,IAAI,EAAE,CAACH,EAAE,GAAGF,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACK,IAAI,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE;IAC/GI,SAAS,EAAE,CAACH,EAAE,GAAGH,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACM,SAAS,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGR,SAAS,CAACY;EACrI,CAAC;AACL;AACA,OAAO,SAASC,kCAAkC,CAACC,IAAI,EAAEC,UAAU,EAAE;EACjE,IAAIT,EAAE,EAAEC,EAAE;EACV,OAAO;IACHJ,IAAI,EAAE,CAACG,EAAE,GAAGQ,IAAI,CAACX,IAAI,MAAM,IAAI,IAAIG,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGS,UAAU,CAACZ,IAAI;IACvEM,WAAW,EAAE,CAACF,EAAE,GAAGO,IAAI,CAACL,WAAW,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGQ,UAAU,CAACN,WAAW;IAC5FL,IAAI,EAAEW,UAAU,CAACX,IAAI;IACrBM,IAAI,EAAEK,UAAU,CAACL,IAAI;IACrBC,SAAS,EAAEI,UAAU,CAACJ;EAC1B,CAAC;AACL;AACA,OAAO,SAASK,0BAA0B,CAACC,UAAU,EAAEC,eAAe,EAAE;EACpE,OAAOD,UAAU,CAACd,IAAI,KAAKe,eAAe,CAACf,IAAI,IACxCc,UAAU,CAACP,IAAI,KAAKQ,eAAe,CAACR,IAAI,IACxCO,UAAU,CAACb,IAAI,KAAKc,eAAe,CAACd,IAAI,IACxCa,UAAU,CAACN,SAAS,KAAKO,eAAe,CAACP,SAAS;AAC7D"},"metadata":{},"sourceType":"module","externalDependencies":[]}