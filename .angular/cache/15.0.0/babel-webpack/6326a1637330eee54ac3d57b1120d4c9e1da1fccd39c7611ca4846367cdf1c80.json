{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FilterStackFactory = exports.FilterStack = void 0;\nclass FilterStack {\n  constructor(filters) {\n    this.filters = filters;\n  }\n  sendMetadata(metadata) {\n    let result = metadata;\n    for (let i = 0; i < this.filters.length; i++) {\n      result = this.filters[i].sendMetadata(result);\n    }\n    return result;\n  }\n  receiveMetadata(metadata) {\n    let result = metadata;\n    for (let i = this.filters.length - 1; i >= 0; i--) {\n      result = this.filters[i].receiveMetadata(result);\n    }\n    return result;\n  }\n  sendMessage(message) {\n    let result = message;\n    for (let i = 0; i < this.filters.length; i++) {\n      result = this.filters[i].sendMessage(result);\n    }\n    return result;\n  }\n  receiveMessage(message) {\n    let result = message;\n    for (let i = this.filters.length - 1; i >= 0; i--) {\n      result = this.filters[i].receiveMessage(result);\n    }\n    return result;\n  }\n  receiveTrailers(status) {\n    let result = status;\n    for (let i = this.filters.length - 1; i >= 0; i--) {\n      result = this.filters[i].receiveTrailers(result);\n    }\n    return result;\n  }\n  refresh() {\n    for (const filter of this.filters) {\n      filter.refresh();\n    }\n  }\n  push(filters) {\n    this.filters.unshift(...filters);\n  }\n  getFilters() {\n    return this.filters;\n  }\n}\nexports.FilterStack = FilterStack;\nclass FilterStackFactory {\n  constructor(factories) {\n    this.factories = factories;\n  }\n  push(filterFactories) {\n    this.factories.unshift(...filterFactories);\n  }\n  createFilter(callStream) {\n    return new FilterStack(this.factories.map(factory => factory.createFilter(callStream)));\n  }\n}\nexports.FilterStackFactory = FilterStackFactory;","map":{"version":3,"names":["Object","defineProperty","exports","value","FilterStackFactory","FilterStack","constructor","filters","sendMetadata","metadata","result","i","length","receiveMetadata","sendMessage","message","receiveMessage","receiveTrailers","status","refresh","filter","push","unshift","getFilters","factories","filterFactories","createFilter","callStream","map","factory"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@grpc/grpc-js/build/src/filter-stack.js"],"sourcesContent":["\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilterStackFactory = exports.FilterStack = void 0;\nclass FilterStack {\n    constructor(filters) {\n        this.filters = filters;\n    }\n    sendMetadata(metadata) {\n        let result = metadata;\n        for (let i = 0; i < this.filters.length; i++) {\n            result = this.filters[i].sendMetadata(result);\n        }\n        return result;\n    }\n    receiveMetadata(metadata) {\n        let result = metadata;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveMetadata(result);\n        }\n        return result;\n    }\n    sendMessage(message) {\n        let result = message;\n        for (let i = 0; i < this.filters.length; i++) {\n            result = this.filters[i].sendMessage(result);\n        }\n        return result;\n    }\n    receiveMessage(message) {\n        let result = message;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveMessage(result);\n        }\n        return result;\n    }\n    receiveTrailers(status) {\n        let result = status;\n        for (let i = this.filters.length - 1; i >= 0; i--) {\n            result = this.filters[i].receiveTrailers(result);\n        }\n        return result;\n    }\n    refresh() {\n        for (const filter of this.filters) {\n            filter.refresh();\n        }\n    }\n    push(filters) {\n        this.filters.unshift(...filters);\n    }\n    getFilters() {\n        return this.filters;\n    }\n}\nexports.FilterStack = FilterStack;\nclass FilterStackFactory {\n    constructor(factories) {\n        this.factories = factories;\n    }\n    push(filterFactories) {\n        this.factories.unshift(...filterFactories);\n    }\n    createFilter(callStream) {\n        return new FilterStack(this.factories.map((factory) => factory.createFilter(callStream)));\n    }\n}\nexports.FilterStackFactory = FilterStackFactory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}