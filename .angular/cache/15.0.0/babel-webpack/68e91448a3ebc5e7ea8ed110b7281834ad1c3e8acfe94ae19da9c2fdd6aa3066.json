{"ast":null,"code":"var __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { toAttributes } from '../common/internal';\nimport { sdkSpanToOtlpSpan } from './internal';\nexport function createExportTraceServiceRequest(spans, useHex) {\n  return {\n    resourceSpans: spanRecordsToResourceSpans(spans, useHex)\n  };\n}\nfunction createResourceMap(readableSpans) {\n  var e_1, _a;\n  var resourceMap = new Map();\n  try {\n    for (var readableSpans_1 = __values(readableSpans), readableSpans_1_1 = readableSpans_1.next(); !readableSpans_1_1.done; readableSpans_1_1 = readableSpans_1.next()) {\n      var record = readableSpans_1_1.value;\n      var ilmMap = resourceMap.get(record.resource);\n      if (!ilmMap) {\n        ilmMap = new Map();\n        resourceMap.set(record.resource, ilmMap);\n      }\n      // TODO this is duplicated in basic tracer. Consolidate on a common helper in core\n      var instrumentationLibraryKey = record.instrumentationLibrary.name + \"@\" + (record.instrumentationLibrary.version || '') + \":\" + (record.instrumentationLibrary.schemaUrl || '');\n      var records = ilmMap.get(instrumentationLibraryKey);\n      if (!records) {\n        records = [];\n        ilmMap.set(instrumentationLibraryKey, records);\n      }\n      records.push(record);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (readableSpans_1_1 && !readableSpans_1_1.done && (_a = readableSpans_1.return)) _a.call(readableSpans_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return resourceMap;\n}\nfunction spanRecordsToResourceSpans(readableSpans, useHex) {\n  var resourceMap = createResourceMap(readableSpans);\n  var out = [];\n  var entryIterator = resourceMap.entries();\n  var entry = entryIterator.next();\n  while (!entry.done) {\n    var _a = __read(entry.value, 2),\n      resource = _a[0],\n      ilmMap = _a[1];\n    var scopeResourceSpans = [];\n    var ilmIterator = ilmMap.values();\n    var ilmEntry = ilmIterator.next();\n    while (!ilmEntry.done) {\n      var scopeSpans = ilmEntry.value;\n      if (scopeSpans.length > 0) {\n        var _b = scopeSpans[0].instrumentationLibrary,\n          name_1 = _b.name,\n          version = _b.version,\n          schemaUrl = _b.schemaUrl;\n        var spans = scopeSpans.map(function (readableSpan) {\n          return sdkSpanToOtlpSpan(readableSpan, useHex);\n        });\n        scopeResourceSpans.push({\n          scope: {\n            name: name_1,\n            version: version\n          },\n          spans: spans,\n          schemaUrl: schemaUrl\n        });\n      }\n      ilmEntry = ilmIterator.next();\n    }\n    // TODO SDK types don't provide resource schema URL at this time\n    var transformedSpans = {\n      resource: {\n        attributes: toAttributes(resource.attributes),\n        droppedAttributesCount: 0\n      },\n      scopeSpans: scopeResourceSpans,\n      schemaUrl: undefined\n    };\n    out.push(transformedSpans);\n    entry = entryIterator.next();\n  }\n  return out;\n}","map":{"version":3,"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","ar","e","push","error","toAttributes","sdkSpanToOtlpSpan","createExportTraceServiceRequest","spans","useHex","resourceSpans","spanRecordsToResourceSpans","createResourceMap","readableSpans","e_1","_a","resourceMap","Map","readableSpans_1","readableSpans_1_1","record","ilmMap","get","resource","set","instrumentationLibraryKey","instrumentationLibrary","name","version","schemaUrl","records","e_1_1","return","out","entryIterator","entries","entry","scopeResourceSpans","ilmIterator","values","ilmEntry","scopeSpans","_b","name_1","map","readableSpan","scope","transformedSpans","attributes","droppedAttributesCount","undefined"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/otlp-transformer/build/esm/trace/index.js"],"sourcesContent":["var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { toAttributes } from '../common/internal';\nimport { sdkSpanToOtlpSpan } from './internal';\nexport function createExportTraceServiceRequest(spans, useHex) {\n    return {\n        resourceSpans: spanRecordsToResourceSpans(spans, useHex)\n    };\n}\nfunction createResourceMap(readableSpans) {\n    var e_1, _a;\n    var resourceMap = new Map();\n    try {\n        for (var readableSpans_1 = __values(readableSpans), readableSpans_1_1 = readableSpans_1.next(); !readableSpans_1_1.done; readableSpans_1_1 = readableSpans_1.next()) {\n            var record = readableSpans_1_1.value;\n            var ilmMap = resourceMap.get(record.resource);\n            if (!ilmMap) {\n                ilmMap = new Map();\n                resourceMap.set(record.resource, ilmMap);\n            }\n            // TODO this is duplicated in basic tracer. Consolidate on a common helper in core\n            var instrumentationLibraryKey = record.instrumentationLibrary.name + \"@\" + (record.instrumentationLibrary.version || '') + \":\" + (record.instrumentationLibrary.schemaUrl || '');\n            var records = ilmMap.get(instrumentationLibraryKey);\n            if (!records) {\n                records = [];\n                ilmMap.set(instrumentationLibraryKey, records);\n            }\n            records.push(record);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (readableSpans_1_1 && !readableSpans_1_1.done && (_a = readableSpans_1.return)) _a.call(readableSpans_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return resourceMap;\n}\nfunction spanRecordsToResourceSpans(readableSpans, useHex) {\n    var resourceMap = createResourceMap(readableSpans);\n    var out = [];\n    var entryIterator = resourceMap.entries();\n    var entry = entryIterator.next();\n    while (!entry.done) {\n        var _a = __read(entry.value, 2), resource = _a[0], ilmMap = _a[1];\n        var scopeResourceSpans = [];\n        var ilmIterator = ilmMap.values();\n        var ilmEntry = ilmIterator.next();\n        while (!ilmEntry.done) {\n            var scopeSpans = ilmEntry.value;\n            if (scopeSpans.length > 0) {\n                var _b = scopeSpans[0].instrumentationLibrary, name_1 = _b.name, version = _b.version, schemaUrl = _b.schemaUrl;\n                var spans = scopeSpans.map(function (readableSpan) { return sdkSpanToOtlpSpan(readableSpan, useHex); });\n                scopeResourceSpans.push({\n                    scope: { name: name_1, version: version },\n                    spans: spans,\n                    schemaUrl: schemaUrl\n                });\n            }\n            ilmEntry = ilmIterator.next();\n        }\n        // TODO SDK types don't provide resource schema URL at this time\n        var transformedSpans = {\n            resource: {\n                attributes: toAttributes(resource.attributes),\n                droppedAttributesCount: 0,\n            },\n            scopeSpans: scopeResourceSpans,\n            schemaUrl: undefined\n        };\n        out.push(transformedSpans);\n        entry = entryIterator.next();\n    }\n    return out;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}