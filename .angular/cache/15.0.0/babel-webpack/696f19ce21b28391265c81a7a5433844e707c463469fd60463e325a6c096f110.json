{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nimport { appendResourcePathToUrl, appendRootPathToUrlIfNeeded, OTLPExporterBrowserBase } from '@opentelemetry/otlp-exporter-base';\nimport { createExportTraceServiceRequest } from '@opentelemetry/otlp-transformer';\nvar DEFAULT_COLLECTOR_RESOURCE_PATH = 'v1/traces';\nvar DEFAULT_COLLECTOR_URL = \"http://localhost:4318/\" + DEFAULT_COLLECTOR_RESOURCE_PATH;\n/**\n * Collector Trace Exporter for Web\n */\nvar OTLPTraceExporter = /** @class */function (_super) {\n  __extends(OTLPTraceExporter, _super);\n  function OTLPTraceExporter(config) {\n    if (config === void 0) {\n      config = {};\n    }\n    var _this = _super.call(this, config) || this;\n    _this._headers = Object.assign(_this._headers, baggageUtils.parseKeyPairsIntoRecord(getEnv().OTEL_EXPORTER_OTLP_TRACES_HEADERS));\n    return _this;\n  }\n  OTLPTraceExporter.prototype.convert = function (spans) {\n    return createExportTraceServiceRequest(spans, true);\n  };\n  OTLPTraceExporter.prototype.getDefaultUrl = function (config) {\n    return typeof config.url === 'string' ? config.url : getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT.length > 0 ? appendRootPathToUrlIfNeeded(getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT) : getEnv().OTEL_EXPORTER_OTLP_ENDPOINT.length > 0 ? appendResourcePathToUrl(getEnv().OTEL_EXPORTER_OTLP_ENDPOINT, DEFAULT_COLLECTOR_RESOURCE_PATH) : DEFAULT_COLLECTOR_URL;\n  };\n  return OTLPTraceExporter;\n}(OTLPExporterBrowserBase);\nexport { OTLPTraceExporter };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","getEnv","baggageUtils","appendResourcePathToUrl","appendRootPathToUrlIfNeeded","OTLPExporterBrowserBase","createExportTraceServiceRequest","DEFAULT_COLLECTOR_RESOURCE_PATH","DEFAULT_COLLECTOR_URL","OTLPTraceExporter","_super","config","_this","_headers","assign","parseKeyPairsIntoRecord","OTEL_EXPORTER_OTLP_TRACES_HEADERS","convert","spans","getDefaultUrl","url","OTEL_EXPORTER_OTLP_TRACES_ENDPOINT","length","OTEL_EXPORTER_OTLP_ENDPOINT"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/exporter-trace-otlp-http/build/esm/platform/browser/OTLPTraceExporter.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nimport { appendResourcePathToUrl, appendRootPathToUrlIfNeeded, OTLPExporterBrowserBase } from '@opentelemetry/otlp-exporter-base';\nimport { createExportTraceServiceRequest } from '@opentelemetry/otlp-transformer';\nvar DEFAULT_COLLECTOR_RESOURCE_PATH = 'v1/traces';\nvar DEFAULT_COLLECTOR_URL = \"http://localhost:4318/\" + DEFAULT_COLLECTOR_RESOURCE_PATH;\n/**\n * Collector Trace Exporter for Web\n */\nvar OTLPTraceExporter = /** @class */ (function (_super) {\n    __extends(OTLPTraceExporter, _super);\n    function OTLPTraceExporter(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this, config) || this;\n        _this._headers = Object.assign(_this._headers, baggageUtils.parseKeyPairsIntoRecord(getEnv().OTEL_EXPORTER_OTLP_TRACES_HEADERS));\n        return _this;\n    }\n    OTLPTraceExporter.prototype.convert = function (spans) {\n        return createExportTraceServiceRequest(spans, true);\n    };\n    OTLPTraceExporter.prototype.getDefaultUrl = function (config) {\n        return typeof config.url === 'string'\n            ? config.url\n            : getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT.length > 0\n                ? appendRootPathToUrlIfNeeded(getEnv().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT)\n                : getEnv().OTEL_EXPORTER_OTLP_ENDPOINT.length > 0\n                    ? appendResourcePathToUrl(getEnv().OTEL_EXPORTER_OTLP_ENDPOINT, DEFAULT_COLLECTOR_RESOURCE_PATH)\n                    : DEFAULT_COLLECTOR_URL;\n    };\n    return OTLPTraceExporter;\n}(OTLPExporterBrowserBase));\nexport { OTLPTraceExporter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}