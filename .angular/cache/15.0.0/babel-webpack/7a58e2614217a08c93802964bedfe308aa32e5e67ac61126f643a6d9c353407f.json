{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ValueType } from '@opentelemetry/api';\nimport { hrTimeToNanoseconds } from '@opentelemetry/core';\nimport { AggregationTemporality, DataPointType } from '@opentelemetry/sdk-metrics';\nimport { toAttributes } from '../common/internal';\nexport function toResourceMetrics(resourceMetrics) {\n  return {\n    resource: {\n      attributes: toAttributes(resourceMetrics.resource.attributes),\n      droppedAttributesCount: 0\n    },\n    schemaUrl: undefined,\n    scopeMetrics: toScopeMetrics(resourceMetrics.scopeMetrics)\n  };\n}\nexport function toScopeMetrics(scopeMetrics) {\n  return Array.from(scopeMetrics.map(function (metrics) {\n    var scopeMetrics = {\n      scope: {\n        name: metrics.scope.name,\n        version: metrics.scope.version\n      },\n      metrics: metrics.metrics.map(function (metricData) {\n        return toMetric(metricData);\n      }),\n      schemaUrl: metrics.scope.schemaUrl\n    };\n    return scopeMetrics;\n  }));\n}\nexport function toMetric(metricData) {\n  var out = {\n    name: metricData.descriptor.name,\n    description: metricData.descriptor.description,\n    unit: metricData.descriptor.unit\n  };\n  var aggregationTemporality = toAggregationTemporality(metricData.aggregationTemporality);\n  if (metricData.dataPointType === DataPointType.SUM) {\n    out.sum = {\n      aggregationTemporality: aggregationTemporality,\n      isMonotonic: metricData.isMonotonic,\n      dataPoints: toSingularDataPoints(metricData)\n    };\n  } else if (metricData.dataPointType === DataPointType.GAUGE) {\n    // Instrument is a gauge.\n    out.gauge = {\n      dataPoints: toSingularDataPoints(metricData)\n    };\n  } else if (metricData.dataPointType === DataPointType.HISTOGRAM) {\n    out.histogram = {\n      aggregationTemporality: aggregationTemporality,\n      dataPoints: toHistogramDataPoints(metricData)\n    };\n  }\n  return out;\n}\nfunction toSingularDataPoint(dataPoint, valueType) {\n  var out = {\n    attributes: toAttributes(dataPoint.attributes),\n    startTimeUnixNano: hrTimeToNanoseconds(dataPoint.startTime),\n    timeUnixNano: hrTimeToNanoseconds(dataPoint.endTime)\n  };\n  if (valueType === ValueType.INT) {\n    out.asInt = dataPoint.value;\n  } else if (valueType === ValueType.DOUBLE) {\n    out.asDouble = dataPoint.value;\n  }\n  return out;\n}\nfunction toSingularDataPoints(metricData) {\n  return metricData.dataPoints.map(function (dataPoint) {\n    return toSingularDataPoint(dataPoint, metricData.descriptor.valueType);\n  });\n}\nfunction toHistogramDataPoints(metricData) {\n  return metricData.dataPoints.map(function (dataPoint) {\n    var histogram = dataPoint.value;\n    return {\n      attributes: toAttributes(dataPoint.attributes),\n      bucketCounts: histogram.buckets.counts,\n      explicitBounds: histogram.buckets.boundaries,\n      count: histogram.count,\n      sum: histogram.sum,\n      min: histogram.min,\n      max: histogram.max,\n      startTimeUnixNano: hrTimeToNanoseconds(dataPoint.startTime),\n      timeUnixNano: hrTimeToNanoseconds(dataPoint.endTime)\n    };\n  });\n}\nfunction toAggregationTemporality(temporality) {\n  if (temporality === AggregationTemporality.DELTA) {\n    return 1 /* AGGREGATION_TEMPORALITY_DELTA */;\n  }\n\n  if (temporality === AggregationTemporality.CUMULATIVE) {\n    return 2 /* AGGREGATION_TEMPORALITY_CUMULATIVE */;\n  }\n\n  return 0 /* AGGREGATION_TEMPORALITY_UNSPECIFIED */;\n}","map":{"version":3,"names":["ValueType","hrTimeToNanoseconds","AggregationTemporality","DataPointType","toAttributes","toResourceMetrics","resourceMetrics","resource","attributes","droppedAttributesCount","schemaUrl","undefined","scopeMetrics","toScopeMetrics","Array","from","map","metrics","scope","name","version","metricData","toMetric","out","descriptor","description","unit","aggregationTemporality","toAggregationTemporality","dataPointType","SUM","sum","isMonotonic","dataPoints","toSingularDataPoints","GAUGE","gauge","HISTOGRAM","histogram","toHistogramDataPoints","toSingularDataPoint","dataPoint","valueType","startTimeUnixNano","startTime","timeUnixNano","endTime","INT","asInt","value","DOUBLE","asDouble","bucketCounts","buckets","counts","explicitBounds","boundaries","count","min","max","temporality","DELTA","CUMULATIVE"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/otlp-transformer/build/esm/metrics/internal.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ValueType } from '@opentelemetry/api';\nimport { hrTimeToNanoseconds } from '@opentelemetry/core';\nimport { AggregationTemporality, DataPointType } from '@opentelemetry/sdk-metrics';\nimport { toAttributes } from '../common/internal';\nexport function toResourceMetrics(resourceMetrics) {\n    return {\n        resource: {\n            attributes: toAttributes(resourceMetrics.resource.attributes),\n            droppedAttributesCount: 0\n        },\n        schemaUrl: undefined,\n        scopeMetrics: toScopeMetrics(resourceMetrics.scopeMetrics)\n    };\n}\nexport function toScopeMetrics(scopeMetrics) {\n    return Array.from(scopeMetrics.map(function (metrics) {\n        var scopeMetrics = {\n            scope: {\n                name: metrics.scope.name,\n                version: metrics.scope.version,\n            },\n            metrics: metrics.metrics.map(function (metricData) { return toMetric(metricData); }),\n            schemaUrl: metrics.scope.schemaUrl\n        };\n        return scopeMetrics;\n    }));\n}\nexport function toMetric(metricData) {\n    var out = {\n        name: metricData.descriptor.name,\n        description: metricData.descriptor.description,\n        unit: metricData.descriptor.unit,\n    };\n    var aggregationTemporality = toAggregationTemporality(metricData.aggregationTemporality);\n    if (metricData.dataPointType === DataPointType.SUM) {\n        out.sum = {\n            aggregationTemporality: aggregationTemporality,\n            isMonotonic: metricData.isMonotonic,\n            dataPoints: toSingularDataPoints(metricData)\n        };\n    }\n    else if (metricData.dataPointType === DataPointType.GAUGE) {\n        // Instrument is a gauge.\n        out.gauge = {\n            dataPoints: toSingularDataPoints(metricData)\n        };\n    }\n    else if (metricData.dataPointType === DataPointType.HISTOGRAM) {\n        out.histogram = {\n            aggregationTemporality: aggregationTemporality,\n            dataPoints: toHistogramDataPoints(metricData)\n        };\n    }\n    return out;\n}\nfunction toSingularDataPoint(dataPoint, valueType) {\n    var out = {\n        attributes: toAttributes(dataPoint.attributes),\n        startTimeUnixNano: hrTimeToNanoseconds(dataPoint.startTime),\n        timeUnixNano: hrTimeToNanoseconds(dataPoint.endTime),\n    };\n    if (valueType === ValueType.INT) {\n        out.asInt = dataPoint.value;\n    }\n    else if (valueType === ValueType.DOUBLE) {\n        out.asDouble = dataPoint.value;\n    }\n    return out;\n}\nfunction toSingularDataPoints(metricData) {\n    return metricData.dataPoints.map(function (dataPoint) {\n        return toSingularDataPoint(dataPoint, metricData.descriptor.valueType);\n    });\n}\nfunction toHistogramDataPoints(metricData) {\n    return metricData.dataPoints.map(function (dataPoint) {\n        var histogram = dataPoint.value;\n        return {\n            attributes: toAttributes(dataPoint.attributes),\n            bucketCounts: histogram.buckets.counts,\n            explicitBounds: histogram.buckets.boundaries,\n            count: histogram.count,\n            sum: histogram.sum,\n            min: histogram.min,\n            max: histogram.max,\n            startTimeUnixNano: hrTimeToNanoseconds(dataPoint.startTime),\n            timeUnixNano: hrTimeToNanoseconds(dataPoint.endTime),\n        };\n    });\n}\nfunction toAggregationTemporality(temporality) {\n    if (temporality === AggregationTemporality.DELTA) {\n        return 1 /* AGGREGATION_TEMPORALITY_DELTA */;\n    }\n    if (temporality === AggregationTemporality.CUMULATIVE) {\n        return 2 /* AGGREGATION_TEMPORALITY_CUMULATIVE */;\n    }\n    return 0 /* AGGREGATION_TEMPORALITY_UNSPECIFIED */;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,sBAAsB,EAAEC,aAAa,QAAQ,4BAA4B;AAClF,SAASC,YAAY,QAAQ,oBAAoB;AACjD,OAAO,SAASC,iBAAiB,CAACC,eAAe,EAAE;EAC/C,OAAO;IACHC,QAAQ,EAAE;MACNC,UAAU,EAAEJ,YAAY,CAACE,eAAe,CAACC,QAAQ,CAACC,UAAU,CAAC;MAC7DC,sBAAsB,EAAE;IAC5B,CAAC;IACDC,SAAS,EAAEC,SAAS;IACpBC,YAAY,EAAEC,cAAc,CAACP,eAAe,CAACM,YAAY;EAC7D,CAAC;AACL;AACA,OAAO,SAASC,cAAc,CAACD,YAAY,EAAE;EACzC,OAAOE,KAAK,CAACC,IAAI,CAACH,YAAY,CAACI,GAAG,CAAC,UAAUC,OAAO,EAAE;IAClD,IAAIL,YAAY,GAAG;MACfM,KAAK,EAAE;QACHC,IAAI,EAAEF,OAAO,CAACC,KAAK,CAACC,IAAI;QACxBC,OAAO,EAAEH,OAAO,CAACC,KAAK,CAACE;MAC3B,CAAC;MACDH,OAAO,EAAEA,OAAO,CAACA,OAAO,CAACD,GAAG,CAAC,UAAUK,UAAU,EAAE;QAAE,OAAOC,QAAQ,CAACD,UAAU,CAAC;MAAE,CAAC,CAAC;MACpFX,SAAS,EAAEO,OAAO,CAACC,KAAK,CAACR;IAC7B,CAAC;IACD,OAAOE,YAAY;EACvB,CAAC,CAAC,CAAC;AACP;AACA,OAAO,SAASU,QAAQ,CAACD,UAAU,EAAE;EACjC,IAAIE,GAAG,GAAG;IACNJ,IAAI,EAAEE,UAAU,CAACG,UAAU,CAACL,IAAI;IAChCM,WAAW,EAAEJ,UAAU,CAACG,UAAU,CAACC,WAAW;IAC9CC,IAAI,EAAEL,UAAU,CAACG,UAAU,CAACE;EAChC,CAAC;EACD,IAAIC,sBAAsB,GAAGC,wBAAwB,CAACP,UAAU,CAACM,sBAAsB,CAAC;EACxF,IAAIN,UAAU,CAACQ,aAAa,KAAK1B,aAAa,CAAC2B,GAAG,EAAE;IAChDP,GAAG,CAACQ,GAAG,GAAG;MACNJ,sBAAsB,EAAEA,sBAAsB;MAC9CK,WAAW,EAAEX,UAAU,CAACW,WAAW;MACnCC,UAAU,EAAEC,oBAAoB,CAACb,UAAU;IAC/C,CAAC;EACL,CAAC,MACI,IAAIA,UAAU,CAACQ,aAAa,KAAK1B,aAAa,CAACgC,KAAK,EAAE;IACvD;IACAZ,GAAG,CAACa,KAAK,GAAG;MACRH,UAAU,EAAEC,oBAAoB,CAACb,UAAU;IAC/C,CAAC;EACL,CAAC,MACI,IAAIA,UAAU,CAACQ,aAAa,KAAK1B,aAAa,CAACkC,SAAS,EAAE;IAC3Dd,GAAG,CAACe,SAAS,GAAG;MACZX,sBAAsB,EAAEA,sBAAsB;MAC9CM,UAAU,EAAEM,qBAAqB,CAAClB,UAAU;IAChD,CAAC;EACL;EACA,OAAOE,GAAG;AACd;AACA,SAASiB,mBAAmB,CAACC,SAAS,EAAEC,SAAS,EAAE;EAC/C,IAAInB,GAAG,GAAG;IACNf,UAAU,EAAEJ,YAAY,CAACqC,SAAS,CAACjC,UAAU,CAAC;IAC9CmC,iBAAiB,EAAE1C,mBAAmB,CAACwC,SAAS,CAACG,SAAS,CAAC;IAC3DC,YAAY,EAAE5C,mBAAmB,CAACwC,SAAS,CAACK,OAAO;EACvD,CAAC;EACD,IAAIJ,SAAS,KAAK1C,SAAS,CAAC+C,GAAG,EAAE;IAC7BxB,GAAG,CAACyB,KAAK,GAAGP,SAAS,CAACQ,KAAK;EAC/B,CAAC,MACI,IAAIP,SAAS,KAAK1C,SAAS,CAACkD,MAAM,EAAE;IACrC3B,GAAG,CAAC4B,QAAQ,GAAGV,SAAS,CAACQ,KAAK;EAClC;EACA,OAAO1B,GAAG;AACd;AACA,SAASW,oBAAoB,CAACb,UAAU,EAAE;EACtC,OAAOA,UAAU,CAACY,UAAU,CAACjB,GAAG,CAAC,UAAUyB,SAAS,EAAE;IAClD,OAAOD,mBAAmB,CAACC,SAAS,EAAEpB,UAAU,CAACG,UAAU,CAACkB,SAAS,CAAC;EAC1E,CAAC,CAAC;AACN;AACA,SAASH,qBAAqB,CAAClB,UAAU,EAAE;EACvC,OAAOA,UAAU,CAACY,UAAU,CAACjB,GAAG,CAAC,UAAUyB,SAAS,EAAE;IAClD,IAAIH,SAAS,GAAGG,SAAS,CAACQ,KAAK;IAC/B,OAAO;MACHzC,UAAU,EAAEJ,YAAY,CAACqC,SAAS,CAACjC,UAAU,CAAC;MAC9C4C,YAAY,EAAEd,SAAS,CAACe,OAAO,CAACC,MAAM;MACtCC,cAAc,EAAEjB,SAAS,CAACe,OAAO,CAACG,UAAU;MAC5CC,KAAK,EAAEnB,SAAS,CAACmB,KAAK;MACtB1B,GAAG,EAAEO,SAAS,CAACP,GAAG;MAClB2B,GAAG,EAAEpB,SAAS,CAACoB,GAAG;MAClBC,GAAG,EAAErB,SAAS,CAACqB,GAAG;MAClBhB,iBAAiB,EAAE1C,mBAAmB,CAACwC,SAAS,CAACG,SAAS,CAAC;MAC3DC,YAAY,EAAE5C,mBAAmB,CAACwC,SAAS,CAACK,OAAO;IACvD,CAAC;EACL,CAAC,CAAC;AACN;AACA,SAASlB,wBAAwB,CAACgC,WAAW,EAAE;EAC3C,IAAIA,WAAW,KAAK1D,sBAAsB,CAAC2D,KAAK,EAAE;IAC9C,OAAO,CAAC,CAAC;EACb;;EACA,IAAID,WAAW,KAAK1D,sBAAsB,CAAC4D,UAAU,EAAE;IACnD,OAAO,CAAC,CAAC;EACb;;EACA,OAAO,CAAC,CAAC;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}