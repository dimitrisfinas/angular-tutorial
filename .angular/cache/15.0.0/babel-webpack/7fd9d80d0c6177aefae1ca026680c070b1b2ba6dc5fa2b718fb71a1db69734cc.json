{"ast":null,"code":"export function sanitizeAttributes(attributes) {\n  var out = {};\n  if (attributes == null || typeof attributes !== 'object') {\n    return out;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  for (var _i = 0, _a = Object.entries(attributes); _i < _a.length; _i++) {\n    var _b = _a[_i],\n      k = _b[0],\n      v = _b[1];\n    if (isAttributeValue(v)) {\n      if (Array.isArray(v)) {\n        out[k] = v.slice();\n      } else {\n        out[k] = v;\n      }\n    }\n  }\n  return out;\n}\nexport function isAttributeValue(val) {\n  if (val == null) {\n    return true;\n  }\n  if (Array.isArray(val)) {\n    return isHomogeneousAttributeValueArray(val);\n  }\n  return isValidPrimitiveAttributeValue(val);\n}\nfunction isHomogeneousAttributeValueArray(arr) {\n  var type;\n  for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n    var element = arr_1[_i];\n    // null/undefined elements are allowed\n    if (element == null) continue;\n    if (!type) {\n      if (isValidPrimitiveAttributeValue(element)) {\n        type = typeof element;\n        continue;\n      }\n      // encountered an invalid primitive\n      return false;\n    }\n    if (typeof element === type) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\nfunction isValidPrimitiveAttributeValue(val) {\n  switch (typeof val) {\n    case 'number':\n      return true;\n    case 'boolean':\n      return true;\n    case 'string':\n      return true;\n  }\n  return false;\n}","map":{"version":3,"names":["sanitizeAttributes","attributes","out","_i","_a","Object","entries","length","_b","k","v","isAttributeValue","Array","isArray","slice","val","isHomogeneousAttributeValueArray","isValidPrimitiveAttributeValue","arr","type","arr_1","element"],"sources":["/Users/dimitris.finas/node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/core/build/esm/common/attributes.js"],"sourcesContent":["export function sanitizeAttributes(attributes) {\n    var out = {};\n    if (attributes == null || typeof attributes !== 'object') {\n        return out;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    for (var _i = 0, _a = Object.entries(attributes); _i < _a.length; _i++) {\n        var _b = _a[_i], k = _b[0], v = _b[1];\n        if (isAttributeValue(v)) {\n            if (Array.isArray(v)) {\n                out[k] = v.slice();\n            }\n            else {\n                out[k] = v;\n            }\n        }\n    }\n    return out;\n}\nexport function isAttributeValue(val) {\n    if (val == null) {\n        return true;\n    }\n    if (Array.isArray(val)) {\n        return isHomogeneousAttributeValueArray(val);\n    }\n    return isValidPrimitiveAttributeValue(val);\n}\nfunction isHomogeneousAttributeValueArray(arr) {\n    var type;\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n        var element = arr_1[_i];\n        // null/undefined elements are allowed\n        if (element == null)\n            continue;\n        if (!type) {\n            if (isValidPrimitiveAttributeValue(element)) {\n                type = typeof element;\n                continue;\n            }\n            // encountered an invalid primitive\n            return false;\n        }\n        if (typeof element === type) {\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\nfunction isValidPrimitiveAttributeValue(val) {\n    switch (typeof val) {\n        case 'number':\n            return true;\n        case 'boolean':\n            return true;\n        case 'string':\n            return true;\n    }\n    return false;\n}\n"],"mappings":"AAAA,OAAO,SAASA,kBAAkB,CAACC,UAAU,EAAE;EAC3C,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZ,IAAID,UAAU,IAAI,IAAI,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;IACtD,OAAOC,GAAG;EACd;EACA;EACA,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAGC,MAAM,CAACC,OAAO,CAACL,UAAU,CAAC,EAAEE,EAAE,GAAGC,EAAE,CAACG,MAAM,EAAEJ,EAAE,EAAE,EAAE;IACpE,IAAIK,EAAE,GAAGJ,EAAE,CAACD,EAAE,CAAC;MAAEM,CAAC,GAAGD,EAAE,CAAC,CAAC,CAAC;MAAEE,CAAC,GAAGF,EAAE,CAAC,CAAC,CAAC;IACrC,IAAIG,gBAAgB,CAACD,CAAC,CAAC,EAAE;MACrB,IAAIE,KAAK,CAACC,OAAO,CAACH,CAAC,CAAC,EAAE;QAClBR,GAAG,CAACO,CAAC,CAAC,GAAGC,CAAC,CAACI,KAAK,EAAE;MACtB,CAAC,MACI;QACDZ,GAAG,CAACO,CAAC,CAAC,GAAGC,CAAC;MACd;IACJ;EACJ;EACA,OAAOR,GAAG;AACd;AACA,OAAO,SAASS,gBAAgB,CAACI,GAAG,EAAE;EAClC,IAAIA,GAAG,IAAI,IAAI,EAAE;IACb,OAAO,IAAI;EACf;EACA,IAAIH,KAAK,CAACC,OAAO,CAACE,GAAG,CAAC,EAAE;IACpB,OAAOC,gCAAgC,CAACD,GAAG,CAAC;EAChD;EACA,OAAOE,8BAA8B,CAACF,GAAG,CAAC;AAC9C;AACA,SAASC,gCAAgC,CAACE,GAAG,EAAE;EAC3C,IAAIC,IAAI;EACR,KAAK,IAAIhB,EAAE,GAAG,CAAC,EAAEiB,KAAK,GAAGF,GAAG,EAAEf,EAAE,GAAGiB,KAAK,CAACb,MAAM,EAAEJ,EAAE,EAAE,EAAE;IACnD,IAAIkB,OAAO,GAAGD,KAAK,CAACjB,EAAE,CAAC;IACvB;IACA,IAAIkB,OAAO,IAAI,IAAI,EACf;IACJ,IAAI,CAACF,IAAI,EAAE;MACP,IAAIF,8BAA8B,CAACI,OAAO,CAAC,EAAE;QACzCF,IAAI,GAAG,OAAOE,OAAO;QACrB;MACJ;MACA;MACA,OAAO,KAAK;IAChB;IACA,IAAI,OAAOA,OAAO,KAAKF,IAAI,EAAE;MACzB;IACJ;IACA,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf;AACA,SAASF,8BAA8B,CAACF,GAAG,EAAE;EACzC,QAAQ,OAAOA,GAAG;IACd,KAAK,QAAQ;MACT,OAAO,IAAI;IACf,KAAK,SAAS;MACV,OAAO,IAAI;IACf,KAAK,QAAQ;MACT,OAAO,IAAI;EAAC;EAEpB,OAAO,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}