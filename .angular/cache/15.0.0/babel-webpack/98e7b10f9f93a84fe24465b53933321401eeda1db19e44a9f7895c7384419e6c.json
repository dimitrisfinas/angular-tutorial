{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { OTLPExporterBase } from '../../OTLPExporterBase';\nimport { parseHeaders } from '../../util';\nimport { sendWithBeacon, sendWithXhr } from './util';\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\n/**\n * Collector Metric Exporter abstract base class\n */\nvar OTLPExporterBrowserBase = /** @class */function (_super) {\n  __extends(OTLPExporterBrowserBase, _super);\n  /**\n   * @param config\n   */\n  function OTLPExporterBrowserBase(config) {\n    if (config === void 0) {\n      config = {};\n    }\n    var _this = _super.call(this, config) || this;\n    _this._useXHR = false;\n    _this._useXHR = !!config.headers || typeof navigator.sendBeacon !== 'function';\n    if (_this._useXHR) {\n      _this._headers = Object.assign({}, parseHeaders(config.headers), baggageUtils.parseKeyPairsIntoRecord(getEnv().OTEL_EXPORTER_OTLP_HEADERS));\n    } else {\n      _this._headers = {};\n    }\n    return _this;\n  }\n  OTLPExporterBrowserBase.prototype.onInit = function () {\n    window.addEventListener('unload', this.shutdown);\n  };\n  OTLPExporterBrowserBase.prototype.onShutdown = function () {\n    window.removeEventListener('unload', this.shutdown);\n  };\n  OTLPExporterBrowserBase.prototype.send = function (items, onSuccess, onError) {\n    var _this = this;\n    if (this._shutdownOnce.isCalled) {\n      diag.debug('Shutdown already started. Cannot send objects');\n      return;\n    }\n    var serviceRequest = this.convert(items);\n    var body = JSON.stringify(serviceRequest);\n    var promise = new Promise(function (resolve, reject) {\n      if (_this._useXHR) {\n        sendWithXhr(body, _this.url, _this._headers, _this.timeoutMillis, resolve, reject);\n      } else {\n        sendWithBeacon(body, _this.url, {\n          type: 'application/json'\n        }, resolve, reject);\n      }\n    }).then(onSuccess, onError);\n    this._sendingPromises.push(promise);\n    var popPromise = function () {\n      var index = _this._sendingPromises.indexOf(promise);\n      _this._sendingPromises.splice(index, 1);\n    };\n    promise.then(popPromise, popPromise);\n  };\n  return OTLPExporterBrowserBase;\n}(OTLPExporterBase);\nexport { OTLPExporterBrowserBase };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","OTLPExporterBase","parseHeaders","sendWithBeacon","sendWithXhr","diag","getEnv","baggageUtils","OTLPExporterBrowserBase","_super","config","_this","_useXHR","headers","navigator","sendBeacon","_headers","assign","parseKeyPairsIntoRecord","OTEL_EXPORTER_OTLP_HEADERS","onInit","window","addEventListener","shutdown","onShutdown","removeEventListener","send","items","onSuccess","onError","_shutdownOnce","isCalled","debug","serviceRequest","convert","body","JSON","stringify","promise","Promise","resolve","reject","url","timeoutMillis","type","then","_sendingPromises","push","popPromise","index","indexOf","splice"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/otlp-exporter-base/build/esm/platform/browser/OTLPExporterBrowserBase.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { OTLPExporterBase } from '../../OTLPExporterBase';\nimport { parseHeaders } from '../../util';\nimport { sendWithBeacon, sendWithXhr } from './util';\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\n/**\n * Collector Metric Exporter abstract base class\n */\nvar OTLPExporterBrowserBase = /** @class */ (function (_super) {\n    __extends(OTLPExporterBrowserBase, _super);\n    /**\n     * @param config\n     */\n    function OTLPExporterBrowserBase(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this, config) || this;\n        _this._useXHR = false;\n        _this._useXHR =\n            !!config.headers || typeof navigator.sendBeacon !== 'function';\n        if (_this._useXHR) {\n            _this._headers = Object.assign({}, parseHeaders(config.headers), baggageUtils.parseKeyPairsIntoRecord(getEnv().OTEL_EXPORTER_OTLP_HEADERS));\n        }\n        else {\n            _this._headers = {};\n        }\n        return _this;\n    }\n    OTLPExporterBrowserBase.prototype.onInit = function () {\n        window.addEventListener('unload', this.shutdown);\n    };\n    OTLPExporterBrowserBase.prototype.onShutdown = function () {\n        window.removeEventListener('unload', this.shutdown);\n    };\n    OTLPExporterBrowserBase.prototype.send = function (items, onSuccess, onError) {\n        var _this = this;\n        if (this._shutdownOnce.isCalled) {\n            diag.debug('Shutdown already started. Cannot send objects');\n            return;\n        }\n        var serviceRequest = this.convert(items);\n        var body = JSON.stringify(serviceRequest);\n        var promise = new Promise(function (resolve, reject) {\n            if (_this._useXHR) {\n                sendWithXhr(body, _this.url, _this._headers, _this.timeoutMillis, resolve, reject);\n            }\n            else {\n                sendWithBeacon(body, _this.url, { type: 'application/json' }, resolve, reject);\n            }\n        })\n            .then(onSuccess, onError);\n        this._sendingPromises.push(promise);\n        var popPromise = function () {\n            var index = _this._sendingPromises.indexOf(promise);\n            _this._sendingPromises.splice(index, 1);\n        };\n        promise.then(popPromise, popPromise);\n    };\n    return OTLPExporterBrowserBase;\n}(OTLPExporterBase));\nexport { OTLPExporterBrowserBase };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIC,MAAM,CAACK,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IACrG,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnB,IAAI,OAAOA,CAAC,KAAK,UAAU,IAAIA,CAAC,KAAK,IAAI,EACrC,MAAM,IAAIS,SAAS,CAAC,sBAAsB,GAAGC,MAAM,CAACV,CAAC,CAAC,GAAG,+BAA+B,CAAC;IAC7FF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASW,EAAE,GAAG;MAAE,IAAI,CAACC,WAAW,GAAGb,CAAC;IAAE;IACtCA,CAAC,CAACO,SAAS,GAAGN,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACY,MAAM,CAACb,CAAC,CAAC,IAAIW,EAAE,CAACL,SAAS,GAAGN,CAAC,CAACM,SAAS,EAAE,IAAIK,EAAE,EAAE,CAAC;EACxF,CAAC;AACL,CAAC,EAAG;AACJ,SAASG,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,YAAY,QAAQ,YAAY;AACzC,SAASC,cAAc,EAAEC,WAAW,QAAQ,QAAQ;AACpD,SAASC,IAAI,QAAQ,oBAAoB;AACzC,SAASC,MAAM,EAAEC,YAAY,QAAQ,qBAAqB;AAC1D;AACA;AACA;AACA,IAAIC,uBAAuB,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC3DzB,SAAS,CAACwB,uBAAuB,EAAEC,MAAM,CAAC;EAC1C;AACJ;AACA;EACI,SAASD,uBAAuB,CAACE,MAAM,EAAE;IACrC,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;MAAEA,MAAM,GAAG,CAAC,CAAC;IAAE;IACtC,IAAIC,KAAK,GAAGF,MAAM,CAACd,IAAI,CAAC,IAAI,EAAEe,MAAM,CAAC,IAAI,IAAI;IAC7CC,KAAK,CAACC,OAAO,GAAG,KAAK;IACrBD,KAAK,CAACC,OAAO,GACT,CAAC,CAACF,MAAM,CAACG,OAAO,IAAI,OAAOC,SAAS,CAACC,UAAU,KAAK,UAAU;IAClE,IAAIJ,KAAK,CAACC,OAAO,EAAE;MACfD,KAAK,CAACK,QAAQ,GAAG5B,MAAM,CAAC6B,MAAM,CAAC,CAAC,CAAC,EAAEf,YAAY,CAACQ,MAAM,CAACG,OAAO,CAAC,EAAEN,YAAY,CAACW,uBAAuB,CAACZ,MAAM,EAAE,CAACa,0BAA0B,CAAC,CAAC;IAC/I,CAAC,MACI;MACDR,KAAK,CAACK,QAAQ,GAAG,CAAC,CAAC;IACvB;IACA,OAAOL,KAAK;EAChB;EACAH,uBAAuB,CAACf,SAAS,CAAC2B,MAAM,GAAG,YAAY;IACnDC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC;EACpD,CAAC;EACDf,uBAAuB,CAACf,SAAS,CAAC+B,UAAU,GAAG,YAAY;IACvDH,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACF,QAAQ,CAAC;EACvD,CAAC;EACDf,uBAAuB,CAACf,SAAS,CAACiC,IAAI,GAAG,UAAUC,KAAK,EAAEC,SAAS,EAAEC,OAAO,EAAE;IAC1E,IAAIlB,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAACmB,aAAa,CAACC,QAAQ,EAAE;MAC7B1B,IAAI,CAAC2B,KAAK,CAAC,+CAA+C,CAAC;MAC3D;IACJ;IACA,IAAIC,cAAc,GAAG,IAAI,CAACC,OAAO,CAACP,KAAK,CAAC;IACxC,IAAIQ,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACJ,cAAc,CAAC;IACzC,IAAIK,OAAO,GAAG,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;MACjD,IAAI9B,KAAK,CAACC,OAAO,EAAE;QACfR,WAAW,CAAC+B,IAAI,EAAExB,KAAK,CAAC+B,GAAG,EAAE/B,KAAK,CAACK,QAAQ,EAAEL,KAAK,CAACgC,aAAa,EAAEH,OAAO,EAAEC,MAAM,CAAC;MACtF,CAAC,MACI;QACDtC,cAAc,CAACgC,IAAI,EAAExB,KAAK,CAAC+B,GAAG,EAAE;UAAEE,IAAI,EAAE;QAAmB,CAAC,EAAEJ,OAAO,EAAEC,MAAM,CAAC;MAClF;IACJ,CAAC,CAAC,CACGI,IAAI,CAACjB,SAAS,EAAEC,OAAO,CAAC;IAC7B,IAAI,CAACiB,gBAAgB,CAACC,IAAI,CAACT,OAAO,CAAC;IACnC,IAAIU,UAAU,GAAG,YAAY;MACzB,IAAIC,KAAK,GAAGtC,KAAK,CAACmC,gBAAgB,CAACI,OAAO,CAACZ,OAAO,CAAC;MACnD3B,KAAK,CAACmC,gBAAgB,CAACK,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC3C,CAAC;IACDX,OAAO,CAACO,IAAI,CAACG,UAAU,EAAEA,UAAU,CAAC;EACxC,CAAC;EACD,OAAOxC,uBAAuB;AAClC,CAAC,CAACP,gBAAgB,CAAE;AACpB,SAASO,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}