{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapUriDefaultScheme = exports.getDefaultAuthority = exports.createResolver = exports.registerDefaultScheme = exports.registerResolver = void 0;\nconst uri_parser_1 = require(\"./uri-parser\");\nconst registeredResolvers = {};\nlet defaultScheme = null;\n/**\n * Register a resolver class to handle target names prefixed with the `prefix`\n * string. This prefix should correspond to a URI scheme name listed in the\n * [gRPC Name Resolution document](https://github.com/grpc/grpc/blob/master/doc/naming.md)\n * @param prefix\n * @param resolverClass\n */\nfunction registerResolver(scheme, resolverClass) {\n  registeredResolvers[scheme] = resolverClass;\n}\nexports.registerResolver = registerResolver;\n/**\n * Register a default resolver to handle target names that do not start with\n * any registered prefix.\n * @param resolverClass\n */\nfunction registerDefaultScheme(scheme) {\n  defaultScheme = scheme;\n}\nexports.registerDefaultScheme = registerDefaultScheme;\n/**\n * Create a name resolver for the specified target, if possible. Throws an\n * error if no such name resolver can be created.\n * @param target\n * @param listener\n */\nfunction createResolver(target, listener, options) {\n  if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n    return new registeredResolvers[target.scheme](target, listener, options);\n  } else {\n    throw new Error(`No resolver could be created for target ${uri_parser_1.uriToString(target)}`);\n  }\n}\nexports.createResolver = createResolver;\n/**\n * Get the default authority for the specified target, if possible. Throws an\n * error if no registered name resolver can parse that target string.\n * @param target\n */\nfunction getDefaultAuthority(target) {\n  if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n    return registeredResolvers[target.scheme].getDefaultAuthority(target);\n  } else {\n    throw new Error(`Invalid target ${uri_parser_1.uriToString(target)}`);\n  }\n}\nexports.getDefaultAuthority = getDefaultAuthority;\nfunction mapUriDefaultScheme(target) {\n  if (target.scheme === undefined || !(target.scheme in registeredResolvers)) {\n    if (defaultScheme !== null) {\n      return {\n        scheme: defaultScheme,\n        authority: undefined,\n        path: uri_parser_1.uriToString(target)\n      };\n    } else {\n      return null;\n    }\n  }\n  return target;\n}\nexports.mapUriDefaultScheme = mapUriDefaultScheme;","map":{"version":3,"names":["Object","defineProperty","exports","value","mapUriDefaultScheme","getDefaultAuthority","createResolver","registerDefaultScheme","registerResolver","uri_parser_1","require","registeredResolvers","defaultScheme","scheme","resolverClass","target","listener","options","undefined","Error","uriToString","authority","path"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@grpc/grpc-js/build/src/resolver.js"],"sourcesContent":["\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapUriDefaultScheme = exports.getDefaultAuthority = exports.createResolver = exports.registerDefaultScheme = exports.registerResolver = void 0;\nconst uri_parser_1 = require(\"./uri-parser\");\nconst registeredResolvers = {};\nlet defaultScheme = null;\n/**\n * Register a resolver class to handle target names prefixed with the `prefix`\n * string. This prefix should correspond to a URI scheme name listed in the\n * [gRPC Name Resolution document](https://github.com/grpc/grpc/blob/master/doc/naming.md)\n * @param prefix\n * @param resolverClass\n */\nfunction registerResolver(scheme, resolverClass) {\n    registeredResolvers[scheme] = resolverClass;\n}\nexports.registerResolver = registerResolver;\n/**\n * Register a default resolver to handle target names that do not start with\n * any registered prefix.\n * @param resolverClass\n */\nfunction registerDefaultScheme(scheme) {\n    defaultScheme = scheme;\n}\nexports.registerDefaultScheme = registerDefaultScheme;\n/**\n * Create a name resolver for the specified target, if possible. Throws an\n * error if no such name resolver can be created.\n * @param target\n * @param listener\n */\nfunction createResolver(target, listener, options) {\n    if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n        return new registeredResolvers[target.scheme](target, listener, options);\n    }\n    else {\n        throw new Error(`No resolver could be created for target ${uri_parser_1.uriToString(target)}`);\n    }\n}\nexports.createResolver = createResolver;\n/**\n * Get the default authority for the specified target, if possible. Throws an\n * error if no registered name resolver can parse that target string.\n * @param target\n */\nfunction getDefaultAuthority(target) {\n    if (target.scheme !== undefined && target.scheme in registeredResolvers) {\n        return registeredResolvers[target.scheme].getDefaultAuthority(target);\n    }\n    else {\n        throw new Error(`Invalid target ${uri_parser_1.uriToString(target)}`);\n    }\n}\nexports.getDefaultAuthority = getDefaultAuthority;\nfunction mapUriDefaultScheme(target) {\n    if (target.scheme === undefined || !(target.scheme in registeredResolvers)) {\n        if (defaultScheme !== null) {\n            return {\n                scheme: defaultScheme,\n                authority: undefined,\n                path: uri_parser_1.uriToString(target),\n            };\n        }\n        else {\n            return null;\n        }\n    }\n    return target;\n}\nexports.mapUriDefaultScheme = mapUriDefaultScheme;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAGF,OAAO,CAACG,mBAAmB,GAAGH,OAAO,CAACI,cAAc,GAAGJ,OAAO,CAACK,qBAAqB,GAAGL,OAAO,CAACM,gBAAgB,GAAG,KAAK,CAAC;AACtJ,MAAMC,YAAY,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC5C,MAAMC,mBAAmB,GAAG,CAAC,CAAC;AAC9B,IAAIC,aAAa,GAAG,IAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASJ,gBAAgB,CAACK,MAAM,EAAEC,aAAa,EAAE;EAC7CH,mBAAmB,CAACE,MAAM,CAAC,GAAGC,aAAa;AAC/C;AACAZ,OAAO,CAACM,gBAAgB,GAAGA,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA,SAASD,qBAAqB,CAACM,MAAM,EAAE;EACnCD,aAAa,GAAGC,MAAM;AAC1B;AACAX,OAAO,CAACK,qBAAqB,GAAGA,qBAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,cAAc,CAACS,MAAM,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EAC/C,IAAIF,MAAM,CAACF,MAAM,KAAKK,SAAS,IAAIH,MAAM,CAACF,MAAM,IAAIF,mBAAmB,EAAE;IACrE,OAAO,IAAIA,mBAAmB,CAACI,MAAM,CAACF,MAAM,CAAC,CAACE,MAAM,EAAEC,QAAQ,EAAEC,OAAO,CAAC;EAC5E,CAAC,MACI;IACD,MAAM,IAAIE,KAAK,CAAE,2CAA0CV,YAAY,CAACW,WAAW,CAACL,MAAM,CAAE,EAAC,CAAC;EAClG;AACJ;AACAb,OAAO,CAACI,cAAc,GAAGA,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA,SAASD,mBAAmB,CAACU,MAAM,EAAE;EACjC,IAAIA,MAAM,CAACF,MAAM,KAAKK,SAAS,IAAIH,MAAM,CAACF,MAAM,IAAIF,mBAAmB,EAAE;IACrE,OAAOA,mBAAmB,CAACI,MAAM,CAACF,MAAM,CAAC,CAACR,mBAAmB,CAACU,MAAM,CAAC;EACzE,CAAC,MACI;IACD,MAAM,IAAII,KAAK,CAAE,kBAAiBV,YAAY,CAACW,WAAW,CAACL,MAAM,CAAE,EAAC,CAAC;EACzE;AACJ;AACAb,OAAO,CAACG,mBAAmB,GAAGA,mBAAmB;AACjD,SAASD,mBAAmB,CAACW,MAAM,EAAE;EACjC,IAAIA,MAAM,CAACF,MAAM,KAAKK,SAAS,IAAI,EAAEH,MAAM,CAACF,MAAM,IAAIF,mBAAmB,CAAC,EAAE;IACxE,IAAIC,aAAa,KAAK,IAAI,EAAE;MACxB,OAAO;QACHC,MAAM,EAAED,aAAa;QACrBS,SAAS,EAAEH,SAAS;QACpBI,IAAI,EAAEb,YAAY,CAACW,WAAW,CAACL,MAAM;MACzC,CAAC;IACL,CAAC,MACI;MACD,OAAO,IAAI;IACf;EACJ;EACA,OAAOA,MAAM;AACjB;AACAb,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}