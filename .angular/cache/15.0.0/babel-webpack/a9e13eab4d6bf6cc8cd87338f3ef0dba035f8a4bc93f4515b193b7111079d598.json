{"ast":null,"code":"var __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url, urlToMatch) {\n  if (typeof urlToMatch === 'string') {\n    return url === urlToMatch;\n  } else {\n    return !!url.match(urlToMatch);\n  }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(url, ignoredUrls) {\n  var e_1, _a;\n  if (!ignoredUrls) {\n    return false;\n  }\n  try {\n    for (var ignoredUrls_1 = __values(ignoredUrls), ignoredUrls_1_1 = ignoredUrls_1.next(); !ignoredUrls_1_1.done; ignoredUrls_1_1 = ignoredUrls_1.next()) {\n      var ignoreUrl = ignoredUrls_1_1.value;\n      if (urlMatches(url, ignoreUrl)) {\n        return true;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (ignoredUrls_1_1 && !ignoredUrls_1_1.done && (_a = ignoredUrls_1.return)) _a.call(ignoredUrls_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return false;\n}","map":{"version":3,"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","urlMatches","url","urlToMatch","match","isUrlIgnored","ignoredUrls","e_1","_a","ignoredUrls_1","ignoredUrls_1_1","ignoreUrl","e_1_1","error","return"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/core/build/esm/utils/url.js"],"sourcesContent":["var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url, urlToMatch) {\n    if (typeof urlToMatch === 'string') {\n        return url === urlToMatch;\n    }\n    else {\n        return !!url.match(urlToMatch);\n    }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(url, ignoredUrls) {\n    var e_1, _a;\n    if (!ignoredUrls) {\n        return false;\n    }\n    try {\n        for (var ignoredUrls_1 = __values(ignoredUrls), ignoredUrls_1_1 = ignoredUrls_1.next(); !ignoredUrls_1_1.done; ignoredUrls_1_1 = ignoredUrls_1.next()) {\n            var ignoreUrl = ignoredUrls_1_1.value;\n            if (urlMatches(url, ignoreUrl)) {\n                return true;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (ignoredUrls_1_1 && !ignoredUrls_1_1.done && (_a = ignoredUrls_1.return)) _a.call(ignoredUrls_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return false;\n}\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,UAASC,CAAC,EAAE;EAClD,IAAIC,CAAC,GAAG,OAAOC,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,QAAQ;IAAEC,CAAC,GAAGH,CAAC,IAAID,CAAC,CAACC,CAAC,CAAC;IAAEI,CAAC,GAAG,CAAC;EAC7E,IAAID,CAAC,EAAE,OAAOA,CAAC,CAACE,IAAI,CAACN,CAAC,CAAC;EACvB,IAAIA,CAAC,IAAI,OAAOA,CAAC,CAACO,MAAM,KAAK,QAAQ,EAAE,OAAO;IAC1CC,IAAI,EAAE,YAAY;MACd,IAAIR,CAAC,IAAIK,CAAC,IAAIL,CAAC,CAACO,MAAM,EAAEP,CAAC,GAAG,KAAK,CAAC;MAClC,OAAO;QAAES,KAAK,EAAET,CAAC,IAAIA,CAAC,CAACK,CAAC,EAAE,CAAC;QAAEK,IAAI,EAAE,CAACV;MAAE,CAAC;IAC3C;EACJ,CAAC;EACD,MAAM,IAAIW,SAAS,CAACV,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC;AAC1F,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASW,UAAU,CAACC,GAAG,EAAEC,UAAU,EAAE;EACxC,IAAI,OAAOA,UAAU,KAAK,QAAQ,EAAE;IAChC,OAAOD,GAAG,KAAKC,UAAU;EAC7B,CAAC,MACI;IACD,OAAO,CAAC,CAACD,GAAG,CAACE,KAAK,CAACD,UAAU,CAAC;EAClC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,YAAY,CAACH,GAAG,EAAEI,WAAW,EAAE;EAC3C,IAAIC,GAAG,EAAEC,EAAE;EACX,IAAI,CAACF,WAAW,EAAE;IACd,OAAO,KAAK;EAChB;EACA,IAAI;IACA,KAAK,IAAIG,aAAa,GAAGrB,QAAQ,CAACkB,WAAW,CAAC,EAAEI,eAAe,GAAGD,aAAa,CAACZ,IAAI,EAAE,EAAE,CAACa,eAAe,CAACX,IAAI,EAAEW,eAAe,GAAGD,aAAa,CAACZ,IAAI,EAAE,EAAE;MACnJ,IAAIc,SAAS,GAAGD,eAAe,CAACZ,KAAK;MACrC,IAAIG,UAAU,CAACC,GAAG,EAAES,SAAS,CAAC,EAAE;QAC5B,OAAO,IAAI;MACf;IACJ;EACJ,CAAC,CACD,OAAOC,KAAK,EAAE;IAAEL,GAAG,GAAG;MAAEM,KAAK,EAAED;IAAM,CAAC;EAAE,CAAC,SACjC;IACJ,IAAI;MACA,IAAIF,eAAe,IAAI,CAACA,eAAe,CAACX,IAAI,KAAKS,EAAE,GAAGC,aAAa,CAACK,MAAM,CAAC,EAAEN,EAAE,CAACb,IAAI,CAACc,aAAa,CAAC;IACvG,CAAC,SACO;MAAE,IAAIF,GAAG,EAAE,MAAMA,GAAG,CAACM,KAAK;IAAE;EACxC;EACA,OAAO,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}