{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseSubchannelWrapper = void 0;\nclass BaseSubchannelWrapper {\n  constructor(child) {\n    this.child = child;\n  }\n  getConnectivityState() {\n    return this.child.getConnectivityState();\n  }\n  addConnectivityStateListener(listener) {\n    this.child.addConnectivityStateListener(listener);\n  }\n  removeConnectivityStateListener(listener) {\n    this.child.removeConnectivityStateListener(listener);\n  }\n  startConnecting() {\n    this.child.startConnecting();\n  }\n  getAddress() {\n    return this.child.getAddress();\n  }\n  ref() {\n    this.child.ref();\n  }\n  unref() {\n    this.child.unref();\n  }\n  getChannelzRef() {\n    return this.child.getChannelzRef();\n  }\n  getRealSubchannel() {\n    return this.child.getRealSubchannel();\n  }\n}\nexports.BaseSubchannelWrapper = BaseSubchannelWrapper;\n//# sourceMappingURL=subchannel-interface.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}