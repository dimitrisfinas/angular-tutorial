{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nvar NoopMeter = /** @class */function () {\n  function NoopMeter() {}\n  /**\n   * Returns a constant noop histogram.\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  NoopMeter.prototype.createHistogram = function (_name, _options) {\n    return NOOP_HISTOGRAM_METRIC;\n  };\n  /**\n   * Returns a constant noop counter.\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  NoopMeter.prototype.createCounter = function (_name, _options) {\n    return NOOP_COUNTER_METRIC;\n  };\n  /**\n   * Returns a constant noop UpDownCounter.\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   */\n  NoopMeter.prototype.createUpDownCounter = function (_name, _options) {\n    return NOOP_UP_DOWN_COUNTER_METRIC;\n  };\n  /**\n   * Returns a constant noop observable gauge.\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   * @param [callback] the observable gauge callback\n   */\n  NoopMeter.prototype.createObservableGauge = function (_name, _options, _callback) {\n    return NOOP_OBSERVABLE_GAUGE_METRIC;\n  };\n  /**\n   * Returns a constant noop observable counter.\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   * @param [callback] the observable counter callback\n   */\n  NoopMeter.prototype.createObservableCounter = function (_name, _options, _callback) {\n    return NOOP_OBSERVABLE_COUNTER_METRIC;\n  };\n  /**\n   * Returns a constant noop up down observable counter.\n   * @param name the name of the metric.\n   * @param [options] the metric options.\n   * @param [callback] the up down observable counter callback\n   */\n  NoopMeter.prototype.createObservableUpDownCounter = function (_name, _options, _callback) {\n    return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n  };\n  return NoopMeter;\n}();\nexport { NoopMeter };\nvar NoopMetric = /** @class */function () {\n  function NoopMetric() {}\n  return NoopMetric;\n}();\nexport { NoopMetric };\nvar NoopCounterMetric = /** @class */function (_super) {\n  __extends(NoopCounterMetric, _super);\n  function NoopCounterMetric() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  NoopCounterMetric.prototype.add = function (_value, _attributes) {};\n  return NoopCounterMetric;\n}(NoopMetric);\nexport { NoopCounterMetric };\nvar NoopUpDownCounterMetric = /** @class */function (_super) {\n  __extends(NoopUpDownCounterMetric, _super);\n  function NoopUpDownCounterMetric() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  NoopUpDownCounterMetric.prototype.add = function (_value, _attributes) {};\n  return NoopUpDownCounterMetric;\n}(NoopMetric);\nexport { NoopUpDownCounterMetric };\nvar NoopHistogramMetric = /** @class */function (_super) {\n  __extends(NoopHistogramMetric, _super);\n  function NoopHistogramMetric() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  NoopHistogramMetric.prototype.record = function (_value, _attributes) {};\n  return NoopHistogramMetric;\n}(NoopMetric);\nexport { NoopHistogramMetric };\nvar NoopObservableBaseMetric = /** @class */function (_super) {\n  __extends(NoopObservableBaseMetric, _super);\n  function NoopObservableBaseMetric() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  NoopObservableBaseMetric.prototype.observation = function () {\n    return {\n      observable: this,\n      value: 0\n    };\n  };\n  return NoopObservableBaseMetric;\n}(NoopMetric);\nexport { NoopObservableBaseMetric };\nexport var NOOP_METER = new NoopMeter();\n// Synchronous instruments\nexport var NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport var NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport var NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n// Asynchronous instruments\nexport var NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableBaseMetric();\nexport var NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableBaseMetric();\nexport var NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableBaseMetric();","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","NoopMeter","createHistogram","_name","_options","NOOP_HISTOGRAM_METRIC","createCounter","NOOP_COUNTER_METRIC","createUpDownCounter","NOOP_UP_DOWN_COUNTER_METRIC","createObservableGauge","_callback","NOOP_OBSERVABLE_GAUGE_METRIC","createObservableCounter","NOOP_OBSERVABLE_COUNTER_METRIC","createObservableUpDownCounter","NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC","NoopMetric","NoopCounterMetric","_super","apply","arguments","add","_value","_attributes","NoopUpDownCounterMetric","NoopHistogramMetric","record","NoopObservableBaseMetric","observation","observable","value","NOOP_METER"],"sources":["/Users/dimitris.finas/node_modules/@opentelemetry/api-metrics/build/esm/NoopMeter.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nvar NoopMeter = /** @class */ (function () {\n    function NoopMeter() {\n    }\n    /**\n     * Returns a constant noop histogram.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    NoopMeter.prototype.createHistogram = function (_name, _options) {\n        return NOOP_HISTOGRAM_METRIC;\n    };\n    /**\n     * Returns a constant noop counter.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    NoopMeter.prototype.createCounter = function (_name, _options) {\n        return NOOP_COUNTER_METRIC;\n    };\n    /**\n     * Returns a constant noop UpDownCounter.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    NoopMeter.prototype.createUpDownCounter = function (_name, _options) {\n        return NOOP_UP_DOWN_COUNTER_METRIC;\n    };\n    /**\n     * Returns a constant noop observable gauge.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the observable gauge callback\n     */\n    NoopMeter.prototype.createObservableGauge = function (_name, _options, _callback) {\n        return NOOP_OBSERVABLE_GAUGE_METRIC;\n    };\n    /**\n     * Returns a constant noop observable counter.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the observable counter callback\n     */\n    NoopMeter.prototype.createObservableCounter = function (_name, _options, _callback) {\n        return NOOP_OBSERVABLE_COUNTER_METRIC;\n    };\n    /**\n     * Returns a constant noop up down observable counter.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     * @param [callback] the up down observable counter callback\n     */\n    NoopMeter.prototype.createObservableUpDownCounter = function (_name, _options, _callback) {\n        return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n    };\n    return NoopMeter;\n}());\nexport { NoopMeter };\nvar NoopMetric = /** @class */ (function () {\n    function NoopMetric() {\n    }\n    return NoopMetric;\n}());\nexport { NoopMetric };\nvar NoopCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopCounterMetric, _super);\n    function NoopCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopCounterMetric.prototype.add = function (_value, _attributes) { };\n    return NoopCounterMetric;\n}(NoopMetric));\nexport { NoopCounterMetric };\nvar NoopUpDownCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopUpDownCounterMetric, _super);\n    function NoopUpDownCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopUpDownCounterMetric.prototype.add = function (_value, _attributes) { };\n    return NoopUpDownCounterMetric;\n}(NoopMetric));\nexport { NoopUpDownCounterMetric };\nvar NoopHistogramMetric = /** @class */ (function (_super) {\n    __extends(NoopHistogramMetric, _super);\n    function NoopHistogramMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopHistogramMetric.prototype.record = function (_value, _attributes) { };\n    return NoopHistogramMetric;\n}(NoopMetric));\nexport { NoopHistogramMetric };\nvar NoopObservableBaseMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableBaseMetric, _super);\n    function NoopObservableBaseMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopObservableBaseMetric.prototype.observation = function () {\n        return {\n            observable: this,\n            value: 0,\n        };\n    };\n    return NoopObservableBaseMetric;\n}(NoopMetric));\nexport { NoopObservableBaseMetric };\nexport var NOOP_METER = new NoopMeter();\n// Synchronous instruments\nexport var NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport var NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport var NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n// Asynchronous instruments\nexport var NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableBaseMetric();\nexport var NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableBaseMetric();\nexport var NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableBaseMetric();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}