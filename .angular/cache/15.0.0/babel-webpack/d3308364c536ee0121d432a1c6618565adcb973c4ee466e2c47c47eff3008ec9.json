{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2018 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar _asyncToGenerator = require(\"/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addCommonProtos = exports.loadProtosWithOptionsSync = exports.loadProtosWithOptions = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst Protobuf = require(\"protobufjs\");\nfunction addIncludePathResolver(root, includePaths) {\n  const originalResolvePath = root.resolvePath;\n  root.resolvePath = (origin, target) => {\n    if (path.isAbsolute(target)) {\n      return target;\n    }\n    for (const directory of includePaths) {\n      const fullPath = path.join(directory, target);\n      try {\n        fs.accessSync(fullPath, fs.constants.R_OK);\n        return fullPath;\n      } catch (err) {\n        continue;\n      }\n    }\n    process.emitWarning(`${target} not found in any of the include paths ${includePaths}`);\n    return originalResolvePath(origin, target);\n  };\n}\nfunction loadProtosWithOptions(_x, _x2) {\n  return _loadProtosWithOptions.apply(this, arguments);\n}\nfunction _loadProtosWithOptions() {\n  _loadProtosWithOptions = _asyncToGenerator(function* (filename, options) {\n    const root = new Protobuf.Root();\n    options = options || {};\n    if (!!options.includeDirs) {\n      if (!Array.isArray(options.includeDirs)) {\n        return Promise.reject(new Error('The includeDirs option must be an array'));\n      }\n      addIncludePathResolver(root, options.includeDirs);\n    }\n    const loadedRoot = yield root.load(filename, options);\n    loadedRoot.resolveAll();\n    return loadedRoot;\n  });\n  return _loadProtosWithOptions.apply(this, arguments);\n}\nexports.loadProtosWithOptions = loadProtosWithOptions;\nfunction loadProtosWithOptionsSync(filename, options) {\n  const root = new Protobuf.Root();\n  options = options || {};\n  if (!!options.includeDirs) {\n    if (!Array.isArray(options.includeDirs)) {\n      throw new Error('The includeDirs option must be an array');\n    }\n    addIncludePathResolver(root, options.includeDirs);\n  }\n  const loadedRoot = root.loadSync(filename, options);\n  loadedRoot.resolveAll();\n  return loadedRoot;\n}\nexports.loadProtosWithOptionsSync = loadProtosWithOptionsSync;\n/**\n * Load Google's well-known proto files that aren't exposed by Protobuf.js.\n */\nfunction addCommonProtos() {\n  // Protobuf.js exposes: any, duration, empty, field_mask, struct, timestamp,\n  // and wrappers. compiler/plugin is excluded in Protobuf.js and here.\n  // Using constant strings for compatibility with tools like Webpack\n  const apiDescriptor = require('protobufjs/google/protobuf/api.json');\n  const descriptorDescriptor = require('protobufjs/google/protobuf/descriptor.json');\n  const sourceContextDescriptor = require('protobufjs/google/protobuf/source_context.json');\n  const typeDescriptor = require('protobufjs/google/protobuf/type.json');\n  Protobuf.common('api', apiDescriptor.nested.google.nested.protobuf.nested);\n  Protobuf.common('descriptor', descriptorDescriptor.nested.google.nested.protobuf.nested);\n  Protobuf.common('source_context', sourceContextDescriptor.nested.google.nested.protobuf.nested);\n  Protobuf.common('type', typeDescriptor.nested.google.nested.protobuf.nested);\n}\nexports.addCommonProtos = addCommonProtos;","map":{"version":3,"names":["Object","defineProperty","exports","value","addCommonProtos","loadProtosWithOptionsSync","loadProtosWithOptions","fs","require","path","Protobuf","addIncludePathResolver","root","includePaths","originalResolvePath","resolvePath","origin","target","isAbsolute","directory","fullPath","join","accessSync","constants","R_OK","err","process","emitWarning","filename","options","Root","includeDirs","Array","isArray","Promise","reject","Error","loadedRoot","load","resolveAll","loadSync","apiDescriptor","descriptorDescriptor","sourceContextDescriptor","typeDescriptor","common","nested","google","protobuf"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@grpc/proto-loader/build/src/util.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2018 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addCommonProtos = exports.loadProtosWithOptionsSync = exports.loadProtosWithOptions = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst Protobuf = require(\"protobufjs\");\nfunction addIncludePathResolver(root, includePaths) {\n    const originalResolvePath = root.resolvePath;\n    root.resolvePath = (origin, target) => {\n        if (path.isAbsolute(target)) {\n            return target;\n        }\n        for (const directory of includePaths) {\n            const fullPath = path.join(directory, target);\n            try {\n                fs.accessSync(fullPath, fs.constants.R_OK);\n                return fullPath;\n            }\n            catch (err) {\n                continue;\n            }\n        }\n        process.emitWarning(`${target} not found in any of the include paths ${includePaths}`);\n        return originalResolvePath(origin, target);\n    };\n}\nasync function loadProtosWithOptions(filename, options) {\n    const root = new Protobuf.Root();\n    options = options || {};\n    if (!!options.includeDirs) {\n        if (!Array.isArray(options.includeDirs)) {\n            return Promise.reject(new Error('The includeDirs option must be an array'));\n        }\n        addIncludePathResolver(root, options.includeDirs);\n    }\n    const loadedRoot = await root.load(filename, options);\n    loadedRoot.resolveAll();\n    return loadedRoot;\n}\nexports.loadProtosWithOptions = loadProtosWithOptions;\nfunction loadProtosWithOptionsSync(filename, options) {\n    const root = new Protobuf.Root();\n    options = options || {};\n    if (!!options.includeDirs) {\n        if (!Array.isArray(options.includeDirs)) {\n            throw new Error('The includeDirs option must be an array');\n        }\n        addIncludePathResolver(root, options.includeDirs);\n    }\n    const loadedRoot = root.loadSync(filename, options);\n    loadedRoot.resolveAll();\n    return loadedRoot;\n}\nexports.loadProtosWithOptionsSync = loadProtosWithOptionsSync;\n/**\n * Load Google's well-known proto files that aren't exposed by Protobuf.js.\n */\nfunction addCommonProtos() {\n    // Protobuf.js exposes: any, duration, empty, field_mask, struct, timestamp,\n    // and wrappers. compiler/plugin is excluded in Protobuf.js and here.\n    // Using constant strings for compatibility with tools like Webpack\n    const apiDescriptor = require('protobufjs/google/protobuf/api.json');\n    const descriptorDescriptor = require('protobufjs/google/protobuf/descriptor.json');\n    const sourceContextDescriptor = require('protobufjs/google/protobuf/source_context.json');\n    const typeDescriptor = require('protobufjs/google/protobuf/type.json');\n    Protobuf.common('api', apiDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('descriptor', descriptorDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('source_context', sourceContextDescriptor.nested.google.nested.protobuf.nested);\n    Protobuf.common('type', typeDescriptor.nested.google.nested.protobuf.nested);\n}\nexports.addCommonProtos = addCommonProtos;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAiBAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAGF,OAAO,CAACG,yBAAyB,GAAGH,OAAO,CAACI,qBAAqB,GAAG,KAAK,CAAC;AACpG,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,QAAQ,GAAGF,OAAO,CAAC,YAAY,CAAC;AACtC,SAASG,sBAAsB,CAACC,IAAI,EAAEC,YAAY,EAAE;EAChD,MAAMC,mBAAmB,GAAGF,IAAI,CAACG,WAAW;EAC5CH,IAAI,CAACG,WAAW,GAAG,CAACC,MAAM,EAAEC,MAAM,KAAK;IACnC,IAAIR,IAAI,CAACS,UAAU,CAACD,MAAM,CAAC,EAAE;MACzB,OAAOA,MAAM;IACjB;IACA,KAAK,MAAME,SAAS,IAAIN,YAAY,EAAE;MAClC,MAAMO,QAAQ,GAAGX,IAAI,CAACY,IAAI,CAACF,SAAS,EAAEF,MAAM,CAAC;MAC7C,IAAI;QACAV,EAAE,CAACe,UAAU,CAACF,QAAQ,EAAEb,EAAE,CAACgB,SAAS,CAACC,IAAI,CAAC;QAC1C,OAAOJ,QAAQ;MACnB,CAAC,CACD,OAAOK,GAAG,EAAE;QACR;MACJ;IACJ;IACAC,OAAO,CAACC,WAAW,CAAE,GAAEV,MAAO,0CAAyCJ,YAAa,EAAC,CAAC;IACtF,OAAOC,mBAAmB,CAACE,MAAM,EAAEC,MAAM,CAAC;EAC9C,CAAC;AACL;AAAC,SACcX,qBAAqB;EAAA;AAAA;AAAA;EAAA,2CAApC,WAAqCsB,QAAQ,EAAEC,OAAO,EAAE;IACpD,MAAMjB,IAAI,GAAG,IAAIF,QAAQ,CAACoB,IAAI,EAAE;IAChCD,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,IAAI,CAAC,CAACA,OAAO,CAACE,WAAW,EAAE;MACvB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,OAAO,CAACE,WAAW,CAAC,EAAE;QACrC,OAAOG,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,yCAAyC,CAAC,CAAC;MAC/E;MACAzB,sBAAsB,CAACC,IAAI,EAAEiB,OAAO,CAACE,WAAW,CAAC;IACrD;IACA,MAAMM,UAAU,SAASzB,IAAI,CAAC0B,IAAI,CAACV,QAAQ,EAAEC,OAAO,CAAC;IACrDQ,UAAU,CAACE,UAAU,EAAE;IACvB,OAAOF,UAAU;EACrB,CAAC;EAAA;AAAA;AACDnC,OAAO,CAACI,qBAAqB,GAAGA,qBAAqB;AACrD,SAASD,yBAAyB,CAACuB,QAAQ,EAAEC,OAAO,EAAE;EAClD,MAAMjB,IAAI,GAAG,IAAIF,QAAQ,CAACoB,IAAI,EAAE;EAChCD,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,IAAI,CAAC,CAACA,OAAO,CAACE,WAAW,EAAE;IACvB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,OAAO,CAACE,WAAW,CAAC,EAAE;MACrC,MAAM,IAAIK,KAAK,CAAC,yCAAyC,CAAC;IAC9D;IACAzB,sBAAsB,CAACC,IAAI,EAAEiB,OAAO,CAACE,WAAW,CAAC;EACrD;EACA,MAAMM,UAAU,GAAGzB,IAAI,CAAC4B,QAAQ,CAACZ,QAAQ,EAAEC,OAAO,CAAC;EACnDQ,UAAU,CAACE,UAAU,EAAE;EACvB,OAAOF,UAAU;AACrB;AACAnC,OAAO,CAACG,yBAAyB,GAAGA,yBAAyB;AAC7D;AACA;AACA;AACA,SAASD,eAAe,GAAG;EACvB;EACA;EACA;EACA,MAAMqC,aAAa,GAAGjC,OAAO,CAAC,qCAAqC,CAAC;EACpE,MAAMkC,oBAAoB,GAAGlC,OAAO,CAAC,4CAA4C,CAAC;EAClF,MAAMmC,uBAAuB,GAAGnC,OAAO,CAAC,gDAAgD,CAAC;EACzF,MAAMoC,cAAc,GAAGpC,OAAO,CAAC,sCAAsC,CAAC;EACtEE,QAAQ,CAACmC,MAAM,CAAC,KAAK,EAAEJ,aAAa,CAACK,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,QAAQ,CAACF,MAAM,CAAC;EAC1EpC,QAAQ,CAACmC,MAAM,CAAC,YAAY,EAAEH,oBAAoB,CAACI,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,QAAQ,CAACF,MAAM,CAAC;EACxFpC,QAAQ,CAACmC,MAAM,CAAC,gBAAgB,EAAEF,uBAAuB,CAACG,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,QAAQ,CAACF,MAAM,CAAC;EAC/FpC,QAAQ,CAACmC,MAAM,CAAC,MAAM,EAAED,cAAc,CAACE,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,QAAQ,CAACF,MAAM,CAAC;AAChF;AACA5C,OAAO,CAACE,eAAe,GAAGA,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}