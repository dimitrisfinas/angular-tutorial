{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createInstrumentDescriptor } from '../InstrumentDescriptor';\n/**\n * Internal interface.\n *\n * Represents a storage from which we can collect metrics.\n */\nvar MetricStorage = /** @class */function () {\n  function MetricStorage(_instrumentDescriptor) {\n    this._instrumentDescriptor = _instrumentDescriptor;\n  }\n  MetricStorage.prototype.getInstrumentDescriptor = function () {\n    return this._instrumentDescriptor;\n  };\n  MetricStorage.prototype.updateDescription = function (description) {\n    this._instrumentDescriptor = createInstrumentDescriptor(this._instrumentDescriptor.name, this._instrumentDescriptor.type, {\n      description: description,\n      valueType: this._instrumentDescriptor.valueType,\n      unit: this._instrumentDescriptor.unit\n    });\n  };\n  return MetricStorage;\n}();\nexport { MetricStorage };","map":{"version":3,"names":["createInstrumentDescriptor","MetricStorage","_instrumentDescriptor","prototype","getInstrumentDescriptor","updateDescription","description","name","type","valueType","unit"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/sdk-metrics/build/esm/state/MetricStorage.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createInstrumentDescriptor } from '../InstrumentDescriptor';\n/**\n * Internal interface.\n *\n * Represents a storage from which we can collect metrics.\n */\nvar MetricStorage = /** @class */ (function () {\n    function MetricStorage(_instrumentDescriptor) {\n        this._instrumentDescriptor = _instrumentDescriptor;\n    }\n    MetricStorage.prototype.getInstrumentDescriptor = function () {\n        return this._instrumentDescriptor;\n    };\n    MetricStorage.prototype.updateDescription = function (description) {\n        this._instrumentDescriptor = createInstrumentDescriptor(this._instrumentDescriptor.name, this._instrumentDescriptor.type, {\n            description: description,\n            valueType: this._instrumentDescriptor.valueType,\n            unit: this._instrumentDescriptor.unit\n        });\n    };\n    return MetricStorage;\n}());\nexport { MetricStorage };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,0BAA0B,QAAQ,yBAAyB;AACpE;AACA;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAG,aAAe,YAAY;EAC3C,SAASA,aAAa,CAACC,qBAAqB,EAAE;IAC1C,IAAI,CAACA,qBAAqB,GAAGA,qBAAqB;EACtD;EACAD,aAAa,CAACE,SAAS,CAACC,uBAAuB,GAAG,YAAY;IAC1D,OAAO,IAAI,CAACF,qBAAqB;EACrC,CAAC;EACDD,aAAa,CAACE,SAAS,CAACE,iBAAiB,GAAG,UAAUC,WAAW,EAAE;IAC/D,IAAI,CAACJ,qBAAqB,GAAGF,0BAA0B,CAAC,IAAI,CAACE,qBAAqB,CAACK,IAAI,EAAE,IAAI,CAACL,qBAAqB,CAACM,IAAI,EAAE;MACtHF,WAAW,EAAEA,WAAW;MACxBG,SAAS,EAAE,IAAI,CAACP,qBAAqB,CAACO,SAAS;MAC/CC,IAAI,EAAE,IAAI,CAACR,qBAAqB,CAACQ;IACrC,CAAC,CAAC;EACN,CAAC;EACD,OAAOT,aAAa;AACxB,CAAC,EAAG;AACJ,SAASA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}