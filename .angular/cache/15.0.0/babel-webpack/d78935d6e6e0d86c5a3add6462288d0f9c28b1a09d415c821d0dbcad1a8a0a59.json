{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport * as api from '@opentelemetry/api';\nimport { isWrapped, InstrumentationBase, safeExecuteInTheMiddle } from '@opentelemetry/instrumentation';\nimport { hrTime, isUrlIgnored, otperformance } from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { addSpanNetworkEvents, getResource, PerformanceTimingNames as PTN, shouldPropagateTraceHeaders, parseUrl } from '@opentelemetry/sdk-trace-web';\nimport { EventNames } from './enums/EventNames';\nimport { VERSION } from './version';\nimport { AttributeNames } from './enums/AttributeNames';\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nvar OBSERVER_WAIT_TIME_MS = 300;\n/**\n * This class represents a XMLHttpRequest plugin for auto instrumentation\n */\nvar XMLHttpRequestInstrumentation = /** @class */function (_super) {\n  __extends(XMLHttpRequestInstrumentation, _super);\n  function XMLHttpRequestInstrumentation(config) {\n    var _this = _super.call(this, '@opentelemetry/instrumentation-xml-http-request', VERSION, config) || this;\n    _this.component = 'xml-http-request';\n    _this.version = VERSION;\n    _this.moduleName = _this.component;\n    _this._tasksCount = 0;\n    _this._xhrMem = new WeakMap();\n    _this._usedResources = new WeakSet();\n    return _this;\n  }\n  XMLHttpRequestInstrumentation.prototype.init = function () {};\n  XMLHttpRequestInstrumentation.prototype._getConfig = function () {\n    return this._config;\n  };\n  /**\n   * Adds custom headers to XMLHttpRequest\n   * @param xhr\n   * @param spanUrl\n   * @private\n   */\n  XMLHttpRequestInstrumentation.prototype._addHeaders = function (xhr, spanUrl) {\n    var url = parseUrl(spanUrl).href;\n    if (!shouldPropagateTraceHeaders(url, this._getConfig().propagateTraceHeaderCorsUrls)) {\n      var headers_1 = {};\n      api.propagation.inject(api.context.active(), headers_1);\n      if (Object.keys(headers_1).length > 0) {\n        this._diag.debug('headers inject skipped due to CORS policy');\n      }\n      return;\n    }\n    var headers = {};\n    api.propagation.inject(api.context.active(), headers);\n    Object.keys(headers).forEach(function (key) {\n      xhr.setRequestHeader(key, String(headers[key]));\n    });\n  };\n  /**\n   * Add cors pre flight child span\n   * @param span\n   * @param corsPreFlightRequest\n   * @private\n   */\n  XMLHttpRequestInstrumentation.prototype._addChildSpan = function (span, corsPreFlightRequest) {\n    var _this = this;\n    api.context.with(api.trace.setSpan(api.context.active(), span), function () {\n      var childSpan = _this.tracer.startSpan('CORS Preflight', {\n        startTime: corsPreFlightRequest[PTN.FETCH_START]\n      });\n      addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n      childSpan.end(corsPreFlightRequest[PTN.RESPONSE_END]);\n    });\n  };\n  /**\n   * Add attributes when span is going to end\n   * @param span\n   * @param xhr\n   * @param spanUrl\n   * @private\n   */\n  XMLHttpRequestInstrumentation.prototype._addFinalSpanAttributes = function (span, xhrMem, spanUrl) {\n    if (typeof spanUrl === 'string') {\n      var parsedUrl = parseUrl(spanUrl);\n      if (xhrMem.status !== undefined) {\n        span.setAttribute(SemanticAttributes.HTTP_STATUS_CODE, xhrMem.status);\n      }\n      if (xhrMem.statusText !== undefined) {\n        span.setAttribute(AttributeNames.HTTP_STATUS_TEXT, xhrMem.statusText);\n      }\n      span.setAttribute(SemanticAttributes.HTTP_HOST, parsedUrl.host);\n      span.setAttribute(SemanticAttributes.HTTP_SCHEME, parsedUrl.protocol.replace(':', ''));\n      // @TODO do we want to collect this or it will be collected earlier once only or\n      //    maybe when parent span is not available ?\n      span.setAttribute(SemanticAttributes.HTTP_USER_AGENT, navigator.userAgent);\n    }\n  };\n  XMLHttpRequestInstrumentation.prototype._applyAttributesAfterXHR = function (span, xhr) {\n    var _this = this;\n    var applyCustomAttributesOnSpan = this._getConfig().applyCustomAttributesOnSpan;\n    if (typeof applyCustomAttributesOnSpan === 'function') {\n      safeExecuteInTheMiddle(function () {\n        return applyCustomAttributesOnSpan(span, xhr);\n      }, function (error) {\n        if (!error) {\n          return;\n        }\n        _this._diag.error('applyCustomAttributesOnSpan', error);\n      }, true);\n    }\n  };\n  /**\n   * will collect information about all resources created\n   * between \"send\" and \"end\" with additional waiting for main resource\n   * @param xhr\n   * @param spanUrl\n   * @private\n   */\n  XMLHttpRequestInstrumentation.prototype._addResourceObserver = function (xhr, spanUrl) {\n    var xhrMem = this._xhrMem.get(xhr);\n    if (!xhrMem || typeof PerformanceObserver !== 'function' || typeof PerformanceResourceTiming !== 'function') {\n      return;\n    }\n    xhrMem.createdResources = {\n      observer: new PerformanceObserver(function (list) {\n        var entries = list.getEntries();\n        var parsedUrl = parseUrl(spanUrl);\n        entries.forEach(function (entry) {\n          if (entry.initiatorType === 'xmlhttprequest' && entry.name === parsedUrl.href) {\n            if (xhrMem.createdResources) {\n              xhrMem.createdResources.entries.push(entry);\n            }\n          }\n        });\n      }),\n      entries: []\n    };\n    xhrMem.createdResources.observer.observe({\n      entryTypes: ['resource']\n    });\n  };\n  /**\n   * Clears the resource timings and all resources assigned with spans\n   *     when {@link XMLHttpRequestInstrumentationConfig.clearTimingResources} is\n   *     set to true (default false)\n   * @private\n   */\n  XMLHttpRequestInstrumentation.prototype._clearResources = function () {\n    if (this._tasksCount === 0 && this._getConfig().clearTimingResources) {\n      otperformance.clearResourceTimings();\n      this._xhrMem = new WeakMap();\n      this._usedResources = new WeakSet();\n    }\n  };\n  /**\n   * Finds appropriate resource and add network events to the span\n   * @param span\n   */\n  XMLHttpRequestInstrumentation.prototype._findResourceAndAddNetworkEvents = function (xhrMem, span, spanUrl, startTime, endTime) {\n    if (!spanUrl || !startTime || !endTime || !xhrMem.createdResources) {\n      return;\n    }\n    var resources = xhrMem.createdResources.entries;\n    if (!resources || !resources.length) {\n      // fallback - either Observer is not available or it took longer\n      // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n      // information\n      // ts thinks this is the perf_hooks module, but it is the browser performance api\n      resources = otperformance.getEntriesByType('resource');\n    }\n    var resource = getResource(parseUrl(spanUrl).href, startTime, endTime, resources, this._usedResources);\n    if (resource.mainRequest) {\n      var mainRequest = resource.mainRequest;\n      this._markResourceAsUsed(mainRequest);\n      var corsPreFlightRequest = resource.corsPreFlightRequest;\n      if (corsPreFlightRequest) {\n        this._addChildSpan(span, corsPreFlightRequest);\n        this._markResourceAsUsed(corsPreFlightRequest);\n      }\n      addSpanNetworkEvents(span, mainRequest);\n    }\n  };\n  /**\n   * Removes the previous information about span.\n   * This might happened when the same xhr is used again.\n   * @param xhr\n   * @private\n   */\n  XMLHttpRequestInstrumentation.prototype._cleanPreviousSpanInformation = function (xhr) {\n    var xhrMem = this._xhrMem.get(xhr);\n    if (xhrMem) {\n      var callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n      if (callbackToRemoveEvents) {\n        callbackToRemoveEvents();\n      }\n      this._xhrMem.delete(xhr);\n    }\n  };\n  /**\n   * Creates a new span when method \"open\" is called\n   * @param xhr\n   * @param url\n   * @param method\n   * @private\n   */\n  XMLHttpRequestInstrumentation.prototype._createSpan = function (xhr, url, method) {\n    var _a;\n    if (isUrlIgnored(url, this._getConfig().ignoreUrls)) {\n      this._diag.debug('ignoring span as url matches ignored url');\n      return;\n    }\n    var spanName = \"HTTP \" + method.toUpperCase();\n    var currentSpan = this.tracer.startSpan(spanName, {\n      kind: api.SpanKind.CLIENT,\n      attributes: (_a = {}, _a[SemanticAttributes.HTTP_METHOD] = method, _a[SemanticAttributes.HTTP_URL] = url, _a)\n    });\n    currentSpan.addEvent(EventNames.METHOD_OPEN);\n    this._cleanPreviousSpanInformation(xhr);\n    this._xhrMem.set(xhr, {\n      span: currentSpan,\n      spanUrl: url\n    });\n    return currentSpan;\n  };\n  /**\n   * Marks certain [resource]{@link PerformanceResourceTiming} when information\n   * from this is used to add events to span.\n   * This is done to avoid reusing the same resource again for next span\n   * @param resource\n   * @private\n   */\n  XMLHttpRequestInstrumentation.prototype._markResourceAsUsed = function (resource) {\n    this._usedResources.add(resource);\n  };\n  /**\n   * Patches the method open\n   * @private\n   */\n  XMLHttpRequestInstrumentation.prototype._patchOpen = function () {\n    var _this = this;\n    return function (original) {\n      var plugin = _this;\n      return function patchOpen() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var method = args[0];\n        var url = args[1];\n        plugin._createSpan(this, url, method);\n        return original.apply(this, args);\n      };\n    };\n  };\n  /**\n   * Patches the method send\n   * @private\n   */\n  XMLHttpRequestInstrumentation.prototype._patchSend = function () {\n    var plugin = this;\n    function endSpanTimeout(eventName, xhrMem, endTime) {\n      var callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n      if (typeof callbackToRemoveEvents === 'function') {\n        callbackToRemoveEvents();\n      }\n      var span = xhrMem.span,\n        spanUrl = xhrMem.spanUrl,\n        sendStartTime = xhrMem.sendStartTime;\n      if (span) {\n        plugin._findResourceAndAddNetworkEvents(xhrMem, span, spanUrl, sendStartTime, endTime);\n        span.addEvent(eventName, endTime);\n        plugin._addFinalSpanAttributes(span, xhrMem, spanUrl);\n        span.end(endTime);\n        plugin._tasksCount--;\n      }\n      plugin._clearResources();\n    }\n    function endSpan(eventName, xhr) {\n      var xhrMem = plugin._xhrMem.get(xhr);\n      if (!xhrMem) {\n        return;\n      }\n      xhrMem.status = xhr.status;\n      xhrMem.statusText = xhr.statusText;\n      plugin._xhrMem.delete(xhr);\n      if (xhrMem.span) {\n        plugin._applyAttributesAfterXHR(xhrMem.span, xhr);\n      }\n      var endTime = hrTime();\n      // the timeout is needed as observer doesn't have yet information\n      // when event \"load\" is called. Also the time may differ depends on\n      // browser and speed of computer\n      setTimeout(function () {\n        endSpanTimeout(eventName, xhrMem, endTime);\n      }, OBSERVER_WAIT_TIME_MS);\n    }\n    function onError() {\n      endSpan(EventNames.EVENT_ERROR, this);\n    }\n    function onAbort() {\n      endSpan(EventNames.EVENT_ABORT, this);\n    }\n    function onTimeout() {\n      endSpan(EventNames.EVENT_TIMEOUT, this);\n    }\n    function onLoad() {\n      if (this.status < 299) {\n        endSpan(EventNames.EVENT_LOAD, this);\n      } else {\n        endSpan(EventNames.EVENT_ERROR, this);\n      }\n    }\n    function unregister(xhr) {\n      xhr.removeEventListener('abort', onAbort);\n      xhr.removeEventListener('error', onError);\n      xhr.removeEventListener('load', onLoad);\n      xhr.removeEventListener('timeout', onTimeout);\n      var xhrMem = plugin._xhrMem.get(xhr);\n      if (xhrMem) {\n        xhrMem.callbackToRemoveEvents = undefined;\n      }\n    }\n    return function (original) {\n      return function patchSend() {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var xhrMem = plugin._xhrMem.get(this);\n        if (!xhrMem) {\n          return original.apply(this, args);\n        }\n        var currentSpan = xhrMem.span;\n        var spanUrl = xhrMem.spanUrl;\n        if (currentSpan && spanUrl) {\n          api.context.with(api.trace.setSpan(api.context.active(), currentSpan), function () {\n            plugin._tasksCount++;\n            xhrMem.sendStartTime = hrTime();\n            currentSpan.addEvent(EventNames.METHOD_SEND);\n            _this.addEventListener('abort', onAbort);\n            _this.addEventListener('error', onError);\n            _this.addEventListener('load', onLoad);\n            _this.addEventListener('timeout', onTimeout);\n            xhrMem.callbackToRemoveEvents = function () {\n              unregister(_this);\n              if (xhrMem.createdResources) {\n                xhrMem.createdResources.observer.disconnect();\n              }\n            };\n            plugin._addHeaders(_this, spanUrl);\n            plugin._addResourceObserver(_this, spanUrl);\n          });\n        }\n        return original.apply(this, args);\n      };\n    };\n  };\n  /**\n   * implements enable function\n   */\n  XMLHttpRequestInstrumentation.prototype.enable = function () {\n    this._diag.debug('applying patch to', this.moduleName, this.version);\n    if (isWrapped(XMLHttpRequest.prototype.open)) {\n      this._unwrap(XMLHttpRequest.prototype, 'open');\n      this._diag.debug('removing previous patch from method open');\n    }\n    if (isWrapped(XMLHttpRequest.prototype.send)) {\n      this._unwrap(XMLHttpRequest.prototype, 'send');\n      this._diag.debug('removing previous patch from method send');\n    }\n    this._wrap(XMLHttpRequest.prototype, 'open', this._patchOpen());\n    this._wrap(XMLHttpRequest.prototype, 'send', this._patchSend());\n  };\n  /**\n   * implements disable function\n   */\n  XMLHttpRequestInstrumentation.prototype.disable = function () {\n    this._diag.debug('removing patch from', this.moduleName, this.version);\n    this._unwrap(XMLHttpRequest.prototype, 'open');\n    this._unwrap(XMLHttpRequest.prototype, 'send');\n    this._tasksCount = 0;\n    this._xhrMem = new WeakMap();\n    this._usedResources = new WeakSet();\n  };\n  return XMLHttpRequestInstrumentation;\n}(InstrumentationBase);\nexport { XMLHttpRequestInstrumentation };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","api","isWrapped","InstrumentationBase","safeExecuteInTheMiddle","hrTime","isUrlIgnored","otperformance","SemanticAttributes","addSpanNetworkEvents","getResource","PerformanceTimingNames","PTN","shouldPropagateTraceHeaders","parseUrl","EventNames","VERSION","AttributeNames","OBSERVER_WAIT_TIME_MS","XMLHttpRequestInstrumentation","_super","config","_this","component","version","moduleName","_tasksCount","_xhrMem","WeakMap","_usedResources","WeakSet","init","_getConfig","_config","_addHeaders","xhr","spanUrl","url","href","propagateTraceHeaderCorsUrls","headers_1","propagation","inject","context","active","keys","length","_diag","debug","headers","forEach","key","setRequestHeader","_addChildSpan","span","corsPreFlightRequest","with","trace","setSpan","childSpan","tracer","startSpan","startTime","FETCH_START","end","RESPONSE_END","_addFinalSpanAttributes","xhrMem","parsedUrl","status","undefined","setAttribute","HTTP_STATUS_CODE","statusText","HTTP_STATUS_TEXT","HTTP_HOST","host","HTTP_SCHEME","protocol","replace","HTTP_USER_AGENT","navigator","userAgent","_applyAttributesAfterXHR","applyCustomAttributesOnSpan","error","_addResourceObserver","get","PerformanceObserver","PerformanceResourceTiming","createdResources","observer","list","entries","getEntries","entry","initiatorType","name","push","observe","entryTypes","_clearResources","clearTimingResources","clearResourceTimings","_findResourceAndAddNetworkEvents","endTime","resources","getEntriesByType","resource","mainRequest","_markResourceAsUsed","_cleanPreviousSpanInformation","callbackToRemoveEvents","delete","_createSpan","method","_a","ignoreUrls","spanName","toUpperCase","currentSpan","kind","SpanKind","CLIENT","attributes","HTTP_METHOD","HTTP_URL","addEvent","METHOD_OPEN","set","add","_patchOpen","original","plugin","patchOpen","args","_i","arguments","apply","_patchSend","endSpanTimeout","eventName","sendStartTime","endSpan","setTimeout","onError","EVENT_ERROR","onAbort","EVENT_ABORT","onTimeout","EVENT_TIMEOUT","onLoad","EVENT_LOAD","unregister","removeEventListener","patchSend","METHOD_SEND","addEventListener","disconnect","enable","XMLHttpRequest","open","_unwrap","send","_wrap","disable"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/xhr.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as api from '@opentelemetry/api';\nimport { isWrapped, InstrumentationBase, safeExecuteInTheMiddle, } from '@opentelemetry/instrumentation';\nimport { hrTime, isUrlIgnored, otperformance } from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { addSpanNetworkEvents, getResource, PerformanceTimingNames as PTN, shouldPropagateTraceHeaders, parseUrl, } from '@opentelemetry/sdk-trace-web';\nimport { EventNames } from './enums/EventNames';\nimport { VERSION } from './version';\nimport { AttributeNames } from './enums/AttributeNames';\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nvar OBSERVER_WAIT_TIME_MS = 300;\n/**\n * This class represents a XMLHttpRequest plugin for auto instrumentation\n */\nvar XMLHttpRequestInstrumentation = /** @class */ (function (_super) {\n    __extends(XMLHttpRequestInstrumentation, _super);\n    function XMLHttpRequestInstrumentation(config) {\n        var _this = _super.call(this, '@opentelemetry/instrumentation-xml-http-request', VERSION, config) || this;\n        _this.component = 'xml-http-request';\n        _this.version = VERSION;\n        _this.moduleName = _this.component;\n        _this._tasksCount = 0;\n        _this._xhrMem = new WeakMap();\n        _this._usedResources = new WeakSet();\n        return _this;\n    }\n    XMLHttpRequestInstrumentation.prototype.init = function () { };\n    XMLHttpRequestInstrumentation.prototype._getConfig = function () {\n        return this._config;\n    };\n    /**\n     * Adds custom headers to XMLHttpRequest\n     * @param xhr\n     * @param spanUrl\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._addHeaders = function (xhr, spanUrl) {\n        var url = parseUrl(spanUrl).href;\n        if (!shouldPropagateTraceHeaders(url, this._getConfig().propagateTraceHeaderCorsUrls)) {\n            var headers_1 = {};\n            api.propagation.inject(api.context.active(), headers_1);\n            if (Object.keys(headers_1).length > 0) {\n                this._diag.debug('headers inject skipped due to CORS policy');\n            }\n            return;\n        }\n        var headers = {};\n        api.propagation.inject(api.context.active(), headers);\n        Object.keys(headers).forEach(function (key) {\n            xhr.setRequestHeader(key, String(headers[key]));\n        });\n    };\n    /**\n     * Add cors pre flight child span\n     * @param span\n     * @param corsPreFlightRequest\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._addChildSpan = function (span, corsPreFlightRequest) {\n        var _this = this;\n        api.context.with(api.trace.setSpan(api.context.active(), span), function () {\n            var childSpan = _this.tracer.startSpan('CORS Preflight', {\n                startTime: corsPreFlightRequest[PTN.FETCH_START],\n            });\n            addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n            childSpan.end(corsPreFlightRequest[PTN.RESPONSE_END]);\n        });\n    };\n    /**\n     * Add attributes when span is going to end\n     * @param span\n     * @param xhr\n     * @param spanUrl\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._addFinalSpanAttributes = function (span, xhrMem, spanUrl) {\n        if (typeof spanUrl === 'string') {\n            var parsedUrl = parseUrl(spanUrl);\n            if (xhrMem.status !== undefined) {\n                span.setAttribute(SemanticAttributes.HTTP_STATUS_CODE, xhrMem.status);\n            }\n            if (xhrMem.statusText !== undefined) {\n                span.setAttribute(AttributeNames.HTTP_STATUS_TEXT, xhrMem.statusText);\n            }\n            span.setAttribute(SemanticAttributes.HTTP_HOST, parsedUrl.host);\n            span.setAttribute(SemanticAttributes.HTTP_SCHEME, parsedUrl.protocol.replace(':', ''));\n            // @TODO do we want to collect this or it will be collected earlier once only or\n            //    maybe when parent span is not available ?\n            span.setAttribute(SemanticAttributes.HTTP_USER_AGENT, navigator.userAgent);\n        }\n    };\n    XMLHttpRequestInstrumentation.prototype._applyAttributesAfterXHR = function (span, xhr) {\n        var _this = this;\n        var applyCustomAttributesOnSpan = this._getConfig()\n            .applyCustomAttributesOnSpan;\n        if (typeof applyCustomAttributesOnSpan === 'function') {\n            safeExecuteInTheMiddle(function () { return applyCustomAttributesOnSpan(span, xhr); }, function (error) {\n                if (!error) {\n                    return;\n                }\n                _this._diag.error('applyCustomAttributesOnSpan', error);\n            }, true);\n        }\n    };\n    /**\n     * will collect information about all resources created\n     * between \"send\" and \"end\" with additional waiting for main resource\n     * @param xhr\n     * @param spanUrl\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._addResourceObserver = function (xhr, spanUrl) {\n        var xhrMem = this._xhrMem.get(xhr);\n        if (!xhrMem ||\n            typeof PerformanceObserver !== 'function' ||\n            typeof PerformanceResourceTiming !== 'function') {\n            return;\n        }\n        xhrMem.createdResources = {\n            observer: new PerformanceObserver(function (list) {\n                var entries = list.getEntries();\n                var parsedUrl = parseUrl(spanUrl);\n                entries.forEach(function (entry) {\n                    if (entry.initiatorType === 'xmlhttprequest' &&\n                        entry.name === parsedUrl.href) {\n                        if (xhrMem.createdResources) {\n                            xhrMem.createdResources.entries.push(entry);\n                        }\n                    }\n                });\n            }),\n            entries: [],\n        };\n        xhrMem.createdResources.observer.observe({\n            entryTypes: ['resource'],\n        });\n    };\n    /**\n     * Clears the resource timings and all resources assigned with spans\n     *     when {@link XMLHttpRequestInstrumentationConfig.clearTimingResources} is\n     *     set to true (default false)\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._clearResources = function () {\n        if (this._tasksCount === 0 && this._getConfig().clearTimingResources) {\n            otperformance.clearResourceTimings();\n            this._xhrMem = new WeakMap();\n            this._usedResources = new WeakSet();\n        }\n    };\n    /**\n     * Finds appropriate resource and add network events to the span\n     * @param span\n     */\n    XMLHttpRequestInstrumentation.prototype._findResourceAndAddNetworkEvents = function (xhrMem, span, spanUrl, startTime, endTime) {\n        if (!spanUrl || !startTime || !endTime || !xhrMem.createdResources) {\n            return;\n        }\n        var resources = xhrMem.createdResources.entries;\n        if (!resources || !resources.length) {\n            // fallback - either Observer is not available or it took longer\n            // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n            // information\n            // ts thinks this is the perf_hooks module, but it is the browser performance api\n            resources = otperformance.getEntriesByType('resource');\n        }\n        var resource = getResource(parseUrl(spanUrl).href, startTime, endTime, resources, this._usedResources);\n        if (resource.mainRequest) {\n            var mainRequest = resource.mainRequest;\n            this._markResourceAsUsed(mainRequest);\n            var corsPreFlightRequest = resource.corsPreFlightRequest;\n            if (corsPreFlightRequest) {\n                this._addChildSpan(span, corsPreFlightRequest);\n                this._markResourceAsUsed(corsPreFlightRequest);\n            }\n            addSpanNetworkEvents(span, mainRequest);\n        }\n    };\n    /**\n     * Removes the previous information about span.\n     * This might happened when the same xhr is used again.\n     * @param xhr\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._cleanPreviousSpanInformation = function (xhr) {\n        var xhrMem = this._xhrMem.get(xhr);\n        if (xhrMem) {\n            var callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n            if (callbackToRemoveEvents) {\n                callbackToRemoveEvents();\n            }\n            this._xhrMem.delete(xhr);\n        }\n    };\n    /**\n     * Creates a new span when method \"open\" is called\n     * @param xhr\n     * @param url\n     * @param method\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._createSpan = function (xhr, url, method) {\n        var _a;\n        if (isUrlIgnored(url, this._getConfig().ignoreUrls)) {\n            this._diag.debug('ignoring span as url matches ignored url');\n            return;\n        }\n        var spanName = \"HTTP \" + method.toUpperCase();\n        var currentSpan = this.tracer.startSpan(spanName, {\n            kind: api.SpanKind.CLIENT,\n            attributes: (_a = {},\n                _a[SemanticAttributes.HTTP_METHOD] = method,\n                _a[SemanticAttributes.HTTP_URL] = url,\n                _a),\n        });\n        currentSpan.addEvent(EventNames.METHOD_OPEN);\n        this._cleanPreviousSpanInformation(xhr);\n        this._xhrMem.set(xhr, {\n            span: currentSpan,\n            spanUrl: url,\n        });\n        return currentSpan;\n    };\n    /**\n     * Marks certain [resource]{@link PerformanceResourceTiming} when information\n     * from this is used to add events to span.\n     * This is done to avoid reusing the same resource again for next span\n     * @param resource\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._markResourceAsUsed = function (resource) {\n        this._usedResources.add(resource);\n    };\n    /**\n     * Patches the method open\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._patchOpen = function () {\n        var _this = this;\n        return function (original) {\n            var plugin = _this;\n            return function patchOpen() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var method = args[0];\n                var url = args[1];\n                plugin._createSpan(this, url, method);\n                return original.apply(this, args);\n            };\n        };\n    };\n    /**\n     * Patches the method send\n     * @private\n     */\n    XMLHttpRequestInstrumentation.prototype._patchSend = function () {\n        var plugin = this;\n        function endSpanTimeout(eventName, xhrMem, endTime) {\n            var callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n            if (typeof callbackToRemoveEvents === 'function') {\n                callbackToRemoveEvents();\n            }\n            var span = xhrMem.span, spanUrl = xhrMem.spanUrl, sendStartTime = xhrMem.sendStartTime;\n            if (span) {\n                plugin._findResourceAndAddNetworkEvents(xhrMem, span, spanUrl, sendStartTime, endTime);\n                span.addEvent(eventName, endTime);\n                plugin._addFinalSpanAttributes(span, xhrMem, spanUrl);\n                span.end(endTime);\n                plugin._tasksCount--;\n            }\n            plugin._clearResources();\n        }\n        function endSpan(eventName, xhr) {\n            var xhrMem = plugin._xhrMem.get(xhr);\n            if (!xhrMem) {\n                return;\n            }\n            xhrMem.status = xhr.status;\n            xhrMem.statusText = xhr.statusText;\n            plugin._xhrMem.delete(xhr);\n            if (xhrMem.span) {\n                plugin._applyAttributesAfterXHR(xhrMem.span, xhr);\n            }\n            var endTime = hrTime();\n            // the timeout is needed as observer doesn't have yet information\n            // when event \"load\" is called. Also the time may differ depends on\n            // browser and speed of computer\n            setTimeout(function () {\n                endSpanTimeout(eventName, xhrMem, endTime);\n            }, OBSERVER_WAIT_TIME_MS);\n        }\n        function onError() {\n            endSpan(EventNames.EVENT_ERROR, this);\n        }\n        function onAbort() {\n            endSpan(EventNames.EVENT_ABORT, this);\n        }\n        function onTimeout() {\n            endSpan(EventNames.EVENT_TIMEOUT, this);\n        }\n        function onLoad() {\n            if (this.status < 299) {\n                endSpan(EventNames.EVENT_LOAD, this);\n            }\n            else {\n                endSpan(EventNames.EVENT_ERROR, this);\n            }\n        }\n        function unregister(xhr) {\n            xhr.removeEventListener('abort', onAbort);\n            xhr.removeEventListener('error', onError);\n            xhr.removeEventListener('load', onLoad);\n            xhr.removeEventListener('timeout', onTimeout);\n            var xhrMem = plugin._xhrMem.get(xhr);\n            if (xhrMem) {\n                xhrMem.callbackToRemoveEvents = undefined;\n            }\n        }\n        return function (original) {\n            return function patchSend() {\n                var _this = this;\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var xhrMem = plugin._xhrMem.get(this);\n                if (!xhrMem) {\n                    return original.apply(this, args);\n                }\n                var currentSpan = xhrMem.span;\n                var spanUrl = xhrMem.spanUrl;\n                if (currentSpan && spanUrl) {\n                    api.context.with(api.trace.setSpan(api.context.active(), currentSpan), function () {\n                        plugin._tasksCount++;\n                        xhrMem.sendStartTime = hrTime();\n                        currentSpan.addEvent(EventNames.METHOD_SEND);\n                        _this.addEventListener('abort', onAbort);\n                        _this.addEventListener('error', onError);\n                        _this.addEventListener('load', onLoad);\n                        _this.addEventListener('timeout', onTimeout);\n                        xhrMem.callbackToRemoveEvents = function () {\n                            unregister(_this);\n                            if (xhrMem.createdResources) {\n                                xhrMem.createdResources.observer.disconnect();\n                            }\n                        };\n                        plugin._addHeaders(_this, spanUrl);\n                        plugin._addResourceObserver(_this, spanUrl);\n                    });\n                }\n                return original.apply(this, args);\n            };\n        };\n    };\n    /**\n     * implements enable function\n     */\n    XMLHttpRequestInstrumentation.prototype.enable = function () {\n        this._diag.debug('applying patch to', this.moduleName, this.version);\n        if (isWrapped(XMLHttpRequest.prototype.open)) {\n            this._unwrap(XMLHttpRequest.prototype, 'open');\n            this._diag.debug('removing previous patch from method open');\n        }\n        if (isWrapped(XMLHttpRequest.prototype.send)) {\n            this._unwrap(XMLHttpRequest.prototype, 'send');\n            this._diag.debug('removing previous patch from method send');\n        }\n        this._wrap(XMLHttpRequest.prototype, 'open', this._patchOpen());\n        this._wrap(XMLHttpRequest.prototype, 'send', this._patchSend());\n    };\n    /**\n     * implements disable function\n     */\n    XMLHttpRequestInstrumentation.prototype.disable = function () {\n        this._diag.debug('removing patch from', this.moduleName, this.version);\n        this._unwrap(XMLHttpRequest.prototype, 'open');\n        this._unwrap(XMLHttpRequest.prototype, 'send');\n        this._tasksCount = 0;\n        this._xhrMem = new WeakMap();\n        this._usedResources = new WeakSet();\n    };\n    return XMLHttpRequestInstrumentation;\n}(InstrumentationBase));\nexport { XMLHttpRequestInstrumentation };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIC,MAAM,CAACK,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IACrG,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnB,IAAI,OAAOA,CAAC,KAAK,UAAU,IAAIA,CAAC,KAAK,IAAI,EACrC,MAAM,IAAIS,SAAS,CAAC,sBAAsB,GAAGC,MAAM,CAACV,CAAC,CAAC,GAAG,+BAA+B,CAAC;IAC7FF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASW,EAAE,GAAG;MAAE,IAAI,CAACC,WAAW,GAAGb,CAAC;IAAE;IACtCA,CAAC,CAACO,SAAS,GAAGN,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACY,MAAM,CAACb,CAAC,CAAC,IAAIW,EAAE,CAACL,SAAS,GAAGN,CAAC,CAACM,SAAS,EAAE,IAAIK,EAAE,EAAE,CAAC;EACxF,CAAC;AACL,CAAC,EAAG;AACJ,OAAO,KAAKG,GAAG,MAAM,oBAAoB;AACzC,SAASC,SAAS,EAAEC,mBAAmB,EAAEC,sBAAsB,QAAS,gCAAgC;AACxG,SAASC,MAAM,EAAEC,YAAY,EAAEC,aAAa,QAAQ,qBAAqB;AACzE,SAASC,kBAAkB,QAAQ,qCAAqC;AACxE,SAASC,oBAAoB,EAAEC,WAAW,EAAEC,sBAAsB,IAAIC,GAAG,EAAEC,2BAA2B,EAAEC,QAAQ,QAAS,8BAA8B;AACvJ,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,cAAc,QAAQ,wBAAwB;AACvD;AACA;AACA;AACA;AACA,IAAIC,qBAAqB,GAAG,GAAG;AAC/B;AACA;AACA;AACA,IAAIC,6BAA6B,GAAG,aAAe,UAAUC,MAAM,EAAE;EACjEpC,SAAS,CAACmC,6BAA6B,EAAEC,MAAM,CAAC;EAChD,SAASD,6BAA6B,CAACE,MAAM,EAAE;IAC3C,IAAIC,KAAK,GAAGF,MAAM,CAACzB,IAAI,CAAC,IAAI,EAAE,iDAAiD,EAAEqB,OAAO,EAAEK,MAAM,CAAC,IAAI,IAAI;IACzGC,KAAK,CAACC,SAAS,GAAG,kBAAkB;IACpCD,KAAK,CAACE,OAAO,GAAGR,OAAO;IACvBM,KAAK,CAACG,UAAU,GAAGH,KAAK,CAACC,SAAS;IAClCD,KAAK,CAACI,WAAW,GAAG,CAAC;IACrBJ,KAAK,CAACK,OAAO,GAAG,IAAIC,OAAO,EAAE;IAC7BN,KAAK,CAACO,cAAc,GAAG,IAAIC,OAAO,EAAE;IACpC,OAAOR,KAAK;EAChB;EACAH,6BAA6B,CAAC1B,SAAS,CAACsC,IAAI,GAAG,YAAY,CAAE,CAAC;EAC9DZ,6BAA6B,CAAC1B,SAAS,CAACuC,UAAU,GAAG,YAAY;IAC7D,OAAO,IAAI,CAACC,OAAO;EACvB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACId,6BAA6B,CAAC1B,SAAS,CAACyC,WAAW,GAAG,UAAUC,GAAG,EAAEC,OAAO,EAAE;IAC1E,IAAIC,GAAG,GAAGvB,QAAQ,CAACsB,OAAO,CAAC,CAACE,IAAI;IAChC,IAAI,CAACzB,2BAA2B,CAACwB,GAAG,EAAE,IAAI,CAACL,UAAU,EAAE,CAACO,4BAA4B,CAAC,EAAE;MACnF,IAAIC,SAAS,GAAG,CAAC,CAAC;MAClBvC,GAAG,CAACwC,WAAW,CAACC,MAAM,CAACzC,GAAG,CAAC0C,OAAO,CAACC,MAAM,EAAE,EAAEJ,SAAS,CAAC;MACvD,IAAIpD,MAAM,CAACyD,IAAI,CAACL,SAAS,CAAC,CAACM,MAAM,GAAG,CAAC,EAAE;QACnC,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,2CAA2C,CAAC;MACjE;MACA;IACJ;IACA,IAAIC,OAAO,GAAG,CAAC,CAAC;IAChBhD,GAAG,CAACwC,WAAW,CAACC,MAAM,CAACzC,GAAG,CAAC0C,OAAO,CAACC,MAAM,EAAE,EAAEK,OAAO,CAAC;IACrD7D,MAAM,CAACyD,IAAI,CAACI,OAAO,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;MACxChB,GAAG,CAACiB,gBAAgB,CAACD,GAAG,EAAEtD,MAAM,CAACoD,OAAO,CAACE,GAAG,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIhC,6BAA6B,CAAC1B,SAAS,CAAC4D,aAAa,GAAG,UAAUC,IAAI,EAAEC,oBAAoB,EAAE;IAC1F,IAAIjC,KAAK,GAAG,IAAI;IAChBrB,GAAG,CAAC0C,OAAO,CAACa,IAAI,CAACvD,GAAG,CAACwD,KAAK,CAACC,OAAO,CAACzD,GAAG,CAAC0C,OAAO,CAACC,MAAM,EAAE,EAAEU,IAAI,CAAC,EAAE,YAAY;MACxE,IAAIK,SAAS,GAAGrC,KAAK,CAACsC,MAAM,CAACC,SAAS,CAAC,gBAAgB,EAAE;QACrDC,SAAS,EAAEP,oBAAoB,CAAC3C,GAAG,CAACmD,WAAW;MACnD,CAAC,CAAC;MACFtD,oBAAoB,CAACkD,SAAS,EAAEJ,oBAAoB,CAAC;MACrDI,SAAS,CAACK,GAAG,CAACT,oBAAoB,CAAC3C,GAAG,CAACqD,YAAY,CAAC,CAAC;IACzD,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI9C,6BAA6B,CAAC1B,SAAS,CAACyE,uBAAuB,GAAG,UAAUZ,IAAI,EAAEa,MAAM,EAAE/B,OAAO,EAAE;IAC/F,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAC7B,IAAIgC,SAAS,GAAGtD,QAAQ,CAACsB,OAAO,CAAC;MACjC,IAAI+B,MAAM,CAACE,MAAM,KAAKC,SAAS,EAAE;QAC7BhB,IAAI,CAACiB,YAAY,CAAC/D,kBAAkB,CAACgE,gBAAgB,EAAEL,MAAM,CAACE,MAAM,CAAC;MACzE;MACA,IAAIF,MAAM,CAACM,UAAU,KAAKH,SAAS,EAAE;QACjChB,IAAI,CAACiB,YAAY,CAACtD,cAAc,CAACyD,gBAAgB,EAAEP,MAAM,CAACM,UAAU,CAAC;MACzE;MACAnB,IAAI,CAACiB,YAAY,CAAC/D,kBAAkB,CAACmE,SAAS,EAAEP,SAAS,CAACQ,IAAI,CAAC;MAC/DtB,IAAI,CAACiB,YAAY,CAAC/D,kBAAkB,CAACqE,WAAW,EAAET,SAAS,CAACU,QAAQ,CAACC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;MACtF;MACA;MACAzB,IAAI,CAACiB,YAAY,CAAC/D,kBAAkB,CAACwE,eAAe,EAAEC,SAAS,CAACC,SAAS,CAAC;IAC9E;EACJ,CAAC;EACD/D,6BAA6B,CAAC1B,SAAS,CAAC0F,wBAAwB,GAAG,UAAU7B,IAAI,EAAEnB,GAAG,EAAE;IACpF,IAAIb,KAAK,GAAG,IAAI;IAChB,IAAI8D,2BAA2B,GAAG,IAAI,CAACpD,UAAU,EAAE,CAC9CoD,2BAA2B;IAChC,IAAI,OAAOA,2BAA2B,KAAK,UAAU,EAAE;MACnDhF,sBAAsB,CAAC,YAAY;QAAE,OAAOgF,2BAA2B,CAAC9B,IAAI,EAAEnB,GAAG,CAAC;MAAE,CAAC,EAAE,UAAUkD,KAAK,EAAE;QACpG,IAAI,CAACA,KAAK,EAAE;UACR;QACJ;QACA/D,KAAK,CAACyB,KAAK,CAACsC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MAC3D,CAAC,EAAE,IAAI,CAAC;IACZ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIlE,6BAA6B,CAAC1B,SAAS,CAAC6F,oBAAoB,GAAG,UAAUnD,GAAG,EAAEC,OAAO,EAAE;IACnF,IAAI+B,MAAM,GAAG,IAAI,CAACxC,OAAO,CAAC4D,GAAG,CAACpD,GAAG,CAAC;IAClC,IAAI,CAACgC,MAAM,IACP,OAAOqB,mBAAmB,KAAK,UAAU,IACzC,OAAOC,yBAAyB,KAAK,UAAU,EAAE;MACjD;IACJ;IACAtB,MAAM,CAACuB,gBAAgB,GAAG;MACtBC,QAAQ,EAAE,IAAIH,mBAAmB,CAAC,UAAUI,IAAI,EAAE;QAC9C,IAAIC,OAAO,GAAGD,IAAI,CAACE,UAAU,EAAE;QAC/B,IAAI1B,SAAS,GAAGtD,QAAQ,CAACsB,OAAO,CAAC;QACjCyD,OAAO,CAAC3C,OAAO,CAAC,UAAU6C,KAAK,EAAE;UAC7B,IAAIA,KAAK,CAACC,aAAa,KAAK,gBAAgB,IACxCD,KAAK,CAACE,IAAI,KAAK7B,SAAS,CAAC9B,IAAI,EAAE;YAC/B,IAAI6B,MAAM,CAACuB,gBAAgB,EAAE;cACzBvB,MAAM,CAACuB,gBAAgB,CAACG,OAAO,CAACK,IAAI,CAACH,KAAK,CAAC;YAC/C;UACJ;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;MACFF,OAAO,EAAE;IACb,CAAC;IACD1B,MAAM,CAACuB,gBAAgB,CAACC,QAAQ,CAACQ,OAAO,CAAC;MACrCC,UAAU,EAAE,CAAC,UAAU;IAC3B,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIjF,6BAA6B,CAAC1B,SAAS,CAAC4G,eAAe,GAAG,YAAY;IAClE,IAAI,IAAI,CAAC3E,WAAW,KAAK,CAAC,IAAI,IAAI,CAACM,UAAU,EAAE,CAACsE,oBAAoB,EAAE;MAClE/F,aAAa,CAACgG,oBAAoB,EAAE;MACpC,IAAI,CAAC5E,OAAO,GAAG,IAAIC,OAAO,EAAE;MAC5B,IAAI,CAACC,cAAc,GAAG,IAAIC,OAAO,EAAE;IACvC;EACJ,CAAC;EACD;AACJ;AACA;AACA;EACIX,6BAA6B,CAAC1B,SAAS,CAAC+G,gCAAgC,GAAG,UAAUrC,MAAM,EAAEb,IAAI,EAAElB,OAAO,EAAE0B,SAAS,EAAE2C,OAAO,EAAE;IAC5H,IAAI,CAACrE,OAAO,IAAI,CAAC0B,SAAS,IAAI,CAAC2C,OAAO,IAAI,CAACtC,MAAM,CAACuB,gBAAgB,EAAE;MAChE;IACJ;IACA,IAAIgB,SAAS,GAAGvC,MAAM,CAACuB,gBAAgB,CAACG,OAAO;IAC/C,IAAI,CAACa,SAAS,IAAI,CAACA,SAAS,CAAC5D,MAAM,EAAE;MACjC;MACA;MACA;MACA;MACA4D,SAAS,GAAGnG,aAAa,CAACoG,gBAAgB,CAAC,UAAU,CAAC;IAC1D;IACA,IAAIC,QAAQ,GAAGlG,WAAW,CAACI,QAAQ,CAACsB,OAAO,CAAC,CAACE,IAAI,EAAEwB,SAAS,EAAE2C,OAAO,EAAEC,SAAS,EAAE,IAAI,CAAC7E,cAAc,CAAC;IACtG,IAAI+E,QAAQ,CAACC,WAAW,EAAE;MACtB,IAAIA,WAAW,GAAGD,QAAQ,CAACC,WAAW;MACtC,IAAI,CAACC,mBAAmB,CAACD,WAAW,CAAC;MACrC,IAAItD,oBAAoB,GAAGqD,QAAQ,CAACrD,oBAAoB;MACxD,IAAIA,oBAAoB,EAAE;QACtB,IAAI,CAACF,aAAa,CAACC,IAAI,EAAEC,oBAAoB,CAAC;QAC9C,IAAI,CAACuD,mBAAmB,CAACvD,oBAAoB,CAAC;MAClD;MACA9C,oBAAoB,CAAC6C,IAAI,EAAEuD,WAAW,CAAC;IAC3C;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI1F,6BAA6B,CAAC1B,SAAS,CAACsH,6BAA6B,GAAG,UAAU5E,GAAG,EAAE;IACnF,IAAIgC,MAAM,GAAG,IAAI,CAACxC,OAAO,CAAC4D,GAAG,CAACpD,GAAG,CAAC;IAClC,IAAIgC,MAAM,EAAE;MACR,IAAI6C,sBAAsB,GAAG7C,MAAM,CAAC6C,sBAAsB;MAC1D,IAAIA,sBAAsB,EAAE;QACxBA,sBAAsB,EAAE;MAC5B;MACA,IAAI,CAACrF,OAAO,CAACsF,MAAM,CAAC9E,GAAG,CAAC;IAC5B;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIhB,6BAA6B,CAAC1B,SAAS,CAACyH,WAAW,GAAG,UAAU/E,GAAG,EAAEE,GAAG,EAAE8E,MAAM,EAAE;IAC9E,IAAIC,EAAE;IACN,IAAI9G,YAAY,CAAC+B,GAAG,EAAE,IAAI,CAACL,UAAU,EAAE,CAACqF,UAAU,CAAC,EAAE;MACjD,IAAI,CAACtE,KAAK,CAACC,KAAK,CAAC,0CAA0C,CAAC;MAC5D;IACJ;IACA,IAAIsE,QAAQ,GAAG,OAAO,GAAGH,MAAM,CAACI,WAAW,EAAE;IAC7C,IAAIC,WAAW,GAAG,IAAI,CAAC5D,MAAM,CAACC,SAAS,CAACyD,QAAQ,EAAE;MAC9CG,IAAI,EAAExH,GAAG,CAACyH,QAAQ,CAACC,MAAM;MACzBC,UAAU,GAAGR,EAAE,GAAG,CAAC,CAAC,EAChBA,EAAE,CAAC5G,kBAAkB,CAACqH,WAAW,CAAC,GAAGV,MAAM,EAC3CC,EAAE,CAAC5G,kBAAkB,CAACsH,QAAQ,CAAC,GAAGzF,GAAG,EACrC+E,EAAE;IACV,CAAC,CAAC;IACFI,WAAW,CAACO,QAAQ,CAAChH,UAAU,CAACiH,WAAW,CAAC;IAC5C,IAAI,CAACjB,6BAA6B,CAAC5E,GAAG,CAAC;IACvC,IAAI,CAACR,OAAO,CAACsG,GAAG,CAAC9F,GAAG,EAAE;MAClBmB,IAAI,EAAEkE,WAAW;MACjBpF,OAAO,EAAEC;IACb,CAAC,CAAC;IACF,OAAOmF,WAAW;EACtB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIrG,6BAA6B,CAAC1B,SAAS,CAACqH,mBAAmB,GAAG,UAAUF,QAAQ,EAAE;IAC9E,IAAI,CAAC/E,cAAc,CAACqG,GAAG,CAACtB,QAAQ,CAAC;EACrC,CAAC;EACD;AACJ;AACA;AACA;EACIzF,6BAA6B,CAAC1B,SAAS,CAAC0I,UAAU,GAAG,YAAY;IAC7D,IAAI7G,KAAK,GAAG,IAAI;IAChB,OAAO,UAAU8G,QAAQ,EAAE;MACvB,IAAIC,MAAM,GAAG/G,KAAK;MAClB,OAAO,SAASgH,SAAS,GAAG;QACxB,IAAIC,IAAI,GAAG,EAAE;QACb,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGC,SAAS,CAAC3F,MAAM,EAAE0F,EAAE,EAAE,EAAE;UAC1CD,IAAI,CAACC,EAAE,CAAC,GAAGC,SAAS,CAACD,EAAE,CAAC;QAC5B;QACA,IAAIrB,MAAM,GAAGoB,IAAI,CAAC,CAAC,CAAC;QACpB,IAAIlG,GAAG,GAAGkG,IAAI,CAAC,CAAC,CAAC;QACjBF,MAAM,CAACnB,WAAW,CAAC,IAAI,EAAE7E,GAAG,EAAE8E,MAAM,CAAC;QACrC,OAAOiB,QAAQ,CAACM,KAAK,CAAC,IAAI,EAAEH,IAAI,CAAC;MACrC,CAAC;IACL,CAAC;EACL,CAAC;EACD;AACJ;AACA;AACA;EACIpH,6BAA6B,CAAC1B,SAAS,CAACkJ,UAAU,GAAG,YAAY;IAC7D,IAAIN,MAAM,GAAG,IAAI;IACjB,SAASO,cAAc,CAACC,SAAS,EAAE1E,MAAM,EAAEsC,OAAO,EAAE;MAChD,IAAIO,sBAAsB,GAAG7C,MAAM,CAAC6C,sBAAsB;MAC1D,IAAI,OAAOA,sBAAsB,KAAK,UAAU,EAAE;QAC9CA,sBAAsB,EAAE;MAC5B;MACA,IAAI1D,IAAI,GAAGa,MAAM,CAACb,IAAI;QAAElB,OAAO,GAAG+B,MAAM,CAAC/B,OAAO;QAAE0G,aAAa,GAAG3E,MAAM,CAAC2E,aAAa;MACtF,IAAIxF,IAAI,EAAE;QACN+E,MAAM,CAAC7B,gCAAgC,CAACrC,MAAM,EAAEb,IAAI,EAAElB,OAAO,EAAE0G,aAAa,EAAErC,OAAO,CAAC;QACtFnD,IAAI,CAACyE,QAAQ,CAACc,SAAS,EAAEpC,OAAO,CAAC;QACjC4B,MAAM,CAACnE,uBAAuB,CAACZ,IAAI,EAAEa,MAAM,EAAE/B,OAAO,CAAC;QACrDkB,IAAI,CAACU,GAAG,CAACyC,OAAO,CAAC;QACjB4B,MAAM,CAAC3G,WAAW,EAAE;MACxB;MACA2G,MAAM,CAAChC,eAAe,EAAE;IAC5B;IACA,SAAS0C,OAAO,CAACF,SAAS,EAAE1G,GAAG,EAAE;MAC7B,IAAIgC,MAAM,GAAGkE,MAAM,CAAC1G,OAAO,CAAC4D,GAAG,CAACpD,GAAG,CAAC;MACpC,IAAI,CAACgC,MAAM,EAAE;QACT;MACJ;MACAA,MAAM,CAACE,MAAM,GAAGlC,GAAG,CAACkC,MAAM;MAC1BF,MAAM,CAACM,UAAU,GAAGtC,GAAG,CAACsC,UAAU;MAClC4D,MAAM,CAAC1G,OAAO,CAACsF,MAAM,CAAC9E,GAAG,CAAC;MAC1B,IAAIgC,MAAM,CAACb,IAAI,EAAE;QACb+E,MAAM,CAAClD,wBAAwB,CAAChB,MAAM,CAACb,IAAI,EAAEnB,GAAG,CAAC;MACrD;MACA,IAAIsE,OAAO,GAAGpG,MAAM,EAAE;MACtB;MACA;MACA;MACA2I,UAAU,CAAC,YAAY;QACnBJ,cAAc,CAACC,SAAS,EAAE1E,MAAM,EAAEsC,OAAO,CAAC;MAC9C,CAAC,EAAEvF,qBAAqB,CAAC;IAC7B;IACA,SAAS+H,OAAO,GAAG;MACfF,OAAO,CAAChI,UAAU,CAACmI,WAAW,EAAE,IAAI,CAAC;IACzC;IACA,SAASC,OAAO,GAAG;MACfJ,OAAO,CAAChI,UAAU,CAACqI,WAAW,EAAE,IAAI,CAAC;IACzC;IACA,SAASC,SAAS,GAAG;MACjBN,OAAO,CAAChI,UAAU,CAACuI,aAAa,EAAE,IAAI,CAAC;IAC3C;IACA,SAASC,MAAM,GAAG;MACd,IAAI,IAAI,CAAClF,MAAM,GAAG,GAAG,EAAE;QACnB0E,OAAO,CAAChI,UAAU,CAACyI,UAAU,EAAE,IAAI,CAAC;MACxC,CAAC,MACI;QACDT,OAAO,CAAChI,UAAU,CAACmI,WAAW,EAAE,IAAI,CAAC;MACzC;IACJ;IACA,SAASO,UAAU,CAACtH,GAAG,EAAE;MACrBA,GAAG,CAACuH,mBAAmB,CAAC,OAAO,EAAEP,OAAO,CAAC;MACzChH,GAAG,CAACuH,mBAAmB,CAAC,OAAO,EAAET,OAAO,CAAC;MACzC9G,GAAG,CAACuH,mBAAmB,CAAC,MAAM,EAAEH,MAAM,CAAC;MACvCpH,GAAG,CAACuH,mBAAmB,CAAC,SAAS,EAAEL,SAAS,CAAC;MAC7C,IAAIlF,MAAM,GAAGkE,MAAM,CAAC1G,OAAO,CAAC4D,GAAG,CAACpD,GAAG,CAAC;MACpC,IAAIgC,MAAM,EAAE;QACRA,MAAM,CAAC6C,sBAAsB,GAAG1C,SAAS;MAC7C;IACJ;IACA,OAAO,UAAU8D,QAAQ,EAAE;MACvB,OAAO,SAASuB,SAAS,GAAG;QACxB,IAAIrI,KAAK,GAAG,IAAI;QAChB,IAAIiH,IAAI,GAAG,EAAE;QACb,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGC,SAAS,CAAC3F,MAAM,EAAE0F,EAAE,EAAE,EAAE;UAC1CD,IAAI,CAACC,EAAE,CAAC,GAAGC,SAAS,CAACD,EAAE,CAAC;QAC5B;QACA,IAAIrE,MAAM,GAAGkE,MAAM,CAAC1G,OAAO,CAAC4D,GAAG,CAAC,IAAI,CAAC;QACrC,IAAI,CAACpB,MAAM,EAAE;UACT,OAAOiE,QAAQ,CAACM,KAAK,CAAC,IAAI,EAAEH,IAAI,CAAC;QACrC;QACA,IAAIf,WAAW,GAAGrD,MAAM,CAACb,IAAI;QAC7B,IAAIlB,OAAO,GAAG+B,MAAM,CAAC/B,OAAO;QAC5B,IAAIoF,WAAW,IAAIpF,OAAO,EAAE;UACxBnC,GAAG,CAAC0C,OAAO,CAACa,IAAI,CAACvD,GAAG,CAACwD,KAAK,CAACC,OAAO,CAACzD,GAAG,CAAC0C,OAAO,CAACC,MAAM,EAAE,EAAE4E,WAAW,CAAC,EAAE,YAAY;YAC/Ea,MAAM,CAAC3G,WAAW,EAAE;YACpByC,MAAM,CAAC2E,aAAa,GAAGzI,MAAM,EAAE;YAC/BmH,WAAW,CAACO,QAAQ,CAAChH,UAAU,CAAC6I,WAAW,CAAC;YAC5CtI,KAAK,CAACuI,gBAAgB,CAAC,OAAO,EAAEV,OAAO,CAAC;YACxC7H,KAAK,CAACuI,gBAAgB,CAAC,OAAO,EAAEZ,OAAO,CAAC;YACxC3H,KAAK,CAACuI,gBAAgB,CAAC,MAAM,EAAEN,MAAM,CAAC;YACtCjI,KAAK,CAACuI,gBAAgB,CAAC,SAAS,EAAER,SAAS,CAAC;YAC5ClF,MAAM,CAAC6C,sBAAsB,GAAG,YAAY;cACxCyC,UAAU,CAACnI,KAAK,CAAC;cACjB,IAAI6C,MAAM,CAACuB,gBAAgB,EAAE;gBACzBvB,MAAM,CAACuB,gBAAgB,CAACC,QAAQ,CAACmE,UAAU,EAAE;cACjD;YACJ,CAAC;YACDzB,MAAM,CAACnG,WAAW,CAACZ,KAAK,EAAEc,OAAO,CAAC;YAClCiG,MAAM,CAAC/C,oBAAoB,CAAChE,KAAK,EAAEc,OAAO,CAAC;UAC/C,CAAC,CAAC;QACN;QACA,OAAOgG,QAAQ,CAACM,KAAK,CAAC,IAAI,EAAEH,IAAI,CAAC;MACrC,CAAC;IACL,CAAC;EACL,CAAC;EACD;AACJ;AACA;EACIpH,6BAA6B,CAAC1B,SAAS,CAACsK,MAAM,GAAG,YAAY;IACzD,IAAI,CAAChH,KAAK,CAACC,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACvB,UAAU,EAAE,IAAI,CAACD,OAAO,CAAC;IACpE,IAAItB,SAAS,CAAC8J,cAAc,CAACvK,SAAS,CAACwK,IAAI,CAAC,EAAE;MAC1C,IAAI,CAACC,OAAO,CAACF,cAAc,CAACvK,SAAS,EAAE,MAAM,CAAC;MAC9C,IAAI,CAACsD,KAAK,CAACC,KAAK,CAAC,0CAA0C,CAAC;IAChE;IACA,IAAI9C,SAAS,CAAC8J,cAAc,CAACvK,SAAS,CAAC0K,IAAI,CAAC,EAAE;MAC1C,IAAI,CAACD,OAAO,CAACF,cAAc,CAACvK,SAAS,EAAE,MAAM,CAAC;MAC9C,IAAI,CAACsD,KAAK,CAACC,KAAK,CAAC,0CAA0C,CAAC;IAChE;IACA,IAAI,CAACoH,KAAK,CAACJ,cAAc,CAACvK,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC0I,UAAU,EAAE,CAAC;IAC/D,IAAI,CAACiC,KAAK,CAACJ,cAAc,CAACvK,SAAS,EAAE,MAAM,EAAE,IAAI,CAACkJ,UAAU,EAAE,CAAC;EACnE,CAAC;EACD;AACJ;AACA;EACIxH,6BAA6B,CAAC1B,SAAS,CAAC4K,OAAO,GAAG,YAAY;IAC1D,IAAI,CAACtH,KAAK,CAACC,KAAK,CAAC,qBAAqB,EAAE,IAAI,CAACvB,UAAU,EAAE,IAAI,CAACD,OAAO,CAAC;IACtE,IAAI,CAAC0I,OAAO,CAACF,cAAc,CAACvK,SAAS,EAAE,MAAM,CAAC;IAC9C,IAAI,CAACyK,OAAO,CAACF,cAAc,CAACvK,SAAS,EAAE,MAAM,CAAC;IAC9C,IAAI,CAACiC,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,OAAO,GAAG,IAAIC,OAAO,EAAE;IAC5B,IAAI,CAACC,cAAc,GAAG,IAAIC,OAAO,EAAE;EACvC,CAAC;EACD,OAAOX,6BAA6B;AACxC,CAAC,CAAChB,mBAAmB,CAAE;AACvB,SAASgB,6BAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}