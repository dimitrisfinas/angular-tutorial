{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport * as api from '@opentelemetry/api';\nimport { isWrapped, InstrumentationBase, safeExecuteInTheMiddle } from '@opentelemetry/instrumentation';\nimport * as core from '@opentelemetry/core';\nimport * as web from '@opentelemetry/sdk-trace-web';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { VERSION } from './version';\nimport { _globalThis } from '@opentelemetry/core';\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nvar OBSERVER_WAIT_TIME_MS = 300;\n/**\n * This class represents a fetch plugin for auto instrumentation\n */\nvar FetchInstrumentation = /** @class */function (_super) {\n  __extends(FetchInstrumentation, _super);\n  function FetchInstrumentation(config) {\n    var _this = _super.call(this, '@opentelemetry/instrumentation-fetch', VERSION, config) || this;\n    _this.component = 'fetch';\n    _this.version = VERSION;\n    _this.moduleName = _this.component;\n    _this._usedResources = new WeakSet();\n    _this._tasksCount = 0;\n    return _this;\n  }\n  FetchInstrumentation.prototype.init = function () {};\n  FetchInstrumentation.prototype._getConfig = function () {\n    return this._config;\n  };\n  /**\n   * Add cors pre flight child span\n   * @param span\n   * @param corsPreFlightRequest\n   */\n  FetchInstrumentation.prototype._addChildSpan = function (span, corsPreFlightRequest) {\n    var childSpan = this.tracer.startSpan('CORS Preflight', {\n      startTime: corsPreFlightRequest[web.PerformanceTimingNames.FETCH_START]\n    }, api.trace.setSpan(api.context.active(), span));\n    if (!this._getConfig().ignoreNetworkEvents) {\n      web.addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n    }\n    childSpan.end(corsPreFlightRequest[web.PerformanceTimingNames.RESPONSE_END]);\n  };\n  /**\n   * Adds more attributes to span just before ending it\n   * @param span\n   * @param response\n   */\n  FetchInstrumentation.prototype._addFinalSpanAttributes = function (span, response) {\n    var parsedUrl = web.parseUrl(response.url);\n    span.setAttribute(SemanticAttributes.HTTP_STATUS_CODE, response.status);\n    if (response.statusText != null) {\n      span.setAttribute(AttributeNames.HTTP_STATUS_TEXT, response.statusText);\n    }\n    span.setAttribute(SemanticAttributes.HTTP_HOST, parsedUrl.host);\n    span.setAttribute(SemanticAttributes.HTTP_SCHEME, parsedUrl.protocol.replace(':', ''));\n    span.setAttribute(SemanticAttributes.HTTP_USER_AGENT, navigator.userAgent);\n  };\n  /**\n   * Add headers\n   * @param options\n   * @param spanUrl\n   */\n  FetchInstrumentation.prototype._addHeaders = function (options, spanUrl) {\n    if (!web.shouldPropagateTraceHeaders(spanUrl, this._getConfig().propagateTraceHeaderCorsUrls)) {\n      var headers = {};\n      api.propagation.inject(api.context.active(), headers);\n      if (Object.keys(headers).length > 0) {\n        this._diag.debug('headers inject skipped due to CORS policy');\n      }\n      return;\n    }\n    if (options instanceof Request) {\n      api.propagation.inject(api.context.active(), options.headers, {\n        set: function (h, k, v) {\n          return h.set(k, typeof v === 'string' ? v : String(v));\n        }\n      });\n    } else if (options.headers instanceof Headers) {\n      api.propagation.inject(api.context.active(), options.headers, {\n        set: function (h, k, v) {\n          return h.set(k, typeof v === 'string' ? v : String(v));\n        }\n      });\n    } else {\n      var headers = {};\n      api.propagation.inject(api.context.active(), headers);\n      options.headers = Object.assign({}, headers, options.headers || {});\n    }\n  };\n  /**\n   * Clears the resource timings and all resources assigned with spans\n   *     when {@link FetchPluginConfig.clearTimingResources} is\n   *     set to true (default false)\n   * @private\n   */\n  FetchInstrumentation.prototype._clearResources = function () {\n    if (this._tasksCount === 0 && this._getConfig().clearTimingResources) {\n      performance.clearResourceTimings();\n      this._usedResources = new WeakSet();\n    }\n  };\n  /**\n   * Creates a new span\n   * @param url\n   * @param options\n   */\n  FetchInstrumentation.prototype._createSpan = function (url, options) {\n    var _a;\n    if (options === void 0) {\n      options = {};\n    }\n    if (core.isUrlIgnored(url, this._getConfig().ignoreUrls)) {\n      this._diag.debug('ignoring span as url matches ignored url');\n      return;\n    }\n    var method = (options.method || 'GET').toUpperCase();\n    var spanName = \"HTTP \" + method;\n    return this.tracer.startSpan(spanName, {\n      kind: api.SpanKind.CLIENT,\n      attributes: (_a = {}, _a[AttributeNames.COMPONENT] = this.moduleName, _a[SemanticAttributes.HTTP_METHOD] = method, _a[SemanticAttributes.HTTP_URL] = url, _a)\n    });\n  };\n  /**\n   * Finds appropriate resource and add network events to the span\n   * @param span\n   * @param resourcesObserver\n   * @param endTime\n   */\n  FetchInstrumentation.prototype._findResourceAndAddNetworkEvents = function (span, resourcesObserver, endTime) {\n    var resources = resourcesObserver.entries;\n    if (!resources.length) {\n      if (!performance.getEntriesByType) {\n        return;\n      }\n      // fallback - either Observer is not available or it took longer\n      // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n      // information\n      resources = performance.getEntriesByType('resource');\n    }\n    var resource = web.getResource(resourcesObserver.spanUrl, resourcesObserver.startTime, endTime, resources, this._usedResources, 'fetch');\n    if (resource.mainRequest) {\n      var mainRequest = resource.mainRequest;\n      this._markResourceAsUsed(mainRequest);\n      var corsPreFlightRequest = resource.corsPreFlightRequest;\n      if (corsPreFlightRequest) {\n        this._addChildSpan(span, corsPreFlightRequest);\n        this._markResourceAsUsed(corsPreFlightRequest);\n      }\n      if (!this._getConfig().ignoreNetworkEvents) {\n        web.addSpanNetworkEvents(span, mainRequest);\n      }\n    }\n  };\n  /**\n   * Marks certain [resource]{@link PerformanceResourceTiming} when information\n   * from this is used to add events to span.\n   * This is done to avoid reusing the same resource again for next span\n   * @param resource\n   */\n  FetchInstrumentation.prototype._markResourceAsUsed = function (resource) {\n    this._usedResources.add(resource);\n  };\n  /**\n   * Finish span, add attributes, network events etc.\n   * @param span\n   * @param spanData\n   * @param response\n   */\n  FetchInstrumentation.prototype._endSpan = function (span, spanData, response) {\n    var _this = this;\n    var endTime = core.hrTime();\n    this._addFinalSpanAttributes(span, response);\n    setTimeout(function () {\n      var _a;\n      (_a = spanData.observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n      _this._findResourceAndAddNetworkEvents(span, spanData, endTime);\n      _this._tasksCount--;\n      _this._clearResources();\n      span.end(endTime);\n    }, OBSERVER_WAIT_TIME_MS);\n  };\n  /**\n   * Patches the constructor of fetch\n   */\n  FetchInstrumentation.prototype._patchConstructor = function () {\n    var _this = this;\n    return function (original) {\n      var plugin = _this;\n      return function patchConstructor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var self = this;\n        var url = web.parseUrl(args[0] instanceof Request ? args[0].url : args[0]).href;\n        var options = args[0] instanceof Request ? args[0] : args[1] || {};\n        var createdSpan = plugin._createSpan(url, options);\n        if (!createdSpan) {\n          return original.apply(this, args);\n        }\n        var spanData = plugin._prepareSpanData(url);\n        function endSpanOnError(span, error) {\n          plugin._applyAttributesAfterFetch(span, options, error);\n          plugin._endSpan(span, spanData, {\n            status: error.status || 0,\n            statusText: error.message,\n            url: url\n          });\n        }\n        function endSpanOnSuccess(span, response) {\n          plugin._applyAttributesAfterFetch(span, options, response);\n          if (response.status >= 200 && response.status < 400) {\n            plugin._endSpan(span, spanData, response);\n          } else {\n            plugin._endSpan(span, spanData, {\n              status: response.status,\n              statusText: response.statusText,\n              url: url\n            });\n          }\n        }\n        function onSuccess(span, resolve, response) {\n          try {\n            var resClone = response.clone();\n            var resClone4Hook_1 = response.clone();\n            var body = resClone.body;\n            if (body) {\n              var reader_1 = body.getReader();\n              var read_1 = function () {\n                reader_1.read().then(function (_a) {\n                  var done = _a.done;\n                  if (done) {\n                    endSpanOnSuccess(span, resClone4Hook_1);\n                  } else {\n                    read_1();\n                  }\n                }, function (error) {\n                  endSpanOnError(span, error);\n                });\n              };\n              read_1();\n            } else {\n              // some older browsers don't have .body implemented\n              endSpanOnSuccess(span, response);\n            }\n          } finally {\n            resolve(response);\n          }\n        }\n        function onError(span, reject, error) {\n          try {\n            endSpanOnError(span, error);\n          } finally {\n            reject(error);\n          }\n        }\n        return new Promise(function (resolve, reject) {\n          return api.context.with(api.trace.setSpan(api.context.active(), createdSpan), function () {\n            plugin._addHeaders(options, url);\n            plugin._tasksCount++;\n            // TypeScript complains about arrow function captured a this typed as globalThis\n            // ts(7041)\n            return original.apply(self, options instanceof Request ? [options] : [url, options]).then(onSuccess.bind(self, createdSpan, resolve), onError.bind(self, createdSpan, reject));\n          });\n        });\n      };\n    };\n  };\n  FetchInstrumentation.prototype._applyAttributesAfterFetch = function (span, request, result) {\n    var _this = this;\n    var applyCustomAttributesOnSpan = this._getConfig().applyCustomAttributesOnSpan;\n    if (applyCustomAttributesOnSpan) {\n      safeExecuteInTheMiddle(function () {\n        return applyCustomAttributesOnSpan(span, request, result);\n      }, function (error) {\n        if (!error) {\n          return;\n        }\n        _this._diag.error('applyCustomAttributesOnSpan', error);\n      }, true);\n    }\n  };\n  /**\n   * Prepares a span data - needed later for matching appropriate network\n   *     resources\n   * @param spanUrl\n   */\n  FetchInstrumentation.prototype._prepareSpanData = function (spanUrl) {\n    var startTime = core.hrTime();\n    var entries = [];\n    if (typeof PerformanceObserver !== 'function') {\n      return {\n        entries: entries,\n        startTime: startTime,\n        spanUrl: spanUrl\n      };\n    }\n    var observer = new PerformanceObserver(function (list) {\n      var perfObsEntries = list.getEntries();\n      perfObsEntries.forEach(function (entry) {\n        if (entry.initiatorType === 'fetch' && entry.name === spanUrl) {\n          entries.push(entry);\n        }\n      });\n    });\n    observer.observe({\n      entryTypes: ['resource']\n    });\n    return {\n      entries: entries,\n      observer: observer,\n      startTime: startTime,\n      spanUrl: spanUrl\n    };\n  };\n  /**\n   * implements enable function\n   */\n  FetchInstrumentation.prototype.enable = function () {\n    if (isWrapped(fetch)) {\n      this._unwrap(_globalThis, 'fetch');\n      this._diag.debug('removing previous patch for constructor');\n    }\n    this._wrap(_globalThis, 'fetch', this._patchConstructor());\n  };\n  /**\n   * implements unpatch function\n   */\n  FetchInstrumentation.prototype.disable = function () {\n    this._unwrap(_globalThis, 'fetch');\n    this._usedResources = new WeakSet();\n  };\n  return FetchInstrumentation;\n}(InstrumentationBase);\nexport { FetchInstrumentation };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","api","isWrapped","InstrumentationBase","safeExecuteInTheMiddle","core","web","AttributeNames","SemanticAttributes","VERSION","_globalThis","OBSERVER_WAIT_TIME_MS","FetchInstrumentation","_super","config","_this","component","version","moduleName","_usedResources","WeakSet","_tasksCount","init","_getConfig","_config","_addChildSpan","span","corsPreFlightRequest","childSpan","tracer","startSpan","startTime","PerformanceTimingNames","FETCH_START","trace","setSpan","context","active","ignoreNetworkEvents","addSpanNetworkEvents","end","RESPONSE_END","_addFinalSpanAttributes","response","parsedUrl","parseUrl","url","setAttribute","HTTP_STATUS_CODE","status","statusText","HTTP_STATUS_TEXT","HTTP_HOST","host","HTTP_SCHEME","protocol","replace","HTTP_USER_AGENT","navigator","userAgent","_addHeaders","options","spanUrl","shouldPropagateTraceHeaders","propagateTraceHeaderCorsUrls","headers","propagation","inject","keys","length","_diag","debug","Request","set","h","k","v","Headers","assign","_clearResources","clearTimingResources","performance","clearResourceTimings","_createSpan","_a","isUrlIgnored","ignoreUrls","method","toUpperCase","spanName","kind","SpanKind","CLIENT","attributes","COMPONENT","HTTP_METHOD","HTTP_URL","_findResourceAndAddNetworkEvents","resourcesObserver","endTime","resources","entries","getEntriesByType","resource","getResource","mainRequest","_markResourceAsUsed","add","_endSpan","spanData","hrTime","setTimeout","observer","disconnect","_patchConstructor","original","plugin","patchConstructor","args","_i","arguments","self","href","createdSpan","apply","_prepareSpanData","endSpanOnError","error","_applyAttributesAfterFetch","message","endSpanOnSuccess","onSuccess","resolve","resClone","clone","resClone4Hook_1","body","reader_1","getReader","read_1","read","then","done","onError","reject","Promise","with","bind","request","result","applyCustomAttributesOnSpan","PerformanceObserver","list","perfObsEntries","getEntries","forEach","entry","initiatorType","name","push","observe","entryTypes","enable","fetch","_unwrap","_wrap","disable"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/instrumentation-fetch/build/esm/fetch.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as api from '@opentelemetry/api';\nimport { isWrapped, InstrumentationBase, safeExecuteInTheMiddle, } from '@opentelemetry/instrumentation';\nimport * as core from '@opentelemetry/core';\nimport * as web from '@opentelemetry/sdk-trace-web';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { VERSION } from './version';\nimport { _globalThis } from '@opentelemetry/core';\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nvar OBSERVER_WAIT_TIME_MS = 300;\n/**\n * This class represents a fetch plugin for auto instrumentation\n */\nvar FetchInstrumentation = /** @class */ (function (_super) {\n    __extends(FetchInstrumentation, _super);\n    function FetchInstrumentation(config) {\n        var _this = _super.call(this, '@opentelemetry/instrumentation-fetch', VERSION, config) || this;\n        _this.component = 'fetch';\n        _this.version = VERSION;\n        _this.moduleName = _this.component;\n        _this._usedResources = new WeakSet();\n        _this._tasksCount = 0;\n        return _this;\n    }\n    FetchInstrumentation.prototype.init = function () { };\n    FetchInstrumentation.prototype._getConfig = function () {\n        return this._config;\n    };\n    /**\n     * Add cors pre flight child span\n     * @param span\n     * @param corsPreFlightRequest\n     */\n    FetchInstrumentation.prototype._addChildSpan = function (span, corsPreFlightRequest) {\n        var childSpan = this.tracer.startSpan('CORS Preflight', {\n            startTime: corsPreFlightRequest[web.PerformanceTimingNames.FETCH_START],\n        }, api.trace.setSpan(api.context.active(), span));\n        if (!this._getConfig().ignoreNetworkEvents) {\n            web.addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n        }\n        childSpan.end(corsPreFlightRequest[web.PerformanceTimingNames.RESPONSE_END]);\n    };\n    /**\n     * Adds more attributes to span just before ending it\n     * @param span\n     * @param response\n     */\n    FetchInstrumentation.prototype._addFinalSpanAttributes = function (span, response) {\n        var parsedUrl = web.parseUrl(response.url);\n        span.setAttribute(SemanticAttributes.HTTP_STATUS_CODE, response.status);\n        if (response.statusText != null) {\n            span.setAttribute(AttributeNames.HTTP_STATUS_TEXT, response.statusText);\n        }\n        span.setAttribute(SemanticAttributes.HTTP_HOST, parsedUrl.host);\n        span.setAttribute(SemanticAttributes.HTTP_SCHEME, parsedUrl.protocol.replace(':', ''));\n        span.setAttribute(SemanticAttributes.HTTP_USER_AGENT, navigator.userAgent);\n    };\n    /**\n     * Add headers\n     * @param options\n     * @param spanUrl\n     */\n    FetchInstrumentation.prototype._addHeaders = function (options, spanUrl) {\n        if (!web.shouldPropagateTraceHeaders(spanUrl, this._getConfig().propagateTraceHeaderCorsUrls)) {\n            var headers = {};\n            api.propagation.inject(api.context.active(), headers);\n            if (Object.keys(headers).length > 0) {\n                this._diag.debug('headers inject skipped due to CORS policy');\n            }\n            return;\n        }\n        if (options instanceof Request) {\n            api.propagation.inject(api.context.active(), options.headers, {\n                set: function (h, k, v) { return h.set(k, typeof v === 'string' ? v : String(v)); },\n            });\n        }\n        else if (options.headers instanceof Headers) {\n            api.propagation.inject(api.context.active(), options.headers, {\n                set: function (h, k, v) { return h.set(k, typeof v === 'string' ? v : String(v)); },\n            });\n        }\n        else {\n            var headers = {};\n            api.propagation.inject(api.context.active(), headers);\n            options.headers = Object.assign({}, headers, options.headers || {});\n        }\n    };\n    /**\n     * Clears the resource timings and all resources assigned with spans\n     *     when {@link FetchPluginConfig.clearTimingResources} is\n     *     set to true (default false)\n     * @private\n     */\n    FetchInstrumentation.prototype._clearResources = function () {\n        if (this._tasksCount === 0 && this._getConfig().clearTimingResources) {\n            performance.clearResourceTimings();\n            this._usedResources = new WeakSet();\n        }\n    };\n    /**\n     * Creates a new span\n     * @param url\n     * @param options\n     */\n    FetchInstrumentation.prototype._createSpan = function (url, options) {\n        var _a;\n        if (options === void 0) { options = {}; }\n        if (core.isUrlIgnored(url, this._getConfig().ignoreUrls)) {\n            this._diag.debug('ignoring span as url matches ignored url');\n            return;\n        }\n        var method = (options.method || 'GET').toUpperCase();\n        var spanName = \"HTTP \" + method;\n        return this.tracer.startSpan(spanName, {\n            kind: api.SpanKind.CLIENT,\n            attributes: (_a = {},\n                _a[AttributeNames.COMPONENT] = this.moduleName,\n                _a[SemanticAttributes.HTTP_METHOD] = method,\n                _a[SemanticAttributes.HTTP_URL] = url,\n                _a),\n        });\n    };\n    /**\n     * Finds appropriate resource and add network events to the span\n     * @param span\n     * @param resourcesObserver\n     * @param endTime\n     */\n    FetchInstrumentation.prototype._findResourceAndAddNetworkEvents = function (span, resourcesObserver, endTime) {\n        var resources = resourcesObserver.entries;\n        if (!resources.length) {\n            if (!performance.getEntriesByType) {\n                return;\n            }\n            // fallback - either Observer is not available or it took longer\n            // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n            // information\n            resources = performance.getEntriesByType('resource');\n        }\n        var resource = web.getResource(resourcesObserver.spanUrl, resourcesObserver.startTime, endTime, resources, this._usedResources, 'fetch');\n        if (resource.mainRequest) {\n            var mainRequest = resource.mainRequest;\n            this._markResourceAsUsed(mainRequest);\n            var corsPreFlightRequest = resource.corsPreFlightRequest;\n            if (corsPreFlightRequest) {\n                this._addChildSpan(span, corsPreFlightRequest);\n                this._markResourceAsUsed(corsPreFlightRequest);\n            }\n            if (!this._getConfig().ignoreNetworkEvents) {\n                web.addSpanNetworkEvents(span, mainRequest);\n            }\n        }\n    };\n    /**\n     * Marks certain [resource]{@link PerformanceResourceTiming} when information\n     * from this is used to add events to span.\n     * This is done to avoid reusing the same resource again for next span\n     * @param resource\n     */\n    FetchInstrumentation.prototype._markResourceAsUsed = function (resource) {\n        this._usedResources.add(resource);\n    };\n    /**\n     * Finish span, add attributes, network events etc.\n     * @param span\n     * @param spanData\n     * @param response\n     */\n    FetchInstrumentation.prototype._endSpan = function (span, spanData, response) {\n        var _this = this;\n        var endTime = core.hrTime();\n        this._addFinalSpanAttributes(span, response);\n        setTimeout(function () {\n            var _a;\n            (_a = spanData.observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n            _this._findResourceAndAddNetworkEvents(span, spanData, endTime);\n            _this._tasksCount--;\n            _this._clearResources();\n            span.end(endTime);\n        }, OBSERVER_WAIT_TIME_MS);\n    };\n    /**\n     * Patches the constructor of fetch\n     */\n    FetchInstrumentation.prototype._patchConstructor = function () {\n        var _this = this;\n        return function (original) {\n            var plugin = _this;\n            return function patchConstructor() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var self = this;\n                var url = web.parseUrl(args[0] instanceof Request ? args[0].url : args[0]).href;\n                var options = args[0] instanceof Request ? args[0] : args[1] || {};\n                var createdSpan = plugin._createSpan(url, options);\n                if (!createdSpan) {\n                    return original.apply(this, args);\n                }\n                var spanData = plugin._prepareSpanData(url);\n                function endSpanOnError(span, error) {\n                    plugin._applyAttributesAfterFetch(span, options, error);\n                    plugin._endSpan(span, spanData, {\n                        status: error.status || 0,\n                        statusText: error.message,\n                        url: url,\n                    });\n                }\n                function endSpanOnSuccess(span, response) {\n                    plugin._applyAttributesAfterFetch(span, options, response);\n                    if (response.status >= 200 && response.status < 400) {\n                        plugin._endSpan(span, spanData, response);\n                    }\n                    else {\n                        plugin._endSpan(span, spanData, {\n                            status: response.status,\n                            statusText: response.statusText,\n                            url: url,\n                        });\n                    }\n                }\n                function onSuccess(span, resolve, response) {\n                    try {\n                        var resClone = response.clone();\n                        var resClone4Hook_1 = response.clone();\n                        var body = resClone.body;\n                        if (body) {\n                            var reader_1 = body.getReader();\n                            var read_1 = function () {\n                                reader_1.read().then(function (_a) {\n                                    var done = _a.done;\n                                    if (done) {\n                                        endSpanOnSuccess(span, resClone4Hook_1);\n                                    }\n                                    else {\n                                        read_1();\n                                    }\n                                }, function (error) {\n                                    endSpanOnError(span, error);\n                                });\n                            };\n                            read_1();\n                        }\n                        else {\n                            // some older browsers don't have .body implemented\n                            endSpanOnSuccess(span, response);\n                        }\n                    }\n                    finally {\n                        resolve(response);\n                    }\n                }\n                function onError(span, reject, error) {\n                    try {\n                        endSpanOnError(span, error);\n                    }\n                    finally {\n                        reject(error);\n                    }\n                }\n                return new Promise(function (resolve, reject) {\n                    return api.context.with(api.trace.setSpan(api.context.active(), createdSpan), function () {\n                        plugin._addHeaders(options, url);\n                        plugin._tasksCount++;\n                        // TypeScript complains about arrow function captured a this typed as globalThis\n                        // ts(7041)\n                        return original\n                            .apply(self, options instanceof Request ? [options] : [url, options])\n                            .then(onSuccess.bind(self, createdSpan, resolve), onError.bind(self, createdSpan, reject));\n                    });\n                });\n            };\n        };\n    };\n    FetchInstrumentation.prototype._applyAttributesAfterFetch = function (span, request, result) {\n        var _this = this;\n        var applyCustomAttributesOnSpan = this._getConfig()\n            .applyCustomAttributesOnSpan;\n        if (applyCustomAttributesOnSpan) {\n            safeExecuteInTheMiddle(function () { return applyCustomAttributesOnSpan(span, request, result); }, function (error) {\n                if (!error) {\n                    return;\n                }\n                _this._diag.error('applyCustomAttributesOnSpan', error);\n            }, true);\n        }\n    };\n    /**\n     * Prepares a span data - needed later for matching appropriate network\n     *     resources\n     * @param spanUrl\n     */\n    FetchInstrumentation.prototype._prepareSpanData = function (spanUrl) {\n        var startTime = core.hrTime();\n        var entries = [];\n        if (typeof PerformanceObserver !== 'function') {\n            return { entries: entries, startTime: startTime, spanUrl: spanUrl };\n        }\n        var observer = new PerformanceObserver(function (list) {\n            var perfObsEntries = list.getEntries();\n            perfObsEntries.forEach(function (entry) {\n                if (entry.initiatorType === 'fetch' &&\n                    entry.name === spanUrl) {\n                    entries.push(entry);\n                }\n            });\n        });\n        observer.observe({\n            entryTypes: ['resource'],\n        });\n        return { entries: entries, observer: observer, startTime: startTime, spanUrl: spanUrl };\n    };\n    /**\n     * implements enable function\n     */\n    FetchInstrumentation.prototype.enable = function () {\n        if (isWrapped(fetch)) {\n            this._unwrap(_globalThis, 'fetch');\n            this._diag.debug('removing previous patch for constructor');\n        }\n        this._wrap(_globalThis, 'fetch', this._patchConstructor());\n    };\n    /**\n     * implements unpatch function\n     */\n    FetchInstrumentation.prototype.disable = function () {\n        this._unwrap(_globalThis, 'fetch');\n        this._usedResources = new WeakSet();\n    };\n    return FetchInstrumentation;\n}(InstrumentationBase));\nexport { FetchInstrumentation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}