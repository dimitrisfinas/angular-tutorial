{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.channelOptionsEqual = exports.recognizedOptions = void 0;\n/**\n * This is for checking provided options at runtime. This is an object for\n * easier membership checking.\n */\nexports.recognizedOptions = {\n  'grpc.ssl_target_name_override': true,\n  'grpc.primary_user_agent': true,\n  'grpc.secondary_user_agent': true,\n  'grpc.default_authority': true,\n  'grpc.keepalive_time_ms': true,\n  'grpc.keepalive_timeout_ms': true,\n  'grpc.keepalive_permit_without_calls': true,\n  'grpc.service_config': true,\n  'grpc.max_concurrent_streams': true,\n  'grpc.initial_reconnect_backoff_ms': true,\n  'grpc.max_reconnect_backoff_ms': true,\n  'grpc.use_local_subchannel_pool': true,\n  'grpc.max_send_message_length': true,\n  'grpc.max_receive_message_length': true,\n  'grpc.enable_http_proxy': true,\n  'grpc.enable_channelz': true,\n  'grpc.dns_min_time_between_resolutions_ms': true,\n  'grpc-node.max_session_memory': true\n};\nfunction channelOptionsEqual(options1, options2) {\n  const keys1 = Object.keys(options1).sort();\n  const keys2 = Object.keys(options2).sort();\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n  for (let i = 0; i < keys1.length; i += 1) {\n    if (keys1[i] !== keys2[i]) {\n      return false;\n    }\n    if (options1[keys1[i]] !== options2[keys2[i]]) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.channelOptionsEqual = channelOptionsEqual;","map":{"version":3,"names":["Object","defineProperty","exports","value","channelOptionsEqual","recognizedOptions","options1","options2","keys1","keys","sort","keys2","length","i"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@grpc/grpc-js/build/src/channel-options.js"],"sourcesContent":["\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.channelOptionsEqual = exports.recognizedOptions = void 0;\n/**\n * This is for checking provided options at runtime. This is an object for\n * easier membership checking.\n */\nexports.recognizedOptions = {\n    'grpc.ssl_target_name_override': true,\n    'grpc.primary_user_agent': true,\n    'grpc.secondary_user_agent': true,\n    'grpc.default_authority': true,\n    'grpc.keepalive_time_ms': true,\n    'grpc.keepalive_timeout_ms': true,\n    'grpc.keepalive_permit_without_calls': true,\n    'grpc.service_config': true,\n    'grpc.max_concurrent_streams': true,\n    'grpc.initial_reconnect_backoff_ms': true,\n    'grpc.max_reconnect_backoff_ms': true,\n    'grpc.use_local_subchannel_pool': true,\n    'grpc.max_send_message_length': true,\n    'grpc.max_receive_message_length': true,\n    'grpc.enable_http_proxy': true,\n    'grpc.enable_channelz': true,\n    'grpc.dns_min_time_between_resolutions_ms': true,\n    'grpc-node.max_session_memory': true,\n};\nfunction channelOptionsEqual(options1, options2) {\n    const keys1 = Object.keys(options1).sort();\n    const keys2 = Object.keys(options2).sort();\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (let i = 0; i < keys1.length; i += 1) {\n        if (keys1[i] !== keys2[i]) {\n            return false;\n        }\n        if (options1[keys1[i]] !== options2[keys2[i]]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.channelOptionsEqual = channelOptionsEqual;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAGF,OAAO,CAACG,iBAAiB,GAAG,KAAK,CAAC;AAChE;AACA;AACA;AACA;AACAH,OAAO,CAACG,iBAAiB,GAAG;EACxB,+BAA+B,EAAE,IAAI;EACrC,yBAAyB,EAAE,IAAI;EAC/B,2BAA2B,EAAE,IAAI;EACjC,wBAAwB,EAAE,IAAI;EAC9B,wBAAwB,EAAE,IAAI;EAC9B,2BAA2B,EAAE,IAAI;EACjC,qCAAqC,EAAE,IAAI;EAC3C,qBAAqB,EAAE,IAAI;EAC3B,6BAA6B,EAAE,IAAI;EACnC,mCAAmC,EAAE,IAAI;EACzC,+BAA+B,EAAE,IAAI;EACrC,gCAAgC,EAAE,IAAI;EACtC,8BAA8B,EAAE,IAAI;EACpC,iCAAiC,EAAE,IAAI;EACvC,wBAAwB,EAAE,IAAI;EAC9B,sBAAsB,EAAE,IAAI;EAC5B,0CAA0C,EAAE,IAAI;EAChD,8BAA8B,EAAE;AACpC,CAAC;AACD,SAASD,mBAAmB,CAACE,QAAQ,EAAEC,QAAQ,EAAE;EAC7C,MAAMC,KAAK,GAAGR,MAAM,CAACS,IAAI,CAACH,QAAQ,CAAC,CAACI,IAAI,EAAE;EAC1C,MAAMC,KAAK,GAAGX,MAAM,CAACS,IAAI,CAACF,QAAQ,CAAC,CAACG,IAAI,EAAE;EAC1C,IAAIF,KAAK,CAACI,MAAM,KAAKD,KAAK,CAACC,MAAM,EAAE;IAC/B,OAAO,KAAK;EAChB;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACI,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAE;IACtC,IAAIL,KAAK,CAACK,CAAC,CAAC,KAAKF,KAAK,CAACE,CAAC,CAAC,EAAE;MACvB,OAAO,KAAK;IAChB;IACA,IAAIP,QAAQ,CAACE,KAAK,CAACK,CAAC,CAAC,CAAC,KAAKN,QAAQ,CAACI,KAAK,CAACE,CAAC,CAAC,CAAC,EAAE;MAC3C,OAAO,KAAK;IAChB;EACJ;EACA,OAAO,IAAI;AACf;AACAX,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}