{"ast":null,"code":"import { hrTimeToNanoseconds } from '@opentelemetry/core';\nimport { toAttributes } from '../common/internal';\nimport * as core from '@opentelemetry/core';\nexport function sdkSpanToOtlpSpan(span, useHex) {\n  var ctx = span.spanContext();\n  var status = span.status;\n  var parentSpanId = useHex ? span.parentSpanId : span.parentSpanId != null ? core.hexToBase64(span.parentSpanId) : undefined;\n  return {\n    traceId: useHex ? ctx.traceId : core.hexToBase64(ctx.traceId),\n    spanId: useHex ? ctx.spanId : core.hexToBase64(ctx.spanId),\n    parentSpanId: parentSpanId,\n    name: span.name,\n    // Span kind is offset by 1 because the API does not define a value for unset\n    kind: span.kind == null ? 0 : span.kind + 1,\n    startTimeUnixNano: hrTimeToNanoseconds(span.startTime),\n    endTimeUnixNano: hrTimeToNanoseconds(span.endTime),\n    attributes: toAttributes(span.attributes),\n    droppedAttributesCount: 0,\n    events: span.events.map(toOtlpSpanEvent),\n    droppedEventsCount: 0,\n    status: {\n      // API and proto enums share the same values\n      code: status.code,\n      message: status.message\n    },\n    links: span.links.map(function (link) {\n      return toOtlpLink(link, useHex);\n    }),\n    droppedLinksCount: 0\n  };\n}\nexport function toOtlpLink(link, useHex) {\n  return {\n    attributes: link.attributes ? toAttributes(link.attributes) : [],\n    spanId: useHex ? link.context.spanId : core.hexToBase64(link.context.spanId),\n    traceId: useHex ? link.context.traceId : core.hexToBase64(link.context.traceId),\n    droppedAttributesCount: 0\n  };\n}\nexport function toOtlpSpanEvent(timedEvent) {\n  return {\n    attributes: timedEvent.attributes ? toAttributes(timedEvent.attributes) : [],\n    name: timedEvent.name,\n    timeUnixNano: hrTimeToNanoseconds(timedEvent.time),\n    droppedAttributesCount: 0\n  };\n}","map":{"version":3,"names":["hrTimeToNanoseconds","toAttributes","core","sdkSpanToOtlpSpan","span","useHex","ctx","spanContext","status","parentSpanId","hexToBase64","undefined","traceId","spanId","name","kind","startTimeUnixNano","startTime","endTimeUnixNano","endTime","attributes","droppedAttributesCount","events","map","toOtlpSpanEvent","droppedEventsCount","code","message","links","link","toOtlpLink","droppedLinksCount","context","timedEvent","timeUnixNano","time"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/otlp-transformer/build/esm/trace/internal.js"],"sourcesContent":["import { hrTimeToNanoseconds } from '@opentelemetry/core';\nimport { toAttributes } from '../common/internal';\nimport * as core from '@opentelemetry/core';\nexport function sdkSpanToOtlpSpan(span, useHex) {\n    var ctx = span.spanContext();\n    var status = span.status;\n    var parentSpanId = useHex ? span.parentSpanId : span.parentSpanId != null ? core.hexToBase64(span.parentSpanId) : undefined;\n    return {\n        traceId: useHex ? ctx.traceId : core.hexToBase64(ctx.traceId),\n        spanId: useHex ? ctx.spanId : core.hexToBase64(ctx.spanId),\n        parentSpanId: parentSpanId,\n        name: span.name,\n        // Span kind is offset by 1 because the API does not define a value for unset\n        kind: span.kind == null ? 0 : span.kind + 1,\n        startTimeUnixNano: hrTimeToNanoseconds(span.startTime),\n        endTimeUnixNano: hrTimeToNanoseconds(span.endTime),\n        attributes: toAttributes(span.attributes),\n        droppedAttributesCount: 0,\n        events: span.events.map(toOtlpSpanEvent),\n        droppedEventsCount: 0,\n        status: {\n            // API and proto enums share the same values\n            code: status.code,\n            message: status.message,\n        },\n        links: span.links.map(function (link) { return toOtlpLink(link, useHex); }),\n        droppedLinksCount: 0,\n    };\n}\nexport function toOtlpLink(link, useHex) {\n    return {\n        attributes: link.attributes ? toAttributes(link.attributes) : [],\n        spanId: useHex ? link.context.spanId : core.hexToBase64(link.context.spanId),\n        traceId: useHex ? link.context.traceId : core.hexToBase64(link.context.traceId),\n        droppedAttributesCount: 0,\n    };\n}\nexport function toOtlpSpanEvent(timedEvent) {\n    return {\n        attributes: timedEvent.attributes ? toAttributes(timedEvent.attributes) : [],\n        name: timedEvent.name,\n        timeUnixNano: hrTimeToNanoseconds(timedEvent.time),\n        droppedAttributesCount: 0,\n    };\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,YAAY,QAAQ,oBAAoB;AACjD,OAAO,KAAKC,IAAI,MAAM,qBAAqB;AAC3C,OAAO,SAASC,iBAAiB,CAACC,IAAI,EAAEC,MAAM,EAAE;EAC5C,IAAIC,GAAG,GAAGF,IAAI,CAACG,WAAW,EAAE;EAC5B,IAAIC,MAAM,GAAGJ,IAAI,CAACI,MAAM;EACxB,IAAIC,YAAY,GAAGJ,MAAM,GAAGD,IAAI,CAACK,YAAY,GAAGL,IAAI,CAACK,YAAY,IAAI,IAAI,GAAGP,IAAI,CAACQ,WAAW,CAACN,IAAI,CAACK,YAAY,CAAC,GAAGE,SAAS;EAC3H,OAAO;IACHC,OAAO,EAAEP,MAAM,GAAGC,GAAG,CAACM,OAAO,GAAGV,IAAI,CAACQ,WAAW,CAACJ,GAAG,CAACM,OAAO,CAAC;IAC7DC,MAAM,EAAER,MAAM,GAAGC,GAAG,CAACO,MAAM,GAAGX,IAAI,CAACQ,WAAW,CAACJ,GAAG,CAACO,MAAM,CAAC;IAC1DJ,YAAY,EAAEA,YAAY;IAC1BK,IAAI,EAAEV,IAAI,CAACU,IAAI;IACf;IACAC,IAAI,EAAEX,IAAI,CAACW,IAAI,IAAI,IAAI,GAAG,CAAC,GAAGX,IAAI,CAACW,IAAI,GAAG,CAAC;IAC3CC,iBAAiB,EAAEhB,mBAAmB,CAACI,IAAI,CAACa,SAAS,CAAC;IACtDC,eAAe,EAAElB,mBAAmB,CAACI,IAAI,CAACe,OAAO,CAAC;IAClDC,UAAU,EAAEnB,YAAY,CAACG,IAAI,CAACgB,UAAU,CAAC;IACzCC,sBAAsB,EAAE,CAAC;IACzBC,MAAM,EAAElB,IAAI,CAACkB,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC;IACxCC,kBAAkB,EAAE,CAAC;IACrBjB,MAAM,EAAE;MACJ;MACAkB,IAAI,EAAElB,MAAM,CAACkB,IAAI;MACjBC,OAAO,EAAEnB,MAAM,CAACmB;IACpB,CAAC;IACDC,KAAK,EAAExB,IAAI,CAACwB,KAAK,CAACL,GAAG,CAAC,UAAUM,IAAI,EAAE;MAAE,OAAOC,UAAU,CAACD,IAAI,EAAExB,MAAM,CAAC;IAAE,CAAC,CAAC;IAC3E0B,iBAAiB,EAAE;EACvB,CAAC;AACL;AACA,OAAO,SAASD,UAAU,CAACD,IAAI,EAAExB,MAAM,EAAE;EACrC,OAAO;IACHe,UAAU,EAAES,IAAI,CAACT,UAAU,GAAGnB,YAAY,CAAC4B,IAAI,CAACT,UAAU,CAAC,GAAG,EAAE;IAChEP,MAAM,EAAER,MAAM,GAAGwB,IAAI,CAACG,OAAO,CAACnB,MAAM,GAAGX,IAAI,CAACQ,WAAW,CAACmB,IAAI,CAACG,OAAO,CAACnB,MAAM,CAAC;IAC5ED,OAAO,EAAEP,MAAM,GAAGwB,IAAI,CAACG,OAAO,CAACpB,OAAO,GAAGV,IAAI,CAACQ,WAAW,CAACmB,IAAI,CAACG,OAAO,CAACpB,OAAO,CAAC;IAC/ES,sBAAsB,EAAE;EAC5B,CAAC;AACL;AACA,OAAO,SAASG,eAAe,CAACS,UAAU,EAAE;EACxC,OAAO;IACHb,UAAU,EAAEa,UAAU,CAACb,UAAU,GAAGnB,YAAY,CAACgC,UAAU,CAACb,UAAU,CAAC,GAAG,EAAE;IAC5EN,IAAI,EAAEmB,UAAU,CAACnB,IAAI;IACrBoB,YAAY,EAAElC,mBAAmB,CAACiC,UAAU,CAACE,IAAI,CAAC;IAClDd,sBAAsB,EAAE;EAC5B,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}