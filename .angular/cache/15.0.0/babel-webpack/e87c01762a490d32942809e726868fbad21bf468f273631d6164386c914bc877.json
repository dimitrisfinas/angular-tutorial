{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClientDuplexStreamImpl = exports.ClientWritableStreamImpl = exports.ClientReadableStreamImpl = exports.ClientUnaryCallImpl = exports.callErrorFromStatus = void 0;\nconst events_1 = require(\"events\");\nconst stream_1 = require(\"stream\");\nconst constants_1 = require(\"./constants\");\n/**\n * Construct a ServiceError from a StatusObject. This function exists primarily\n * as an attempt to make the error stack trace clearly communicate that the\n * error is not necessarily a problem in gRPC itself.\n * @param status\n */\nfunction callErrorFromStatus(status, callerStack) {\n  const message = `${status.code} ${constants_1.Status[status.code]}: ${status.details}`;\n  const error = new Error(message);\n  const stack = `${error.stack}\\nfor call at\\n${callerStack}`;\n  return Object.assign(new Error(message), status, {\n    stack\n  });\n}\nexports.callErrorFromStatus = callErrorFromStatus;\nclass ClientUnaryCallImpl extends events_1.EventEmitter {\n  constructor() {\n    super();\n  }\n  cancel() {\n    var _a;\n    (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n  }\n  getPeer() {\n    var _a, _b;\n    return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n  }\n}\nexports.ClientUnaryCallImpl = ClientUnaryCallImpl;\nclass ClientReadableStreamImpl extends stream_1.Readable {\n  constructor(deserialize) {\n    super({\n      objectMode: true\n    });\n    this.deserialize = deserialize;\n  }\n  cancel() {\n    var _a;\n    (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n  }\n  getPeer() {\n    var _a, _b;\n    return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n  }\n  _read(_size) {\n    var _a;\n    (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n  }\n}\nexports.ClientReadableStreamImpl = ClientReadableStreamImpl;\nclass ClientWritableStreamImpl extends stream_1.Writable {\n  constructor(serialize) {\n    super({\n      objectMode: true\n    });\n    this.serialize = serialize;\n  }\n  cancel() {\n    var _a;\n    (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n  }\n  getPeer() {\n    var _a, _b;\n    return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n  }\n  _write(chunk, encoding, cb) {\n    var _a;\n    const context = {\n      callback: cb\n    };\n    const flags = Number(encoding);\n    if (!Number.isNaN(flags)) {\n      context.flags = flags;\n    }\n    (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n  }\n  _final(cb) {\n    var _a;\n    (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n    cb();\n  }\n}\nexports.ClientWritableStreamImpl = ClientWritableStreamImpl;\nclass ClientDuplexStreamImpl extends stream_1.Duplex {\n  constructor(serialize, deserialize) {\n    super({\n      objectMode: true\n    });\n    this.serialize = serialize;\n    this.deserialize = deserialize;\n  }\n  cancel() {\n    var _a;\n    (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n  }\n  getPeer() {\n    var _a, _b;\n    return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n  }\n  _read(_size) {\n    var _a;\n    (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n  }\n  _write(chunk, encoding, cb) {\n    var _a;\n    const context = {\n      callback: cb\n    };\n    const flags = Number(encoding);\n    if (!Number.isNaN(flags)) {\n      context.flags = flags;\n    }\n    (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n  }\n  _final(cb) {\n    var _a;\n    (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n    cb();\n  }\n}\nexports.ClientDuplexStreamImpl = ClientDuplexStreamImpl;","map":{"version":3,"names":["Object","defineProperty","exports","value","ClientDuplexStreamImpl","ClientWritableStreamImpl","ClientReadableStreamImpl","ClientUnaryCallImpl","callErrorFromStatus","events_1","require","stream_1","constants_1","status","callerStack","message","code","Status","details","error","Error","stack","assign","EventEmitter","constructor","cancel","_a","call","cancelWithStatus","CANCELLED","getPeer","_b","Readable","deserialize","objectMode","_read","_size","startRead","Writable","serialize","_write","chunk","encoding","cb","context","callback","flags","Number","isNaN","sendMessageWithContext","_final","halfClose","Duplex"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@grpc/grpc-js/build/src/call.js"],"sourcesContent":["\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientDuplexStreamImpl = exports.ClientWritableStreamImpl = exports.ClientReadableStreamImpl = exports.ClientUnaryCallImpl = exports.callErrorFromStatus = void 0;\nconst events_1 = require(\"events\");\nconst stream_1 = require(\"stream\");\nconst constants_1 = require(\"./constants\");\n/**\n * Construct a ServiceError from a StatusObject. This function exists primarily\n * as an attempt to make the error stack trace clearly communicate that the\n * error is not necessarily a problem in gRPC itself.\n * @param status\n */\nfunction callErrorFromStatus(status, callerStack) {\n    const message = `${status.code} ${constants_1.Status[status.code]}: ${status.details}`;\n    const error = new Error(message);\n    const stack = `${error.stack}\\nfor call at\\n${callerStack}`;\n    return Object.assign(new Error(message), status, { stack });\n}\nexports.callErrorFromStatus = callErrorFromStatus;\nclass ClientUnaryCallImpl extends events_1.EventEmitter {\n    constructor() {\n        super();\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n}\nexports.ClientUnaryCallImpl = ClientUnaryCallImpl;\nclass ClientReadableStreamImpl extends stream_1.Readable {\n    constructor(deserialize) {\n        super({ objectMode: true });\n        this.deserialize = deserialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _read(_size) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n    }\n}\nexports.ClientReadableStreamImpl = ClientReadableStreamImpl;\nclass ClientWritableStreamImpl extends stream_1.Writable {\n    constructor(serialize) {\n        super({ objectMode: true });\n        this.serialize = serialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _write(chunk, encoding, cb) {\n        var _a;\n        const context = {\n            callback: cb,\n        };\n        const flags = Number(encoding);\n        if (!Number.isNaN(flags)) {\n            context.flags = flags;\n        }\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n    }\n    _final(cb) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n        cb();\n    }\n}\nexports.ClientWritableStreamImpl = ClientWritableStreamImpl;\nclass ClientDuplexStreamImpl extends stream_1.Duplex {\n    constructor(serialize, deserialize) {\n        super({ objectMode: true });\n        this.serialize = serialize;\n        this.deserialize = deserialize;\n    }\n    cancel() {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.cancelWithStatus(constants_1.Status.CANCELLED, 'Cancelled on client');\n    }\n    getPeer() {\n        var _a, _b;\n        return (_b = (_a = this.call) === null || _a === void 0 ? void 0 : _a.getPeer()) !== null && _b !== void 0 ? _b : 'unknown';\n    }\n    _read(_size) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.startRead();\n    }\n    _write(chunk, encoding, cb) {\n        var _a;\n        const context = {\n            callback: cb,\n        };\n        const flags = Number(encoding);\n        if (!Number.isNaN(flags)) {\n            context.flags = flags;\n        }\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.sendMessageWithContext(context, chunk);\n    }\n    _final(cb) {\n        var _a;\n        (_a = this.call) === null || _a === void 0 ? void 0 : _a.halfClose();\n        cb();\n    }\n}\nexports.ClientDuplexStreamImpl = ClientDuplexStreamImpl;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}