{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PerformanceTimingNames as PTN } from './enums/PerformanceTimingNames';\nimport { hrTimeToNanoseconds, timeInputToHrTime, urlMatches } from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n// Used to normalize relative URLs\nvar urlNormalizingAnchor;\nfunction getUrlNormalizingAnchor() {\n  if (!urlNormalizingAnchor) {\n    urlNormalizingAnchor = document.createElement('a');\n  }\n  return urlNormalizingAnchor;\n}\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasKey(obj, key) {\n  return key in obj;\n}\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n */\nexport function addSpanNetworkEvent(span, performanceName, entries) {\n  if (hasKey(entries, performanceName) && typeof entries[performanceName] === 'number') {\n    span.addEvent(performanceName, entries[performanceName]);\n    return span;\n  }\n  return undefined;\n}\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nexport function addSpanNetworkEvents(span, resource) {\n  addSpanNetworkEvent(span, PTN.FETCH_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_END, resource);\n  addSpanNetworkEvent(span, PTN.CONNECT_START, resource);\n  addSpanNetworkEvent(span, PTN.SECURE_CONNECTION_START, resource);\n  addSpanNetworkEvent(span, PTN.CONNECT_END, resource);\n  addSpanNetworkEvent(span, PTN.REQUEST_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_END, resource);\n  var encodedLength = resource[PTN.ENCODED_BODY_SIZE];\n  if (encodedLength !== undefined) {\n    span.setAttribute(SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH, encodedLength);\n  }\n  var decodedLength = resource[PTN.DECODED_BODY_SIZE];\n  // Spec: Not set if transport encoding not used (in which case encoded and decoded sizes match)\n  if (decodedLength !== undefined && encodedLength !== decodedLength) {\n    span.setAttribute(SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED, decodedLength);\n  }\n}\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nexport function sortResources(filteredResources) {\n  return filteredResources.slice().sort(function (a, b) {\n    var valueA = a[PTN.FETCH_START];\n    var valueB = b[PTN.FETCH_START];\n    if (valueA > valueB) {\n      return 1;\n    } else if (valueA < valueB) {\n      return -1;\n    }\n    return 0;\n  });\n}\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nexport function getResource(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType) {\n  if (ignoredResources === void 0) {\n    ignoredResources = new WeakSet();\n  }\n  // de-relativize the URL before usage (does no harm to absolute URLs)\n  var parsedSpanUrl = parseUrl(spanUrl);\n  spanUrl = parsedSpanUrl.toString();\n  var filteredResources = filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType);\n  if (filteredResources.length === 0) {\n    return {\n      mainRequest: undefined\n    };\n  }\n  if (filteredResources.length === 1) {\n    return {\n      mainRequest: filteredResources[0]\n    };\n  }\n  var sorted = sortResources(filteredResources);\n  if (parsedSpanUrl.origin !== location.origin && sorted.length > 1) {\n    var corsPreFlightRequest = sorted[0];\n    var mainRequest = findMainRequest(sorted, corsPreFlightRequest[PTN.RESPONSE_END], endTimeHR);\n    var responseEnd = corsPreFlightRequest[PTN.RESPONSE_END];\n    var fetchStart = mainRequest[PTN.FETCH_START];\n    // no corsPreFlightRequest\n    if (fetchStart < responseEnd) {\n      mainRequest = corsPreFlightRequest;\n      corsPreFlightRequest = undefined;\n    }\n    return {\n      corsPreFlightRequest: corsPreFlightRequest,\n      mainRequest: mainRequest\n    };\n  } else {\n    return {\n      mainRequest: filteredResources[0]\n    };\n  }\n}\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(resources, corsPreFlightRequestEndTime, spanEndTimeHR) {\n  var spanEndTime = hrTimeToNanoseconds(spanEndTimeHR);\n  var minTime = hrTimeToNanoseconds(timeInputToHrTime(corsPreFlightRequestEndTime));\n  var mainRequest = resources[1];\n  var bestGap;\n  var length = resources.length;\n  for (var i = 1; i < length; i++) {\n    var resource = resources[i];\n    var resourceStartTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.FETCH_START]));\n    var resourceEndTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.RESPONSE_END]));\n    var currentGap = spanEndTime - resourceEndTime;\n    if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n      bestGap = currentGap;\n      mainRequest = resource;\n    }\n  }\n  return mainRequest;\n}\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType) {\n  var startTime = hrTimeToNanoseconds(startTimeHR);\n  var endTime = hrTimeToNanoseconds(endTimeHR);\n  var filteredResources = resources.filter(function (resource) {\n    var resourceStartTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.FETCH_START]));\n    var resourceEndTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.RESPONSE_END]));\n    return resource.initiatorType.toLowerCase() === (initiatorType || 'xmlhttprequest') && resource.name === spanUrl && resourceStartTime >= startTime && resourceEndTime <= endTime;\n  });\n  if (filteredResources.length > 0) {\n    filteredResources = filteredResources.filter(function (resource) {\n      return !ignoredResources.has(resource);\n    });\n  }\n  return filteredResources;\n}\n/**\n * Parses url using URL constructor or fallback to anchor element.\n * @param url\n */\nexport function parseUrl(url) {\n  if (typeof URL === 'function') {\n    return new URL(url, location.href);\n  }\n  var element = getUrlNormalizingAnchor();\n  element.href = url;\n  return element;\n}\n/**\n * Parses url using URL constructor or fallback to anchor element and serialize\n * it to a string.\n *\n * Performs the steps described in https://html.spec.whatwg.org/multipage/urls-and-fetching.html#parse-a-url\n *\n * @param url\n */\nexport function normalizeUrl(url) {\n  var urlLike = parseUrl(url);\n  return urlLike.href;\n}\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function getElementXPath(target, optimised) {\n  if (target.nodeType === Node.DOCUMENT_NODE) {\n    return '/';\n  }\n  var targetValue = getNodeValue(target, optimised);\n  if (optimised && targetValue.indexOf('@id') > 0) {\n    return targetValue;\n  }\n  var xpath = '';\n  if (target.parentNode) {\n    xpath += getElementXPath(target.parentNode, false);\n  }\n  xpath += targetValue;\n  return xpath;\n}\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target) {\n  if (!target.parentNode) {\n    return 0;\n  }\n  var allowedTypes = [target.nodeType];\n  if (target.nodeType === Node.CDATA_SECTION_NODE) {\n    allowedTypes.push(Node.TEXT_NODE);\n  }\n  var elements = Array.from(target.parentNode.childNodes);\n  elements = elements.filter(function (element) {\n    var localName = element.localName;\n    return allowedTypes.indexOf(element.nodeType) >= 0 && localName === target.localName;\n  });\n  if (elements.length >= 1) {\n    return elements.indexOf(target) + 1; // xpath starts from 1\n  }\n  // if there are no other similar child xpath doesn't need index\n  return 0;\n}\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target, optimised) {\n  var nodeType = target.nodeType;\n  var index = getNodeIndex(target);\n  var nodeValue = '';\n  if (nodeType === Node.ELEMENT_NODE) {\n    var id = target.getAttribute('id');\n    if (optimised && id) {\n      return \"//*[@id=\\\"\" + id + \"\\\"]\";\n    }\n    nodeValue = target.localName;\n  } else if (nodeType === Node.TEXT_NODE || nodeType === Node.CDATA_SECTION_NODE) {\n    nodeValue = 'text()';\n  } else if (nodeType === Node.COMMENT_NODE) {\n    nodeValue = 'comment()';\n  } else {\n    return '';\n  }\n  // if index is 1 it can be omitted in xpath\n  if (nodeValue && index > 1) {\n    return \"/\" + nodeValue + \"[\" + index + \"]\";\n  }\n  return \"/\" + nodeValue;\n}\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nexport function shouldPropagateTraceHeaders(spanUrl, propagateTraceHeaderCorsUrls) {\n  var propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n  if (typeof propagateTraceHeaderUrls === 'string' || propagateTraceHeaderUrls instanceof RegExp) {\n    propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n  }\n  var parsedSpanUrl = parseUrl(spanUrl);\n  if (parsedSpanUrl.origin === location.origin) {\n    return true;\n  } else {\n    return propagateTraceHeaderUrls.some(function (propagateTraceHeaderUrl) {\n      return urlMatches(spanUrl, propagateTraceHeaderUrl);\n    });\n  }\n}","map":{"version":3,"names":["PerformanceTimingNames","PTN","hrTimeToNanoseconds","timeInputToHrTime","urlMatches","SemanticAttributes","urlNormalizingAnchor","getUrlNormalizingAnchor","document","createElement","hasKey","obj","key","addSpanNetworkEvent","span","performanceName","entries","addEvent","undefined","addSpanNetworkEvents","resource","FETCH_START","DOMAIN_LOOKUP_START","DOMAIN_LOOKUP_END","CONNECT_START","SECURE_CONNECTION_START","CONNECT_END","REQUEST_START","RESPONSE_START","RESPONSE_END","encodedLength","ENCODED_BODY_SIZE","setAttribute","HTTP_RESPONSE_CONTENT_LENGTH","decodedLength","DECODED_BODY_SIZE","HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED","sortResources","filteredResources","slice","sort","a","b","valueA","valueB","getResource","spanUrl","startTimeHR","endTimeHR","resources","ignoredResources","initiatorType","WeakSet","parsedSpanUrl","parseUrl","toString","filterResourcesForSpan","length","mainRequest","sorted","origin","location","corsPreFlightRequest","findMainRequest","responseEnd","fetchStart","corsPreFlightRequestEndTime","spanEndTimeHR","spanEndTime","minTime","bestGap","i","resourceStartTime","resourceEndTime","currentGap","startTime","endTime","filter","toLowerCase","name","has","url","URL","href","element","normalizeUrl","urlLike","getElementXPath","target","optimised","nodeType","Node","DOCUMENT_NODE","targetValue","getNodeValue","indexOf","xpath","parentNode","getNodeIndex","allowedTypes","CDATA_SECTION_NODE","push","TEXT_NODE","elements","Array","from","childNodes","localName","index","nodeValue","ELEMENT_NODE","id","getAttribute","COMMENT_NODE","shouldPropagateTraceHeaders","propagateTraceHeaderCorsUrls","propagateTraceHeaderUrls","RegExp","some","propagateTraceHeaderUrl"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/sdk-trace-web/build/esm/utils.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PerformanceTimingNames as PTN } from './enums/PerformanceTimingNames';\nimport { hrTimeToNanoseconds, timeInputToHrTime, urlMatches, } from '@opentelemetry/core';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n// Used to normalize relative URLs\nvar urlNormalizingAnchor;\nfunction getUrlNormalizingAnchor() {\n    if (!urlNormalizingAnchor) {\n        urlNormalizingAnchor = document.createElement('a');\n    }\n    return urlNormalizingAnchor;\n}\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasKey(obj, key) {\n    return key in obj;\n}\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n */\nexport function addSpanNetworkEvent(span, performanceName, entries) {\n    if (hasKey(entries, performanceName) &&\n        typeof entries[performanceName] === 'number') {\n        span.addEvent(performanceName, entries[performanceName]);\n        return span;\n    }\n    return undefined;\n}\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nexport function addSpanNetworkEvents(span, resource) {\n    addSpanNetworkEvent(span, PTN.FETCH_START, resource);\n    addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_START, resource);\n    addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_END, resource);\n    addSpanNetworkEvent(span, PTN.CONNECT_START, resource);\n    addSpanNetworkEvent(span, PTN.SECURE_CONNECTION_START, resource);\n    addSpanNetworkEvent(span, PTN.CONNECT_END, resource);\n    addSpanNetworkEvent(span, PTN.REQUEST_START, resource);\n    addSpanNetworkEvent(span, PTN.RESPONSE_START, resource);\n    addSpanNetworkEvent(span, PTN.RESPONSE_END, resource);\n    var encodedLength = resource[PTN.ENCODED_BODY_SIZE];\n    if (encodedLength !== undefined) {\n        span.setAttribute(SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH, encodedLength);\n    }\n    var decodedLength = resource[PTN.DECODED_BODY_SIZE];\n    // Spec: Not set if transport encoding not used (in which case encoded and decoded sizes match)\n    if (decodedLength !== undefined && encodedLength !== decodedLength) {\n        span.setAttribute(SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED, decodedLength);\n    }\n}\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nexport function sortResources(filteredResources) {\n    return filteredResources.slice().sort(function (a, b) {\n        var valueA = a[PTN.FETCH_START];\n        var valueB = b[PTN.FETCH_START];\n        if (valueA > valueB) {\n            return 1;\n        }\n        else if (valueA < valueB) {\n            return -1;\n        }\n        return 0;\n    });\n}\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nexport function getResource(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType) {\n    if (ignoredResources === void 0) { ignoredResources = new WeakSet(); }\n    // de-relativize the URL before usage (does no harm to absolute URLs)\n    var parsedSpanUrl = parseUrl(spanUrl);\n    spanUrl = parsedSpanUrl.toString();\n    var filteredResources = filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType);\n    if (filteredResources.length === 0) {\n        return {\n            mainRequest: undefined,\n        };\n    }\n    if (filteredResources.length === 1) {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n    var sorted = sortResources(filteredResources);\n    if (parsedSpanUrl.origin !== location.origin && sorted.length > 1) {\n        var corsPreFlightRequest = sorted[0];\n        var mainRequest = findMainRequest(sorted, corsPreFlightRequest[PTN.RESPONSE_END], endTimeHR);\n        var responseEnd = corsPreFlightRequest[PTN.RESPONSE_END];\n        var fetchStart = mainRequest[PTN.FETCH_START];\n        // no corsPreFlightRequest\n        if (fetchStart < responseEnd) {\n            mainRequest = corsPreFlightRequest;\n            corsPreFlightRequest = undefined;\n        }\n        return {\n            corsPreFlightRequest: corsPreFlightRequest,\n            mainRequest: mainRequest,\n        };\n    }\n    else {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n}\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(resources, corsPreFlightRequestEndTime, spanEndTimeHR) {\n    var spanEndTime = hrTimeToNanoseconds(spanEndTimeHR);\n    var minTime = hrTimeToNanoseconds(timeInputToHrTime(corsPreFlightRequestEndTime));\n    var mainRequest = resources[1];\n    var bestGap;\n    var length = resources.length;\n    for (var i = 1; i < length; i++) {\n        var resource = resources[i];\n        var resourceStartTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.FETCH_START]));\n        var resourceEndTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.RESPONSE_END]));\n        var currentGap = spanEndTime - resourceEndTime;\n        if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n            bestGap = currentGap;\n            mainRequest = resource;\n        }\n    }\n    return mainRequest;\n}\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType) {\n    var startTime = hrTimeToNanoseconds(startTimeHR);\n    var endTime = hrTimeToNanoseconds(endTimeHR);\n    var filteredResources = resources.filter(function (resource) {\n        var resourceStartTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.FETCH_START]));\n        var resourceEndTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.RESPONSE_END]));\n        return (resource.initiatorType.toLowerCase() ===\n            (initiatorType || 'xmlhttprequest') &&\n            resource.name === spanUrl &&\n            resourceStartTime >= startTime &&\n            resourceEndTime <= endTime);\n    });\n    if (filteredResources.length > 0) {\n        filteredResources = filteredResources.filter(function (resource) {\n            return !ignoredResources.has(resource);\n        });\n    }\n    return filteredResources;\n}\n/**\n * Parses url using URL constructor or fallback to anchor element.\n * @param url\n */\nexport function parseUrl(url) {\n    if (typeof URL === 'function') {\n        return new URL(url, location.href);\n    }\n    var element = getUrlNormalizingAnchor();\n    element.href = url;\n    return element;\n}\n/**\n * Parses url using URL constructor or fallback to anchor element and serialize\n * it to a string.\n *\n * Performs the steps described in https://html.spec.whatwg.org/multipage/urls-and-fetching.html#parse-a-url\n *\n * @param url\n */\nexport function normalizeUrl(url) {\n    var urlLike = parseUrl(url);\n    return urlLike.href;\n}\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function getElementXPath(target, optimised) {\n    if (target.nodeType === Node.DOCUMENT_NODE) {\n        return '/';\n    }\n    var targetValue = getNodeValue(target, optimised);\n    if (optimised && targetValue.indexOf('@id') > 0) {\n        return targetValue;\n    }\n    var xpath = '';\n    if (target.parentNode) {\n        xpath += getElementXPath(target.parentNode, false);\n    }\n    xpath += targetValue;\n    return xpath;\n}\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target) {\n    if (!target.parentNode) {\n        return 0;\n    }\n    var allowedTypes = [target.nodeType];\n    if (target.nodeType === Node.CDATA_SECTION_NODE) {\n        allowedTypes.push(Node.TEXT_NODE);\n    }\n    var elements = Array.from(target.parentNode.childNodes);\n    elements = elements.filter(function (element) {\n        var localName = element.localName;\n        return (allowedTypes.indexOf(element.nodeType) >= 0 &&\n            localName === target.localName);\n    });\n    if (elements.length >= 1) {\n        return elements.indexOf(target) + 1; // xpath starts from 1\n    }\n    // if there are no other similar child xpath doesn't need index\n    return 0;\n}\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target, optimised) {\n    var nodeType = target.nodeType;\n    var index = getNodeIndex(target);\n    var nodeValue = '';\n    if (nodeType === Node.ELEMENT_NODE) {\n        var id = target.getAttribute('id');\n        if (optimised && id) {\n            return \"//*[@id=\\\"\" + id + \"\\\"]\";\n        }\n        nodeValue = target.localName;\n    }\n    else if (nodeType === Node.TEXT_NODE ||\n        nodeType === Node.CDATA_SECTION_NODE) {\n        nodeValue = 'text()';\n    }\n    else if (nodeType === Node.COMMENT_NODE) {\n        nodeValue = 'comment()';\n    }\n    else {\n        return '';\n    }\n    // if index is 1 it can be omitted in xpath\n    if (nodeValue && index > 1) {\n        return \"/\" + nodeValue + \"[\" + index + \"]\";\n    }\n    return \"/\" + nodeValue;\n}\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nexport function shouldPropagateTraceHeaders(spanUrl, propagateTraceHeaderCorsUrls) {\n    var propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n    if (typeof propagateTraceHeaderUrls === 'string' ||\n        propagateTraceHeaderUrls instanceof RegExp) {\n        propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n    }\n    var parsedSpanUrl = parseUrl(spanUrl);\n    if (parsedSpanUrl.origin === location.origin) {\n        return true;\n    }\n    else {\n        return propagateTraceHeaderUrls.some(function (propagateTraceHeaderUrl) {\n            return urlMatches(spanUrl, propagateTraceHeaderUrl);\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}