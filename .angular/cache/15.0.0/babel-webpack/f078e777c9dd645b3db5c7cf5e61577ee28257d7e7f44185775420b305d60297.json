{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER } from './NoopMeter';\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nvar NoopMeterProvider = /** @class */function () {\n  function NoopMeterProvider() {}\n  NoopMeterProvider.prototype.getMeter = function (_name, _version, _options) {\n    return NOOP_METER;\n  };\n  return NoopMeterProvider;\n}();\nexport { NoopMeterProvider };\nexport var NOOP_METER_PROVIDER = new NoopMeterProvider();","map":{"version":3,"names":["NOOP_METER","NoopMeterProvider","prototype","getMeter","_name","_version","_options","NOOP_METER_PROVIDER"],"sources":["/Users/dimitris.finas/node_modules/@opentelemetry/api-metrics/build/esm/NoopMeterProvider.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER } from './NoopMeter';\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nvar NoopMeterProvider = /** @class */ (function () {\n    function NoopMeterProvider() {\n    }\n    NoopMeterProvider.prototype.getMeter = function (_name, _version, _options) {\n        return NOOP_METER;\n    };\n    return NoopMeterProvider;\n}());\nexport { NoopMeterProvider };\nexport var NOOP_METER_PROVIDER = new NoopMeterProvider();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,aAAa;AACxC;AACA;AACA;AACA;AACA,IAAIC,iBAAiB,GAAG,aAAe,YAAY;EAC/C,SAASA,iBAAiB,GAAG,CAC7B;EACAA,iBAAiB,CAACC,SAAS,CAACC,QAAQ,GAAG,UAAUC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IACxE,OAAON,UAAU;EACrB,CAAC;EACD,OAAOC,iBAAiB;AAC5B,CAAC,EAAG;AACJ,SAASA,iBAAiB;AAC1B,OAAO,IAAIM,mBAAmB,GAAG,IAAIN,iBAAiB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}