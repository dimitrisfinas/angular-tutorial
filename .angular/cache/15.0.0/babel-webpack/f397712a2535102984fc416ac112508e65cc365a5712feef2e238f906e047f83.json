{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal interface.\n */\nvar MultiMetricStorage = /** @class */function () {\n  function MultiMetricStorage(_backingStorages) {\n    this._backingStorages = _backingStorages;\n  }\n  MultiMetricStorage.prototype.record = function (value, attributes, context, recordTime) {\n    this._backingStorages.forEach(function (it) {\n      it.record(value, attributes, context, recordTime);\n    });\n  };\n  return MultiMetricStorage;\n}();\nexport { MultiMetricStorage };","map":{"version":3,"names":["MultiMetricStorage","_backingStorages","prototype","record","value","attributes","context","recordTime","forEach","it"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/sdk-metrics/build/esm/state/MultiWritableMetricStorage.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal interface.\n */\nvar MultiMetricStorage = /** @class */ (function () {\n    function MultiMetricStorage(_backingStorages) {\n        this._backingStorages = _backingStorages;\n    }\n    MultiMetricStorage.prototype.record = function (value, attributes, context, recordTime) {\n        this._backingStorages.forEach(function (it) {\n            it.record(value, attributes, context, recordTime);\n        });\n    };\n    return MultiMetricStorage;\n}());\nexport { MultiMetricStorage };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,kBAAkB,GAAG,aAAe,YAAY;EAChD,SAASA,kBAAkB,CAACC,gBAAgB,EAAE;IAC1C,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;EAC5C;EACAD,kBAAkB,CAACE,SAAS,CAACC,MAAM,GAAG,UAAUC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,UAAU,EAAE;IACpF,IAAI,CAACN,gBAAgB,CAACO,OAAO,CAAC,UAAUC,EAAE,EAAE;MACxCA,EAAE,CAACN,MAAM,CAACC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,UAAU,CAAC;IACrD,CAAC,CAAC;EACN,CAAC;EACD,OAAOP,kBAAkB;AAC7B,CAAC,EAAG;AACJ,SAASA,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}