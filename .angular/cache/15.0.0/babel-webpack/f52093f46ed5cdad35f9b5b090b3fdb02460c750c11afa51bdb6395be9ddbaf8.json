{"ast":null,"code":"import _asyncToGenerator from \"/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CompositePropagator, W3CBaggagePropagator, W3CTraceContextPropagator } from '@opentelemetry/core';\nimport { WebTracerProvider } from '@opentelemetry/sdk-trace-web';\nimport { ConsoleSpanExporter, SimpleSpanProcessor } from '@opentelemetry/sdk-trace-base';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { getWebAutoInstrumentations } from '@opentelemetry/auto-instrumentations-web';\nimport { Resource } from '@opentelemetry/resources';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { environment } from './../../environments/environment';\nconst FrontendTracer = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {\n    const {\n      ZoneContextManager\n    } = yield import('@opentelemetry/context-zone');\n    const provider = new WebTracerProvider({\n      resource: new Resource({\n        [SemanticResourceAttributes.SERVICE_NAME]: environment.OTEL_SERVICE_NAME\n      })\n    });\n    const traceExporter = new ConsoleSpanExporter();\n    //const traceExporter = new OTLPTraceExporter();\n    /* const traceExporter = new OTLPTraceExporter({\n      url: 'https://ingest.lightstep.com:443',\n      headers: {\n        'lightstep-access-token':\n          'dgWk8TFEi+CX+1fTzgWJdvljm9K20CjpWINXAyudQ8qXgyYCQpK3VgeH/0hdfOmcdukuMkk1/o4Mr7f0R5wyzDf8RaMXtGZY/lfzZVzm',\n      },\n    });\n    */\n    provider.addSpanProcessor(new SimpleSpanProcessor(traceExporter));\n    const contextManager = new ZoneContextManager();\n    provider.register({\n      contextManager,\n      propagator: new CompositePropagator({\n        propagators: [new W3CBaggagePropagator(), new W3CTraceContextPropagator()]\n      })\n    });\n    registerInstrumentations({\n      tracerProvider: provider,\n      instrumentations: [getWebAutoInstrumentations({\n        '@opentelemetry/instrumentation-fetch': {\n          propagateTraceHeaderCorsUrls: /.*/,\n          clearTimingResources: true\n        }\n      })]\n    });\n  });\n  return function FrontendTracer() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default FrontendTracer;","map":{"version":3,"mappings":";AAAA,SACEA,mBAAmB,EACnBC,oBAAoB,EACpBC,yBAAyB,QACpB,qBAAqB;AAC5B,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,SACEC,mBAAmB,EACnBC,mBAAmB,QACd,+BAA+B;AACtC,SAASC,wBAAwB,QAAQ,gCAAgC;AACzE,SAASC,0BAA0B,QAAQ,0CAA0C;AACrF,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,0BAA0B,QAAQ,qCAAqC;AAGhF,SAASC,WAAW,QAAQ,kCAAkC;AAE9D,MAAMC,cAAc;EAAA,6BAAG,aAAW;IAChC,MAAM;MAAEC;IAAkB,CAAE,SAAS,MAAM,CAAC,6BAA6B,CAAC;IAE1E,MAAMC,QAAQ,GAAG,IAAIV,iBAAiB,CAAC;MACrCW,QAAQ,EAAE,IAAIN,QAAQ,CAAC;QACrB,CAACC,0BAA0B,CAACM,YAAY,GAAGL,WAAW,CAACM;OACxD;KACF,CAAC;IACF,MAAMC,aAAa,GAAG,IAAIb,mBAAmB,EAAE;IAC/C;IACA;;;;;;;;IAQAS,QAAQ,CAACK,gBAAgB,CAAC,IAAIb,mBAAmB,CAACY,aAAa,CAAC,CAAC;IAEjE,MAAME,cAAc,GAAG,IAAIP,kBAAkB,EAAE;IAE/CC,QAAQ,CAACO,QAAQ,CAAC;MAChBD,cAAc;MACdE,UAAU,EAAE,IAAIrB,mBAAmB,CAAC;QAClCsB,WAAW,EAAE,CACX,IAAIrB,oBAAoB,EAAE,EAC1B,IAAIC,yBAAyB,EAAE;OAElC;KACF,CAAC;IAEFI,wBAAwB,CAAC;MACvBiB,cAAc,EAAEV,QAAQ;MACxBW,gBAAgB,EAAE,CAChBjB,0BAA0B,CAAC;QACzB,sCAAsC,EAAE;UACtCkB,4BAA4B,EAAE,IAAI;UAClCC,oBAAoB,EAAE;;OAEzB,CAAC;KAEL,CAAC;EACJ,CAAC;EAAA,gBA3CKf,cAAc;IAAA;EAAA;AAAA,GA2CnB;AAED,eAAeA,cAAc","names":["CompositePropagator","W3CBaggagePropagator","W3CTraceContextPropagator","WebTracerProvider","ConsoleSpanExporter","SimpleSpanProcessor","registerInstrumentations","getWebAutoInstrumentations","Resource","SemanticResourceAttributes","environment","FrontendTracer","ZoneContextManager","provider","resource","SERVICE_NAME","OTEL_SERVICE_NAME","traceExporter","addSpanProcessor","contextManager","register","propagator","propagators","tracerProvider","instrumentations","propagateTraceHeaderCorsUrls","clearTimingResources"],"sourceRoot":"","sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/src/utils/telemetry/FrontendTracer.ts"],"sourcesContent":["import {\n  CompositePropagator,\n  W3CBaggagePropagator,\n  W3CTraceContextPropagator,\n} from '@opentelemetry/core';\nimport { WebTracerProvider } from '@opentelemetry/sdk-trace-web';\nimport {\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from '@opentelemetry/sdk-trace-base';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { getWebAutoInstrumentations } from '@opentelemetry/auto-instrumentations-web';\nimport { Resource } from '@opentelemetry/resources';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-http';\n\nimport { environment } from './../../environments/environment';\n\nconst FrontendTracer = async () => {\n  const { ZoneContextManager } = await import('@opentelemetry/context-zone');\n\n  const provider = new WebTracerProvider({\n    resource: new Resource({\n      [SemanticResourceAttributes.SERVICE_NAME]: environment.OTEL_SERVICE_NAME,\n    }),\n  });\n  const traceExporter = new ConsoleSpanExporter();\n  //const traceExporter = new OTLPTraceExporter();\n  /* const traceExporter = new OTLPTraceExporter({\n    url: 'https://ingest.lightstep.com:443',\n    headers: {\n      'lightstep-access-token':\n        'dgWk8TFEi+CX+1fTzgWJdvljm9K20CjpWINXAyudQ8qXgyYCQpK3VgeH/0hdfOmcdukuMkk1/o4Mr7f0R5wyzDf8RaMXtGZY/lfzZVzm',\n    },\n  });\n  */\n  provider.addSpanProcessor(new SimpleSpanProcessor(traceExporter));\n\n  const contextManager = new ZoneContextManager();\n\n  provider.register({\n    contextManager,\n    propagator: new CompositePropagator({\n      propagators: [\n        new W3CBaggagePropagator(),\n        new W3CTraceContextPropagator(),\n      ],\n    }),\n  });\n\n  registerInstrumentations({\n    tracerProvider: provider,\n    instrumentations: [\n      getWebAutoInstrumentations({\n        '@opentelemetry/instrumentation-fetch': {\n          propagateTraceHeaderCorsUrls: /.*/,\n          clearTimingResources: true,\n        },\n      }),\n    ],\n  });\n};\n\nexport default FrontendTracer;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}