{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** No-op implementation of SpanProcessor */\nvar NoopSpanProcessor = /** @class */function () {\n  function NoopSpanProcessor() {}\n  NoopSpanProcessor.prototype.onStart = function (_span, _context) {};\n  NoopSpanProcessor.prototype.onEnd = function (_span) {};\n  NoopSpanProcessor.prototype.shutdown = function () {\n    return Promise.resolve();\n  };\n  NoopSpanProcessor.prototype.forceFlush = function () {\n    return Promise.resolve();\n  };\n  return NoopSpanProcessor;\n}();\nexport { NoopSpanProcessor };","map":{"version":3,"names":["NoopSpanProcessor","prototype","onStart","_span","_context","onEnd","shutdown","Promise","resolve","forceFlush"],"sources":["/Users/dimitris.finas/node_modules/@opentelemetry/sdk-trace-base/build/esm/export/NoopSpanProcessor.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** No-op implementation of SpanProcessor */\nvar NoopSpanProcessor = /** @class */ (function () {\n    function NoopSpanProcessor() {\n    }\n    NoopSpanProcessor.prototype.onStart = function (_span, _context) { };\n    NoopSpanProcessor.prototype.onEnd = function (_span) { };\n    NoopSpanProcessor.prototype.shutdown = function () {\n        return Promise.resolve();\n    };\n    NoopSpanProcessor.prototype.forceFlush = function () {\n        return Promise.resolve();\n    };\n    return NoopSpanProcessor;\n}());\nexport { NoopSpanProcessor };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,iBAAiB,GAAG,aAAe,YAAY;EAC/C,SAASA,iBAAiB,GAAG,CAC7B;EACAA,iBAAiB,CAACC,SAAS,CAACC,OAAO,GAAG,UAAUC,KAAK,EAAEC,QAAQ,EAAE,CAAE,CAAC;EACpEJ,iBAAiB,CAACC,SAAS,CAACI,KAAK,GAAG,UAAUF,KAAK,EAAE,CAAE,CAAC;EACxDH,iBAAiB,CAACC,SAAS,CAACK,QAAQ,GAAG,YAAY;IAC/C,OAAOC,OAAO,CAACC,OAAO,EAAE;EAC5B,CAAC;EACDR,iBAAiB,CAACC,SAAS,CAACQ,UAAU,GAAG,YAAY;IACjD,OAAOF,OAAO,CAACC,OAAO,EAAE;EAC5B,CAAC;EACD,OAAOR,iBAAiB;AAC5B,CAAC,EAAG;AACJ,SAASA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}