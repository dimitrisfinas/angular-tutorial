{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, trace, TraceFlags } from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\nexport var TRACE_PARENT_HEADER = 'traceparent';\nexport var TRACE_STATE_HEADER = 'tracestate';\nvar VERSION = '00';\nvar VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nvar TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nvar PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nvar FLAGS_PART = '[\\\\da-f]{2}';\nvar TRACE_PARENT_REGEX = new RegExp(\"^\\\\s?(\" + VERSION_PART + \")-(\" + TRACE_ID_PART + \")-(\" + PARENT_ID_PART + \")-(\" + FLAGS_PART + \")(-.*)?\\\\s?$\");\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent) {\n  var match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16)\n  };\n}\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nvar W3CTraceContextPropagator = /** @class */function () {\n  function W3CTraceContextPropagator() {}\n  W3CTraceContextPropagator.prototype.inject = function (context, carrier, setter) {\n    var spanContext = trace.getSpanContext(context);\n    if (!spanContext || isTracingSuppressed(context) || !isSpanContextValid(spanContext)) return;\n    var traceParent = VERSION + \"-\" + spanContext.traceId + \"-\" + spanContext.spanId + \"-0\" + Number(spanContext.traceFlags || TraceFlags.NONE).toString(16);\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n    }\n  };\n  W3CTraceContextPropagator.prototype.extract = function (context, carrier, getter) {\n    var traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    var traceParent = Array.isArray(traceParentHeader) ? traceParentHeader[0] : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    var spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n    spanContext.isRemote = true;\n    var traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      var state = Array.isArray(traceStateHeader) ? traceStateHeader.join(',') : traceStateHeader;\n      spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n    }\n    return trace.setSpanContext(context, spanContext);\n  };\n  W3CTraceContextPropagator.prototype.fields = function () {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  };\n  return W3CTraceContextPropagator;\n}();\nexport { W3CTraceContextPropagator };","map":{"version":3,"names":["isSpanContextValid","trace","TraceFlags","isTracingSuppressed","TraceState","TRACE_PARENT_HEADER","TRACE_STATE_HEADER","VERSION","VERSION_PART","TRACE_ID_PART","PARENT_ID_PART","FLAGS_PART","TRACE_PARENT_REGEX","RegExp","parseTraceParent","traceParent","match","exec","traceId","spanId","traceFlags","parseInt","W3CTraceContextPropagator","prototype","inject","context","carrier","setter","spanContext","getSpanContext","Number","NONE","toString","set","traceState","serialize","extract","getter","traceParentHeader","get","Array","isArray","isRemote","traceStateHeader","state","join","undefined","setSpanContext","fields"],"sources":["/Users/dimitris.finas/git/lightstep/cloud/aws/angular/angular-tutorial/node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, trace, TraceFlags, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\nexport var TRACE_PARENT_HEADER = 'traceparent';\nexport var TRACE_STATE_HEADER = 'tracestate';\nvar VERSION = '00';\nvar VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nvar TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nvar PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nvar FLAGS_PART = '[\\\\da-f]{2}';\nvar TRACE_PARENT_REGEX = new RegExp(\"^\\\\s?(\" + VERSION_PART + \")-(\" + TRACE_ID_PART + \")-(\" + PARENT_ID_PART + \")-(\" + FLAGS_PART + \")(-.*)?\\\\s?$\");\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent) {\n    var match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nvar W3CTraceContextPropagator = /** @class */ (function () {\n    function W3CTraceContextPropagator() {\n    }\n    W3CTraceContextPropagator.prototype.inject = function (context, carrier, setter) {\n        var spanContext = trace.getSpanContext(context);\n        if (!spanContext ||\n            isTracingSuppressed(context) ||\n            !isSpanContextValid(spanContext))\n            return;\n        var traceParent = VERSION + \"-\" + spanContext.traceId + \"-\" + spanContext.spanId + \"-0\" + Number(spanContext.traceFlags || TraceFlags.NONE).toString(16);\n        setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    };\n    W3CTraceContextPropagator.prototype.extract = function (context, carrier, getter) {\n        var traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        var traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        var spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        var traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            var state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return trace.setSpanContext(context, spanContext);\n    };\n    W3CTraceContextPropagator.prototype.fields = function () {\n        return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n    };\n    return W3CTraceContextPropagator;\n}());\nexport { W3CTraceContextPropagator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}